if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.170";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.into_array;
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6369__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6369 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6370__i = 0, G__6370__a = new Array(arguments.length - 0);
        while (G__6370__i < G__6370__a.length) {
          G__6370__a[G__6370__i] = arguments[G__6370__i + 0];
          ++G__6370__i;
        }
        args = new cljs.core.IndexedSeq(G__6370__a, 0);
      }
      return G__6369__delegate.call(this, args);
    };
    G__6369.cljs$lang$maxFixedArity = 0;
    G__6369.cljs$lang$applyTo = function(arglist__6371) {
      var args = cljs.core.seq(arglist__6371);
      return G__6369__delegate(args);
    };
    G__6369.cljs$core$IFn$_invoke$arity$variadic = G__6369__delegate;
    return G__6369;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__6372__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6372 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6373__i = 0, G__6373__a = new Array(arguments.length - 0);
        while (G__6373__i < G__6373__a.length) {
          G__6373__a[G__6373__i] = arguments[G__6373__i + 0];
          ++G__6373__i;
        }
        args = new cljs.core.IndexedSeq(G__6373__a, 0);
      }
      return G__6372__delegate.call(this, args);
    };
    G__6372.cljs$lang$maxFixedArity = 0;
    G__6372.cljs$lang$applyTo = function(arglist__6374) {
      var args = cljs.core.seq(arglist__6374);
      return G__6372__delegate(args);
    };
    G__6372.cljs$core$IFn$_invoke$arity$variadic = G__6372__delegate;
    return G__6372;
  }();
  return null;
};
cljs.core._STAR_1;
cljs.core._STAR_2;
cljs.core._STAR_3;
cljs.core._STAR_e;
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.instance_QMARK_;
cljs.core.Keyword;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4248__auto__ = ty;
    if (cljs.core.truth_(and__4248__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4248__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args6375 = [];
  var len__5318__auto___6378 = arguments.length;
  var i__5319__auto___6379 = 0;
  while (true) {
    if (i__5319__auto___6379 < len__5318__auto___6378) {
      args6375.push(arguments[i__5319__auto___6379]);
      var G__6380 = i__5319__auto___6379 + 1;
      i__5319__auto___6379 = G__6380;
      continue;
    } else {
    }
    break;
  }
  var G__6377 = args6375.length;
  switch(G__6377) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6375.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5163__auto___6382 = len;
  var i_6383 = 0;
  while (true) {
    if (i_6383 < n__5163__auto___6382) {
      new_arr[i_6383] = arr[i_6383];
      var G__6384 = i_6383 + 1;
      i_6383 = G__6384;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6385 = i + 1;
      i = G__6385;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.apply;
cljs.core.aget = function cljs$core$aget(var_args) {
  var args6386 = [];
  var len__5318__auto___6395 = arguments.length;
  var i__5319__auto___6396 = 0;
  while (true) {
    if (i__5319__auto___6396 < len__5318__auto___6395) {
      args6386.push(arguments[i__5319__auto___6396]);
      var G__6397 = i__5319__auto___6396 + 1;
      i__5319__auto___6396 = G__6397;
      continue;
    } else {
    }
    break;
  }
  var G__6391 = args6386.length;
  switch(G__6391) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6386.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__6392 = cljs.core.aget;
  var G__6393 = array[i];
  var G__6394 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6392, G__6393, G__6394) : cljs.core.apply.call(null, G__6392, G__6393, G__6394);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6387) {
  var G__6388 = cljs.core.first(seq6387);
  var seq6387__$1 = cljs.core.next(seq6387);
  var G__6389 = cljs.core.first(seq6387__$1);
  var seq6387__$2 = cljs.core.next(seq6387__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__6388, G__6389, seq6387__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args6399 = [];
  var len__5318__auto___6410 = arguments.length;
  var i__5319__auto___6411 = 0;
  while (true) {
    if (i__5319__auto___6411 < len__5318__auto___6410) {
      args6399.push(arguments[i__5319__auto___6411]);
      var G__6412 = i__5319__auto___6411 + 1;
      i__5319__auto___6411 = G__6412;
      continue;
    } else {
    }
    break;
  }
  var G__6405 = args6399.length;
  switch(G__6405) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6399.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__6406 = cljs.core.aset;
  var G__6407 = array[idx];
  var G__6408 = idx2;
  var G__6409 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6406, G__6407, G__6408, G__6409) : cljs.core.apply.call(null, G__6406, G__6407, G__6408, G__6409);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6400) {
  var G__6401 = cljs.core.first(seq6400);
  var seq6400__$1 = cljs.core.next(seq6400);
  var G__6402 = cljs.core.first(seq6400__$1);
  var seq6400__$2 = cljs.core.next(seq6400__$1);
  var G__6403 = cljs.core.first(seq6400__$2);
  var seq6400__$3 = cljs.core.next(seq6400__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__6401, G__6402, G__6403, seq6400__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.reduce;
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args6414 = [];
  var len__5318__auto___6420 = arguments.length;
  var i__5319__auto___6421 = 0;
  while (true) {
    if (i__5319__auto___6421 < len__5318__auto___6420) {
      args6414.push(arguments[i__5319__auto___6421]);
      var G__6422 = i__5319__auto___6421 + 1;
      i__5319__auto___6421 = G__6422;
      continue;
    } else {
    }
    break;
  }
  var G__6416 = args6414.length;
  switch(G__6416) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6414.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__6417 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__6418 = [];
  var G__6419 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6417, G__6418, G__6419) : cljs.core.reduce.call(null, G__6417, G__6418, G__6419);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___6427 = arguments.length;
  var i__5319__auto___6428 = 0;
  while (true) {
    if (i__5319__auto___6428 < len__5318__auto___6427) {
      args__5325__auto__.push(arguments[i__5319__auto___6428]);
      var G__6429 = i__5319__auto___6428 + 1;
      i__5319__auto___6428 = G__6429;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 2 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5326__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6424) {
  var G__6425 = cljs.core.first(seq6424);
  var seq6424__$1 = cljs.core.next(seq6424);
  var G__6426 = cljs.core.first(seq6424__$1);
  var seq6424__$2 = cljs.core.next(seq6424__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__6425, G__6426, seq6424__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args6430 = [];
  var len__5318__auto___6433 = arguments.length;
  var i__5319__auto___6434 = 0;
  while (true) {
    if (i__5319__auto___6434 < len__5318__auto___6433) {
      args6430.push(arguments[i__5319__auto___6434]);
      var G__6435 = i__5319__auto___6434 + 1;
      i__5319__auto___6434 = G__6435;
      continue;
    } else {
    }
    break;
  }
  var G__6432 = args6430.length;
  switch(G__6432) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6430.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4916__auto__.call(null, this$);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4916__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4916__auto__.call(null, this$, a);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4916__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4916__auto__.call(null, this$, a, b);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4916__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4916__auto__.call(null, this$, a, b, c);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4916__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4916__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4916__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4916__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4916__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4916__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._invoke[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4916__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4916__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4916__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4915__auto__ = value == null ? null : value;
    var m__4916__auto__ = cljs.core._clone[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4916__auto__.call(null, value);
    } else {
      var m__4916__auto____$1 = cljs.core._clone["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4916__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._count[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._count["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._empty[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._empty["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._conj[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4916__auto__.call(null, coll, o);
    } else {
      var m__4916__auto____$1 = cljs.core._conj["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4916__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args6437 = [];
  var len__5318__auto___6440 = arguments.length;
  var i__5319__auto___6441 = 0;
  while (true) {
    if (i__5319__auto___6441 < len__5318__auto___6440) {
      args6437.push(arguments[i__5319__auto___6441]);
      var G__6442 = i__5319__auto___6441 + 1;
      i__5319__auto___6441 = G__6442;
      continue;
    } else {
    }
    break;
  }
  var G__6439 = args6437.length;
  switch(G__6439) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6437.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._nth[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4916__auto__.call(null, coll, n);
    } else {
      var m__4916__auto____$1 = cljs.core._nth["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4916__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._nth[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4916__auto__.call(null, coll, n, not_found);
    } else {
      var m__4916__auto____$1 = cljs.core._nth["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4916__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._first[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._first["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._rest[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._rest["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._next[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._next["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args6444 = [];
  var len__5318__auto___6447 = arguments.length;
  var i__5319__auto___6448 = 0;
  while (true) {
    if (i__5319__auto___6448 < len__5318__auto___6447) {
      args6444.push(arguments[i__5319__auto___6448]);
      var G__6449 = i__5319__auto___6448 + 1;
      i__5319__auto___6448 = G__6449;
      continue;
    } else {
    }
    break;
  }
  var G__6446 = args6444.length;
  switch(G__6446) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6444.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._lookup[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4916__auto__.call(null, o, k);
    } else {
      var m__4916__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4916__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._lookup[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4916__auto__.call(null, o, k, not_found);
    } else {
      var m__4916__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4916__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4916__auto__.call(null, coll, k);
    } else {
      var m__4916__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4916__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._assoc[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4916__auto__.call(null, coll, k, v);
    } else {
      var m__4916__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4916__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._dissoc[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4916__auto__.call(null, coll, k);
    } else {
      var m__4916__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4916__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._key[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._key["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._val[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._val["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._disjoin[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4916__auto__.call(null, coll, v);
    } else {
      var m__4916__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4916__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._peek[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._peek["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._pop[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._pop["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._assoc_n[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4916__auto__.call(null, coll, n, val);
    } else {
      var m__4916__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4916__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._deref[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto__.call(null, o);
    } else {
      var m__4916__auto____$1 = cljs.core._deref["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4916__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4916__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4916__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._meta[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto__.call(null, o);
    } else {
      var m__4916__auto____$1 = cljs.core._meta["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._with_meta[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4916__auto__.call(null, o, meta);
    } else {
      var m__4916__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4916__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args6451 = [];
  var len__5318__auto___6454 = arguments.length;
  var i__5319__auto___6455 = 0;
  while (true) {
    if (i__5319__auto___6455 < len__5318__auto___6454) {
      args6451.push(arguments[i__5319__auto___6455]);
      var G__6456 = i__5319__auto___6455 + 1;
      i__5319__auto___6455 = G__6456;
      continue;
    } else {
    }
    break;
  }
  var G__6453 = args6451.length;
  switch(G__6453) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6451.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._reduce[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4916__auto__.call(null, coll, f);
    } else {
      var m__4916__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4916__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._reduce[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4916__auto__.call(null, coll, f, start);
    } else {
      var m__4916__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4916__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4916__auto__.call(null, coll, f, init);
    } else {
      var m__4916__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4916__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._equiv[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4916__auto__.call(null, o, other);
    } else {
      var m__4916__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4916__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._hash[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto__.call(null, o);
    } else {
      var m__4916__auto____$1 = cljs.core._hash["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._seq[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto__.call(null, o);
    } else {
      var m__4916__auto____$1 = cljs.core._seq["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4916__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._rseq[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4916__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4916__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4916__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4916__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4916__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4916__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._entry_key[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4916__auto__.call(null, coll, entry);
    } else {
      var m__4916__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4916__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._comparator[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4915__auto__ = writer == null ? null : writer;
    var m__4916__auto__ = cljs.core._write[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4916__auto__.call(null, writer, s);
    } else {
      var m__4916__auto____$1 = cljs.core._write["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4916__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4915__auto__ = writer == null ? null : writer;
    var m__4916__auto__ = cljs.core._flush[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4916__auto__.call(null, writer);
    } else {
      var m__4916__auto____$1 = cljs.core._flush["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4916__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._pr_writer[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4916__auto__.call(null, o, writer, opts);
    } else {
      var m__4916__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4916__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4915__auto__ = d == null ? null : d;
    var m__4916__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__4916__auto__.call(null, d);
    } else {
      var m__4916__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__4916__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._notify_watches[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4916__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4916__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4916__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._add_watch[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4916__auto__.call(null, this$, key, f);
    } else {
      var m__4916__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4916__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4915__auto__ = this$ == null ? null : this$;
    var m__4916__auto__ = cljs.core._remove_watch[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4916__auto__.call(null, this$, key);
    } else {
      var m__4916__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4916__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._as_transient[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4916__auto__.call(null, tcoll, val);
    } else {
      var m__4916__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4916__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4916__auto__.call(null, tcoll);
    } else {
      var m__4916__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4916__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4916__auto__.call(null, tcoll, key, val);
    } else {
      var m__4916__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4916__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4916__auto__.call(null, tcoll, key);
    } else {
      var m__4916__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4916__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4916__auto__.call(null, tcoll, n, val);
    } else {
      var m__4916__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4916__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4916__auto__.call(null, tcoll);
    } else {
      var m__4916__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4916__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4915__auto__ = tcoll == null ? null : tcoll;
    var m__4916__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4916__auto__.call(null, tcoll, v);
    } else {
      var m__4916__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4916__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._compare[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4916__auto__.call(null, x, y);
    } else {
      var m__4916__auto____$1 = cljs.core._compare["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4916__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._drop_first[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._chunked_first[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._chunked_next[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._name[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto__.call(null, x);
    } else {
      var m__4916__auto____$1 = cljs.core._name["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._namespace[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto__.call(null, x);
    } else {
      var m__4916__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4916__auto__.call(null, o, new_value);
    } else {
      var m__4916__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4916__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args6458 = [];
  var len__5318__auto___6461 = arguments.length;
  var i__5319__auto___6462 = 0;
  while (true) {
    if (i__5319__auto___6462 < len__5318__auto___6461) {
      args6458.push(arguments[i__5319__auto___6462]);
      var G__6463 = i__5319__auto___6462 + 1;
      i__5319__auto___6462 = G__6463;
      continue;
    } else {
    }
    break;
  }
  var G__6460 = args6458.length;
  switch(G__6460) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6458.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4916__auto__.call(null, o, f);
    } else {
      var m__4916__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4916__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4916__auto__.call(null, o, f, a);
    } else {
      var m__4916__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4916__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4916__auto__.call(null, o, f, a, b);
    } else {
      var m__4916__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4916__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4916__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4916__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4916__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4915__auto__ = o == null ? null : o;
    var m__4916__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4916__auto__.call(null, o, new_value);
    } else {
      var m__4916__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4916__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4915__auto__ = coll == null ? null : coll;
    var m__4916__auto__ = cljs.core._iterator[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto__.call(null, coll);
    } else {
      var m__4916__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4916__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6465 = i + 2;
        var G__6466 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6465;
        h1 = G__6466;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.list;
cljs.core.Symbol;
cljs.core._EQ_;
cljs.core.compare;
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6469 = i + 1;
          var G__6470 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__6469;
          hash = G__6470;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4248__auto__ = cljs.core.not(a.ns);
      if (and__4248__auto__) {
        return b.ns;
      } else {
        return and__4248__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6483 = a.ns;
            var G__6484 = b.ns;
            return goog.array.defaultCompare(G__6483, G__6484);
          }();
          if (0 === nsc) {
            var G__6485 = a.name;
            var G__6486 = b.name;
            return goog.array.defaultCompare(G__6485, G__6486);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6487 = a.name;
        var G__6488 = b.name;
        return goog.array.defaultCompare(G__6487, G__6488);
      }
    }
  }
};
cljs.core.get;
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__6490 = null;
  var G__6490__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__6490__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__6490 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6490__2.call(this, self__, coll);
      case 3:
        return G__6490__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6490.cljs$core$IFn$_invoke$arity$2 = G__6490__2;
  G__6490.cljs$core$IFn$_invoke$arity$3 = G__6490__3;
  return G__6490;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6489) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6489)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4695__auto__ = self__._hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args6491 = [];
  var len__5318__auto___6494 = arguments.length;
  var i__5319__auto___6495 = 0;
  while (true) {
    if (i__5319__auto___6495 < len__5318__auto___6494) {
      args6491.push(arguments[i__5319__auto___6495]);
      var G__6496 = i__5319__auto___6495 + 1;
      i__5319__auto___6495 = G__6496;
      continue;
    } else {
    }
    break;
  }
  var G__6493 = args6491.length;
  switch(G__6493) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6491.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__6499 = this$__$1.sym;
    var G__6500 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__6499, G__6500) : cljs.core._EQ_.call(null, G__6499, G__6500);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__6545 = null;
  var G__6545__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__6545__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__6545__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__6545__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__6545__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__6545__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__6545__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__6545__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__6545__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__6545__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6545__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6545__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6545__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6545__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6545__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6545__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6545__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6545__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6545__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6545__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6545__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6545__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6501 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__6502 = a;
    var G__6503 = b;
    var G__6504 = c;
    var G__6505 = d;
    var G__6506 = e;
    var G__6507 = f;
    var G__6508 = g;
    var G__6509 = h;
    var G__6510 = i;
    var G__6511 = j;
    var G__6512 = k;
    var G__6513 = l;
    var G__6514 = m;
    var G__6515 = n;
    var G__6516 = o;
    var G__6517 = p;
    var G__6518 = q;
    var G__6519 = r;
    var G__6520 = s;
    var G__6521 = t;
    var G__6522 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6501, G__6502, G__6503, G__6504, G__6505, G__6506, G__6507, G__6508, G__6509, G__6510, G__6511, G__6512, G__6513, G__6514, G__6515, G__6516, G__6517, G__6518, G__6519, G__6520, G__6521, G__6522) : cljs.core.apply.call(null, G__6501, G__6502, G__6503, G__6504, G__6505, G__6506, G__6507, G__6508, G__6509, G__6510, G__6511, G__6512, G__6513, G__6514, G__6515, G__6516, G__6517, G__6518, G__6519, 
    G__6520, G__6521, G__6522);
  };
  G__6545 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6545__1.call(this, self__);
      case 2:
        return G__6545__2.call(this, self__, a);
      case 3:
        return G__6545__3.call(this, self__, a, b);
      case 4:
        return G__6545__4.call(this, self__, a, b, c);
      case 5:
        return G__6545__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6545__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6545__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6545__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6545__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6545__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6545__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6545__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6545__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6545__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6545__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6545__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6545__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6545__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6545__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6545__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6545__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6545__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6545.cljs$core$IFn$_invoke$arity$1 = G__6545__1;
  G__6545.cljs$core$IFn$_invoke$arity$2 = G__6545__2;
  G__6545.cljs$core$IFn$_invoke$arity$3 = G__6545__3;
  G__6545.cljs$core$IFn$_invoke$arity$4 = G__6545__4;
  G__6545.cljs$core$IFn$_invoke$arity$5 = G__6545__5;
  G__6545.cljs$core$IFn$_invoke$arity$6 = G__6545__6;
  G__6545.cljs$core$IFn$_invoke$arity$7 = G__6545__7;
  G__6545.cljs$core$IFn$_invoke$arity$8 = G__6545__8;
  G__6545.cljs$core$IFn$_invoke$arity$9 = G__6545__9;
  G__6545.cljs$core$IFn$_invoke$arity$10 = G__6545__10;
  G__6545.cljs$core$IFn$_invoke$arity$11 = G__6545__11;
  G__6545.cljs$core$IFn$_invoke$arity$12 = G__6545__12;
  G__6545.cljs$core$IFn$_invoke$arity$13 = G__6545__13;
  G__6545.cljs$core$IFn$_invoke$arity$14 = G__6545__14;
  G__6545.cljs$core$IFn$_invoke$arity$15 = G__6545__15;
  G__6545.cljs$core$IFn$_invoke$arity$16 = G__6545__16;
  G__6545.cljs$core$IFn$_invoke$arity$17 = G__6545__17;
  G__6545.cljs$core$IFn$_invoke$arity$18 = G__6545__18;
  G__6545.cljs$core$IFn$_invoke$arity$19 = G__6545__19;
  G__6545.cljs$core$IFn$_invoke$arity$20 = G__6545__20;
  G__6545.cljs$core$IFn$_invoke$arity$21 = G__6545__21;
  G__6545.cljs$core$IFn$_invoke$arity$22 = G__6545__22;
  return G__6545;
}();
cljs.core.Var.prototype.apply = function(self__, args6498) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6498)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6523 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__6524 = a;
  var G__6525 = b;
  var G__6526 = c;
  var G__6527 = d;
  var G__6528 = e;
  var G__6529 = f;
  var G__6530 = g;
  var G__6531 = h;
  var G__6532 = i;
  var G__6533 = j;
  var G__6534 = k;
  var G__6535 = l;
  var G__6536 = m;
  var G__6537 = n;
  var G__6538 = o;
  var G__6539 = p;
  var G__6540 = q;
  var G__6541 = r;
  var G__6542 = s;
  var G__6543 = t;
  var G__6544 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6523, G__6524, G__6525, G__6526, G__6527, G__6528, G__6529, G__6530, G__6531, G__6532, G__6533, G__6534, G__6535, G__6536, G__6537, G__6538, G__6539, G__6540, G__6541, G__6542, G__6543, G__6544) : cljs.core.apply.call(null, G__6523, G__6524, G__6525, G__6526, G__6527, G__6528, G__6529, G__6530, G__6531, G__6532, G__6533, G__6534, G__6535, G__6536, G__6537, G__6538, G__6539, G__6540, G__6541, 
  G__6542, G__6543, G__6544);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.array_seq;
cljs.core.prim_seq;
cljs.core.IndexedSeq;
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args6558 = [];
  var len__5318__auto___6564 = arguments.length;
  var i__5319__auto___6565 = 0;
  while (true) {
    if (i__5319__auto___6565 < len__5318__auto___6564) {
      args6558.push(arguments[i__5319__auto___6565]);
      var G__6566 = i__5319__auto___6565 + 1;
      i__5319__auto___6565 = G__6566;
      continue;
    } else {
    }
    break;
  }
  var G__6563 = args6558.length;
  switch(G__6563) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6558.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__6568 = y;
        var G__6569 = cljs.core.first(more);
        var G__6570 = cljs.core.next(more);
        x = G__6568;
        y = G__6569;
        more = G__6570;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq6559) {
  var G__6560 = cljs.core.first(seq6559);
  var seq6559__$1 = cljs.core.next(seq6559);
  var G__6561 = cljs.core.first(seq6559__$1);
  var seq6559__$2 = cljs.core.next(seq6559__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6560, G__6561, seq6559__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.es6_iterator_seq;
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6571 = n + 1;
      var G__6572 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6573 = cljs.core.next(coll__$1);
      n = G__6571;
      hash_code = G__6572;
      coll__$1 = G__6573;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6574 = n + 1;
      var G__6575 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6576 = cljs.core.next(coll__$1);
      n = G__6574;
      hash_code = G__6575;
      coll__$1 = G__6576;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.hash_map;
cljs.core.list;
cljs.core.equiv_sequential;
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__6577 = this$__$1.valueOf();
    var G__6578 = other.valueOf();
    return goog.array.defaultCompare(G__6577, G__6578);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.with_meta;
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.deref;
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args6579 = [];
  var len__5318__auto___6588 = arguments.length;
  var i__5319__auto___6589 = 0;
  while (true) {
    if (i__5319__auto___6589 < len__5318__auto___6588) {
      args6579.push(arguments[i__5319__auto___6589]);
      var G__6590 = i__5319__auto___6589 + 1;
      i__5319__auto___6589 = G__6590;
      continue;
    } else {
    }
    break;
  }
  var G__6581 = args6579.length;
  switch(G__6581) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6579.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6582 = val;
          var G__6583 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6582, G__6583) : f.call(null, G__6582, G__6583);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6592 = nval;
          var G__6593 = n + 1;
          val = G__6592;
          n = G__6593;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6584 = val__$1;
        var G__6585 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6584, G__6585) : f.call(null, G__6584, G__6585);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6594 = nval;
        var G__6595 = n + 1;
        val__$1 = G__6594;
        n = G__6595;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6586 = val__$1;
        var G__6587 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6586, G__6587) : f.call(null, G__6586, G__6587);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6596 = nval;
        var G__6597 = n + 1;
        val__$1 = G__6596;
        n = G__6597;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args6598 = [];
  var len__5318__auto___6607 = arguments.length;
  var i__5319__auto___6608 = 0;
  while (true) {
    if (i__5319__auto___6608 < len__5318__auto___6607) {
      args6598.push(arguments[i__5319__auto___6608]);
      var G__6609 = i__5319__auto___6608 + 1;
      i__5319__auto___6608 = G__6609;
      continue;
    } else {
    }
    break;
  }
  var G__6600 = args6598.length;
  switch(G__6600) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6598.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6601 = val;
          var G__6602 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6601, G__6602) : f.call(null, G__6601, G__6602);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6611 = nval;
          var G__6612 = n + 1;
          val = G__6611;
          n = G__6612;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6603 = val__$1;
        var G__6604 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6603, G__6604) : f.call(null, G__6603, G__6604);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6613 = nval;
        var G__6614 = n + 1;
        val__$1 = G__6613;
        n = G__6614;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6605 = val__$1;
        var G__6606 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6605, G__6606) : f.call(null, G__6605, G__6606);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6615 = nval;
        var G__6616 = n + 1;
        val__$1 = G__6615;
        n = G__6616;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.hash_coll;
cljs.core.cons;
cljs.core.RSeq;
cljs.core.List;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4591__auto__ = 0;
  var y__4592__auto__ = self__.arr.length - self__.i;
  return x__4591__auto__ > y__4592__auto__ ? x__4591__auto__ : y__4592__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args6621 = [];
  var len__5318__auto___6624 = arguments.length;
  var i__5319__auto___6625 = 0;
  while (true) {
    if (i__5319__auto___6625 < len__5318__auto___6624) {
      args6621.push(arguments[i__5319__auto___6625]);
      var G__6626 = i__5319__auto___6625 + 1;
      i__5319__auto___6625 = G__6626;
      continue;
    } else {
    }
    break;
  }
  var G__6623 = args6621.length;
  switch(G__6623) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6621.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args6628 = [];
  var len__5318__auto___6631 = arguments.length;
  var i__5319__auto___6632 = 0;
  while (true) {
    if (i__5319__auto___6632 < len__5318__auto___6631) {
      args6628.push(arguments[i__5319__auto___6632]);
      var G__6633 = i__5319__auto___6632 + 1;
      i__5319__auto___6632 = G__6633;
      continue;
    } else {
    }
    break;
  }
  var G__6630 = args6628.length;
  switch(G__6630) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6628.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.with_meta;
cljs.core.seq_reduce;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__6635 = cljs.core.List.EMPTY;
  var G__6636 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6635, G__6636) : cljs.core.with_meta.call(null, G__6635, G__6636);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6637 = sn;
      s = G__6637;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args6638 = [];
  var len__5318__auto___6644 = arguments.length;
  var i__5319__auto___6645 = 0;
  while (true) {
    if (i__5319__auto___6645 < len__5318__auto___6644) {
      args6638.push(arguments[i__5319__auto___6645]);
      var G__6646 = i__5319__auto___6645 + 1;
      i__5319__auto___6645 = G__6646;
      continue;
    } else {
    }
    break;
  }
  var G__6643 = args6638.length;
  switch(G__6643) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6638.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6648 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__6649 = cljs.core.first(xs);
      var G__6650 = cljs.core.next(xs);
      coll = G__6648;
      x = G__6649;
      xs = G__6650;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq6639) {
  var G__6640 = cljs.core.first(seq6639);
  var seq6639__$1 = cljs.core.next(seq6639);
  var G__6641 = cljs.core.first(seq6639__$1);
  var seq6639__$2 = cljs.core.next(seq6639__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__6640, G__6641, seq6639__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6651 = cljs.core.next(s);
      var G__6652 = acc + 1;
      s = G__6651;
      acc = G__6652;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args6657 = [];
  var len__5318__auto___6660 = arguments.length;
  var i__5319__auto___6661 = 0;
  while (true) {
    if (i__5319__auto___6661 < len__5318__auto___6660) {
      args6657.push(arguments[i__5319__auto___6661]);
      var G__6662 = i__5319__auto___6661 + 1;
      i__5319__auto___6661 = G__6662;
      continue;
    } else {
    }
    break;
  }
  var G__6659 = args6657.length;
  switch(G__6659) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6657.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6664 = cljs.core.next(coll);
            var G__6665 = n - 1;
            coll = G__6664;
            n = G__6665;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6666 = cljs.core.next(coll);
            var G__6667 = n - 1;
            var G__6668 = not_found;
            coll = G__6666;
            n = G__6667;
            not_found = G__6668;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args6669 = [];
  var len__5318__auto___6676 = arguments.length;
  var i__5319__auto___6677 = 0;
  while (true) {
    if (i__5319__auto___6677 < len__5318__auto___6676) {
      args6669.push(arguments[i__5319__auto___6677]);
      var G__6678 = i__5319__auto___6677 + 1;
      i__5319__auto___6677 = G__6678;
      continue;
    } else {
    }
    break;
  }
  var G__6671 = args6669.length;
  switch(G__6671) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6669.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__6680 = n__$1 - 1;
      var G__6681 = cljs.core.rest(xs);
      n__$1 = G__6680;
      xs = G__6681;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args6682 = [];
  var len__5318__auto___6687 = arguments.length;
  var i__5319__auto___6688 = 0;
  while (true) {
    if (i__5319__auto___6688 < len__5318__auto___6687) {
      args6682.push(arguments[i__5319__auto___6688]);
      var G__6689 = i__5319__auto___6688 + 1;
      i__5319__auto___6688 = G__6689;
      continue;
    } else {
    }
    break;
  }
  var G__6684 = args6682.length;
  switch(G__6684) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6682.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.PersistentHashMap;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args6691 = [];
  var len__5318__auto___6698 = arguments.length;
  var i__5319__auto___6699 = 0;
  while (true) {
    if (i__5319__auto___6699 < len__5318__auto___6698) {
      args6691.push(arguments[i__5319__auto___6699]);
      var G__6700 = i__5319__auto___6699 + 1;
      i__5319__auto___6699 = G__6700;
      continue;
    } else {
    }
    break;
  }
  var G__6697 = args6691.length;
  switch(G__6697) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6691.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__6702 = ret;
      var G__6703 = cljs.core.first(kvs);
      var G__6704 = cljs.core.second(kvs);
      var G__6705 = cljs.core.nnext(kvs);
      coll = G__6702;
      k = G__6703;
      v = G__6704;
      kvs = G__6705;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq6692) {
  var G__6693 = cljs.core.first(seq6692);
  var seq6692__$1 = cljs.core.next(seq6692);
  var G__6694 = cljs.core.first(seq6692__$1);
  var seq6692__$2 = cljs.core.next(seq6692__$1);
  var G__6695 = cljs.core.first(seq6692__$2);
  var seq6692__$3 = cljs.core.next(seq6692__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__6693, G__6694, G__6695, seq6692__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args6706 = [];
  var len__5318__auto___6712 = arguments.length;
  var i__5319__auto___6713 = 0;
  while (true) {
    if (i__5319__auto___6713 < len__5318__auto___6712) {
      args6706.push(arguments[i__5319__auto___6713]);
      var G__6714 = i__5319__auto___6713 + 1;
      i__5319__auto___6713 = G__6714;
      continue;
    } else {
    }
    break;
  }
  var G__6711 = args6706.length;
  switch(G__6711) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6706.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6716 = ret;
        var G__6717 = cljs.core.first(ks);
        var G__6718 = cljs.core.next(ks);
        coll = G__6716;
        k = G__6717;
        ks = G__6718;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq6707) {
  var G__6708 = cljs.core.first(seq6707);
  var seq6707__$1 = cljs.core.next(seq6707);
  var G__6709 = cljs.core.first(seq6707__$1);
  var seq6707__$2 = cljs.core.next(seq6707__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__6708, G__6709, seq6707__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4260__auto__ = goog.isFunction(f);
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__6724 = null;
  var G__6724__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6724__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__6724__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__6724__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__6724__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__6724__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__6724__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6724__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6724__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6724__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6724__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6724__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6724__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6724__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6724__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6724__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6724__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6724__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6724__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6724__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6724__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6724__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6724 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6724__1.call(this, self__);
      case 2:
        return G__6724__2.call(this, self__, a);
      case 3:
        return G__6724__3.call(this, self__, a, b);
      case 4:
        return G__6724__4.call(this, self__, a, b, c);
      case 5:
        return G__6724__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6724__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6724__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6724__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6724__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6724__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6724__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6724__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6724__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6724__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6724__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6724__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6724__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6724__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6724__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6724__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6724__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6724__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6724.cljs$core$IFn$_invoke$arity$1 = G__6724__1;
  G__6724.cljs$core$IFn$_invoke$arity$2 = G__6724__2;
  G__6724.cljs$core$IFn$_invoke$arity$3 = G__6724__3;
  G__6724.cljs$core$IFn$_invoke$arity$4 = G__6724__4;
  G__6724.cljs$core$IFn$_invoke$arity$5 = G__6724__5;
  G__6724.cljs$core$IFn$_invoke$arity$6 = G__6724__6;
  G__6724.cljs$core$IFn$_invoke$arity$7 = G__6724__7;
  G__6724.cljs$core$IFn$_invoke$arity$8 = G__6724__8;
  G__6724.cljs$core$IFn$_invoke$arity$9 = G__6724__9;
  G__6724.cljs$core$IFn$_invoke$arity$10 = G__6724__10;
  G__6724.cljs$core$IFn$_invoke$arity$11 = G__6724__11;
  G__6724.cljs$core$IFn$_invoke$arity$12 = G__6724__12;
  G__6724.cljs$core$IFn$_invoke$arity$13 = G__6724__13;
  G__6724.cljs$core$IFn$_invoke$arity$14 = G__6724__14;
  G__6724.cljs$core$IFn$_invoke$arity$15 = G__6724__15;
  G__6724.cljs$core$IFn$_invoke$arity$16 = G__6724__16;
  G__6724.cljs$core$IFn$_invoke$arity$17 = G__6724__17;
  G__6724.cljs$core$IFn$_invoke$arity$18 = G__6724__18;
  G__6724.cljs$core$IFn$_invoke$arity$19 = G__6724__19;
  G__6724.cljs$core$IFn$_invoke$arity$20 = G__6724__20;
  G__6724.cljs$core$IFn$_invoke$arity$21 = G__6724__21;
  G__6724.cljs$core$IFn$_invoke$arity$22 = G__6724__22;
  return G__6724;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6723) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6723)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4248__auto__ = !(o == null);
    if (and__4248__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4248__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args6729 = [];
  var len__5318__auto___6735 = arguments.length;
  var i__5319__auto___6736 = 0;
  while (true) {
    if (i__5319__auto___6736 < len__5318__auto___6735) {
      args6729.push(arguments[i__5319__auto___6736]);
      var G__6737 = i__5319__auto___6736 + 1;
      i__5319__auto___6736 = G__6737;
      continue;
    } else {
    }
    break;
  }
  var G__6734 = args6729.length;
  switch(G__6734) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6729.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6739 = ret;
        var G__6740 = cljs.core.first(ks);
        var G__6741 = cljs.core.next(ks);
        coll = G__6739;
        k = G__6740;
        ks = G__6741;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq6730) {
  var G__6731 = cljs.core.first(seq6730);
  var seq6730__$1 = cljs.core.next(seq6730);
  var G__6732 = cljs.core.first(seq6730__$1);
  var seq6730__$2 = cljs.core.next(seq6730__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__6731, G__6732, seq6730__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.ChunkedCons;
cljs.core.ChunkedSeq;
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args6762 = [];
  var len__5318__auto___6768 = arguments.length;
  var i__5319__auto___6769 = 0;
  while (true) {
    if (i__5319__auto___6769 < len__5318__auto___6768) {
      args6762.push(arguments[i__5319__auto___6769]);
      var G__6770 = i__5319__auto___6769 + 1;
      i__5319__auto___6769 = G__6770;
      continue;
    } else {
    }
    break;
  }
  var G__6765 = args6762.length;
  switch(G__6765) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6762.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5337__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq6763) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6763));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__6774_6776 = obj;
  var G__6775_6777 = function(G__6774_6776, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6774_6776, keys);
  goog.object.forEach(G__6774_6776, G__6775_6777);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6778 = i__$1 + 1;
      var G__6779 = j__$1 + 1;
      var G__6780 = len__$1 - 1;
      i__$1 = G__6778;
      j__$1 = G__6779;
      len__$1 = G__6780;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6781 = i__$1 - 1;
      var G__6782 = j__$1 - 1;
      var G__6783 = len__$1 - 1;
      i__$1 = G__6781;
      j__$1 = G__6782;
      len__$1 = G__6783;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4260__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args6794 = [];
  var len__5318__auto___6800 = arguments.length;
  var i__5319__auto___6801 = 0;
  while (true) {
    if (i__5319__auto___6801 < len__5318__auto___6800) {
      args6794.push(arguments[i__5319__auto___6801]);
      var G__6802 = i__5319__auto___6801 + 1;
      i__5319__auto___6801 = G__6802;
      continue;
    } else {
    }
    break;
  }
  var G__6799 = args6794.length;
  switch(G__6799) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6794.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__6804 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__6805 = etc;
          s = G__6804;
          xs = G__6805;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq6795) {
  var G__6796 = cljs.core.first(seq6795);
  var seq6795__$1 = cljs.core.next(seq6795);
  var G__6797 = cljs.core.first(seq6795__$1);
  var seq6795__$2 = cljs.core.next(seq6795__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__6796, G__6797, seq6795__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args6808 = [];
  var len__5318__auto___6811 = arguments.length;
  var i__5319__auto___6812 = 0;
  while (true) {
    if (i__5319__auto___6812 < len__5318__auto___6811) {
      args6808.push(arguments[i__5319__auto___6812]);
      var G__6813 = i__5319__auto___6812 + 1;
      i__5319__auto___6812 = G__6813;
      continue;
    } else {
    }
    break;
  }
  var G__6810 = args6808.length;
  switch(G__6810) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6808.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__6815 = xs;
      var G__6816 = ys;
      var G__6817 = len;
      var G__6818 = n + 1;
      xs = G__6815;
      ys = G__6816;
      len = G__6817;
      n = G__6818;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.to_array;
cljs.core.sort = function cljs$core$sort(var_args) {
  var args6819 = [];
  var len__5318__auto___6824 = arguments.length;
  var i__5319__auto___6825 = 0;
  while (true) {
    if (i__5319__auto___6825 < len__5318__auto___6824) {
      args6819.push(arguments[i__5319__auto___6825]);
      var G__6826 = i__5319__auto___6825 + 1;
      i__5319__auto___6825 = G__6826;
      continue;
    } else {
    }
    break;
  }
  var G__6821 = args6819.length;
  switch(G__6821) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6819.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__6822_6828 = a;
    var G__6823_6829 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__6822_6828, G__6823_6829);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args6830 = [];
  var len__5318__auto___6833 = arguments.length;
  var i__5319__auto___6834 = 0;
  while (true) {
    if (i__5319__auto___6834 < len__5318__auto___6833) {
      args6830.push(arguments[i__5319__auto___6834]);
      var G__6835 = i__5319__auto___6834 + 1;
      i__5319__auto___6834 = G__6835;
      continue;
    } else {
    }
    break;
  }
  var G__6832 = args6830.length;
  switch(G__6832) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6830.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args6837 = [];
  var len__5318__auto___6845 = arguments.length;
  var i__5319__auto___6846 = 0;
  while (true) {
    if (i__5319__auto___6846 < len__5318__auto___6845) {
      args6837.push(arguments[i__5319__auto___6846]);
      var G__6847 = i__5319__auto___6846 + 1;
      i__5319__auto___6846 = G__6847;
      continue;
    } else {
    }
    break;
  }
  var G__6839 = args6837.length;
  switch(G__6839) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6837.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__6840 = f;
    var G__6841 = cljs.core.first(s);
    var G__6842 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6840, G__6841, G__6842) : cljs.core.reduce.call(null, G__6840, G__6841, G__6842);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__6843 = val__$1;
        var G__6844 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6843, G__6844) : f.call(null, G__6843, G__6844);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6849 = nval;
        var G__6850 = cljs.core.next(coll__$1);
        val__$1 = G__6849;
        coll__$1 = G__6850;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.vec;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args6851 = [];
  var len__5318__auto___6856 = arguments.length;
  var i__5319__auto___6857 = 0;
  while (true) {
    if (i__5319__auto___6857 < len__5318__auto___6856) {
      args6851.push(arguments[i__5319__auto___6857]);
      var G__6858 = i__5319__auto___6857 + 1;
      i__5319__auto___6857 = G__6858;
      continue;
    } else {
    }
    break;
  }
  var G__6853 = args6851.length;
  switch(G__6853) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6851.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args6860 = [];
  var len__5318__auto___6863 = arguments.length;
  var i__5319__auto___6864 = 0;
  while (true) {
    if (i__5319__auto___6864 < len__5318__auto___6863) {
      args6860.push(arguments[i__5319__auto___6864]);
      var G__6865 = i__5319__auto___6864 + 1;
      i__5319__auto___6864 = G__6865;
      continue;
    } else {
    }
    break;
  }
  var G__6862 = args6860.length;
  switch(G__6862) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6860.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__6867 = null;
    var G__6867__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__6867__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__6867__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__6867 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__6867__0.call(this);
        case 1:
          return G__6867__1.call(this, x);
        case 2:
          return G__6867__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6867.cljs$core$IFn$_invoke$arity$0 = G__6867__0;
    G__6867.cljs$core$IFn$_invoke$arity$1 = G__6867__1;
    G__6867.cljs$core$IFn$_invoke$arity$2 = G__6867__2;
    return G__6867;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args6868 = [];
  var len__5318__auto___6871 = arguments.length;
  var i__5319__auto___6872 = 0;
  while (true) {
    if (i__5319__auto___6872 < len__5318__auto___6871) {
      args6868.push(arguments[i__5319__auto___6872]);
      var G__6873 = i__5319__auto___6872 + 1;
      i__5319__auto___6872 = G__6873;
      continue;
    } else {
    }
    break;
  }
  var G__6870 = args6868.length;
  switch(G__6870) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6868.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args6875 = [];
  var len__5318__auto___6881 = arguments.length;
  var i__5319__auto___6882 = 0;
  while (true) {
    if (i__5319__auto___6882 < len__5318__auto___6881) {
      args6875.push(arguments[i__5319__auto___6882]);
      var G__6883 = i__5319__auto___6882 + 1;
      i__5319__auto___6882 = G__6883;
      continue;
    } else {
    }
    break;
  }
  var G__6880 = args6875.length;
  switch(G__6880) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6875.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq6876) {
  var G__6877 = cljs.core.first(seq6876);
  var seq6876__$1 = cljs.core.next(seq6876);
  var G__6878 = cljs.core.first(seq6876__$1);
  var seq6876__$2 = cljs.core.next(seq6876__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__6877, G__6878, seq6876__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args6885 = [];
  var len__5318__auto___6891 = arguments.length;
  var i__5319__auto___6892 = 0;
  while (true) {
    if (i__5319__auto___6892 < len__5318__auto___6891) {
      args6885.push(arguments[i__5319__auto___6892]);
      var G__6893 = i__5319__auto___6892 + 1;
      i__5319__auto___6892 = G__6893;
      continue;
    } else {
    }
    break;
  }
  var G__6890 = args6885.length;
  switch(G__6890) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6885.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq6886) {
  var G__6887 = cljs.core.first(seq6886);
  var seq6886__$1 = cljs.core.next(seq6886);
  var G__6888 = cljs.core.first(seq6886__$1);
  var seq6886__$2 = cljs.core.next(seq6886__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__6887, G__6888, seq6886__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args6895 = [];
  var len__5318__auto___6901 = arguments.length;
  var i__5319__auto___6902 = 0;
  while (true) {
    if (i__5319__auto___6902 < len__5318__auto___6901) {
      args6895.push(arguments[i__5319__auto___6902]);
      var G__6903 = i__5319__auto___6902 + 1;
      i__5319__auto___6902 = G__6903;
      continue;
    } else {
    }
    break;
  }
  var G__6900 = args6895.length;
  switch(G__6900) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6895.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq6896) {
  var G__6897 = cljs.core.first(seq6896);
  var seq6896__$1 = cljs.core.next(seq6896);
  var G__6898 = cljs.core.first(seq6896__$1);
  var seq6896__$2 = cljs.core.next(seq6896__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__6897, G__6898, seq6896__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.divide;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args6905 = [];
  var len__5318__auto___6911 = arguments.length;
  var i__5319__auto___6912 = 0;
  while (true) {
    if (i__5319__auto___6912 < len__5318__auto___6911) {
      args6905.push(arguments[i__5319__auto___6912]);
      var G__6913 = i__5319__auto___6912 + 1;
      i__5319__auto___6912 = G__6913;
      continue;
    } else {
    }
    break;
  }
  var G__6910 = args6905.length;
  switch(G__6910) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6905.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq6906) {
  var G__6907 = cljs.core.first(seq6906);
  var seq6906__$1 = cljs.core.next(seq6906);
  var G__6908 = cljs.core.first(seq6906__$1);
  var seq6906__$2 = cljs.core.next(seq6906__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__6907, G__6908, seq6906__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args6915 = [];
  var len__5318__auto___6921 = arguments.length;
  var i__5319__auto___6922 = 0;
  while (true) {
    if (i__5319__auto___6922 < len__5318__auto___6921) {
      args6915.push(arguments[i__5319__auto___6922]);
      var G__6923 = i__5319__auto___6922 + 1;
      i__5319__auto___6922 = G__6923;
      continue;
    } else {
    }
    break;
  }
  var G__6920 = args6915.length;
  switch(G__6920) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6915.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__6925 = y;
        var G__6926 = cljs.core.first(more);
        var G__6927 = cljs.core.next(more);
        x = G__6925;
        y = G__6926;
        more = G__6927;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq6916) {
  var G__6917 = cljs.core.first(seq6916);
  var seq6916__$1 = cljs.core.next(seq6916);
  var G__6918 = cljs.core.first(seq6916__$1);
  var seq6916__$2 = cljs.core.next(seq6916__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__6917, G__6918, seq6916__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args6928 = [];
  var len__5318__auto___6934 = arguments.length;
  var i__5319__auto___6935 = 0;
  while (true) {
    if (i__5319__auto___6935 < len__5318__auto___6934) {
      args6928.push(arguments[i__5319__auto___6935]);
      var G__6936 = i__5319__auto___6935 + 1;
      i__5319__auto___6935 = G__6936;
      continue;
    } else {
    }
    break;
  }
  var G__6933 = args6928.length;
  switch(G__6933) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6928.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__6938 = y;
        var G__6939 = cljs.core.first(more);
        var G__6940 = cljs.core.next(more);
        x = G__6938;
        y = G__6939;
        more = G__6940;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq6929) {
  var G__6930 = cljs.core.first(seq6929);
  var seq6929__$1 = cljs.core.next(seq6929);
  var G__6931 = cljs.core.first(seq6929__$1);
  var seq6929__$2 = cljs.core.next(seq6929__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6930, G__6931, seq6929__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args6941 = [];
  var len__5318__auto___6947 = arguments.length;
  var i__5319__auto___6948 = 0;
  while (true) {
    if (i__5319__auto___6948 < len__5318__auto___6947) {
      args6941.push(arguments[i__5319__auto___6948]);
      var G__6949 = i__5319__auto___6948 + 1;
      i__5319__auto___6948 = G__6949;
      continue;
    } else {
    }
    break;
  }
  var G__6946 = args6941.length;
  switch(G__6946) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6941.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__6951 = y;
        var G__6952 = cljs.core.first(more);
        var G__6953 = cljs.core.next(more);
        x = G__6951;
        y = G__6952;
        more = G__6953;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq6942) {
  var G__6943 = cljs.core.first(seq6942);
  var seq6942__$1 = cljs.core.next(seq6942);
  var G__6944 = cljs.core.first(seq6942__$1);
  var seq6942__$2 = cljs.core.next(seq6942__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__6943, G__6944, seq6942__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args6954 = [];
  var len__5318__auto___6960 = arguments.length;
  var i__5319__auto___6961 = 0;
  while (true) {
    if (i__5319__auto___6961 < len__5318__auto___6960) {
      args6954.push(arguments[i__5319__auto___6961]);
      var G__6962 = i__5319__auto___6961 + 1;
      i__5319__auto___6961 = G__6962;
      continue;
    } else {
    }
    break;
  }
  var G__6959 = args6954.length;
  switch(G__6959) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6954.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__6964 = y;
        var G__6965 = cljs.core.first(more);
        var G__6966 = cljs.core.next(more);
        x = G__6964;
        y = G__6965;
        more = G__6966;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq6955) {
  var G__6956 = cljs.core.first(seq6955);
  var seq6955__$1 = cljs.core.next(seq6955);
  var G__6957 = cljs.core.first(seq6955__$1);
  var seq6955__$2 = cljs.core.next(seq6955__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6956, G__6957, seq6955__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args6967 = [];
  var len__5318__auto___6973 = arguments.length;
  var i__5319__auto___6974 = 0;
  while (true) {
    if (i__5319__auto___6974 < len__5318__auto___6973) {
      args6967.push(arguments[i__5319__auto___6974]);
      var G__6975 = i__5319__auto___6974 + 1;
      i__5319__auto___6974 = G__6975;
      continue;
    } else {
    }
    break;
  }
  var G__6972 = args6967.length;
  switch(G__6972) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6967.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4591__auto__ = x;
  var y__4592__auto__ = y;
  return x__4591__auto__ > y__4592__auto__ ? x__4591__auto__ : y__4592__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4591__auto__ = x;
    var y__4592__auto__ = y;
    return x__4591__auto__ > y__4592__auto__ ? x__4591__auto__ : y__4592__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq6968) {
  var G__6969 = cljs.core.first(seq6968);
  var seq6968__$1 = cljs.core.next(seq6968);
  var G__6970 = cljs.core.first(seq6968__$1);
  var seq6968__$2 = cljs.core.next(seq6968__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__6969, G__6970, seq6968__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args6977 = [];
  var len__5318__auto___6983 = arguments.length;
  var i__5319__auto___6984 = 0;
  while (true) {
    if (i__5319__auto___6984 < len__5318__auto___6983) {
      args6977.push(arguments[i__5319__auto___6984]);
      var G__6985 = i__5319__auto___6984 + 1;
      i__5319__auto___6984 = G__6985;
      continue;
    } else {
    }
    break;
  }
  var G__6982 = args6977.length;
  switch(G__6982) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6977.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4598__auto__ = x;
  var y__4599__auto__ = y;
  return x__4598__auto__ < y__4599__auto__ ? x__4598__auto__ : y__4599__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4598__auto__ = x;
    var y__4599__auto__ = y;
    return x__4598__auto__ < y__4599__auto__ ? x__4598__auto__ : y__4599__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq6978) {
  var G__6979 = cljs.core.first(seq6978);
  var seq6978__$1 = cljs.core.next(seq6978);
  var G__6980 = cljs.core.first(seq6978__$1);
  var seq6978__$2 = cljs.core.next(seq6978__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__6979, G__6980, seq6978__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args6987 = [];
  var len__5318__auto___6993 = arguments.length;
  var i__5319__auto___6994 = 0;
  while (true) {
    if (i__5319__auto___6994 < len__5318__auto___6993) {
      args6987.push(arguments[i__5319__auto___6994]);
      var G__6995 = i__5319__auto___6994 + 1;
      i__5319__auto___6994 = G__6995;
      continue;
    } else {
    }
    break;
  }
  var G__6992 = args6987.length;
  switch(G__6992) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6987.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq6988) {
  var G__6989 = cljs.core.first(seq6988);
  var seq6988__$1 = cljs.core.next(seq6988);
  var G__6990 = cljs.core.first(seq6988__$1);
  var seq6988__$2 = cljs.core.next(seq6988__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__6989, G__6990, seq6988__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args6997 = [];
  var len__5318__auto___7003 = arguments.length;
  var i__5319__auto___7004 = 0;
  while (true) {
    if (i__5319__auto___7004 < len__5318__auto___7003) {
      args6997.push(arguments[i__5319__auto___7004]);
      var G__7005 = i__5319__auto___7004 + 1;
      i__5319__auto___7004 = G__7005;
      continue;
    } else {
    }
    break;
  }
  var G__7002 = args6997.length;
  switch(G__7002) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args6997.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq6998) {
  var G__6999 = cljs.core.first(seq6998);
  var seq6998__$1 = cljs.core.next(seq6998);
  var G__7000 = cljs.core.first(seq6998__$1);
  var seq6998__$2 = cljs.core.next(seq6998__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__6999, G__7000, seq6998__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args7007 = [];
  var len__5318__auto___7013 = arguments.length;
  var i__5319__auto___7014 = 0;
  while (true) {
    if (i__5319__auto___7014 < len__5318__auto___7013) {
      args7007.push(arguments[i__5319__auto___7014]);
      var G__7015 = i__5319__auto___7014 + 1;
      i__5319__auto___7014 = G__7015;
      continue;
    } else {
    }
    break;
  }
  var G__7012 = args7007.length;
  switch(G__7012) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7007.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq7008) {
  var G__7009 = cljs.core.first(seq7008);
  var seq7008__$1 = cljs.core.next(seq7008);
  var G__7010 = cljs.core.first(seq7008__$1);
  var seq7008__$2 = cljs.core.next(seq7008__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__7009, G__7010, seq7008__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args7017 = [];
  var len__5318__auto___7023 = arguments.length;
  var i__5319__auto___7024 = 0;
  while (true) {
    if (i__5319__auto___7024 < len__5318__auto___7023) {
      args7017.push(arguments[i__5319__auto___7024]);
      var G__7025 = i__5319__auto___7024 + 1;
      i__5319__auto___7024 = G__7025;
      continue;
    } else {
    }
    break;
  }
  var G__7022 = args7017.length;
  switch(G__7022) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7017.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq7018) {
  var G__7019 = cljs.core.first(seq7018);
  var seq7018__$1 = cljs.core.next(seq7018);
  var G__7020 = cljs.core.first(seq7018__$1);
  var seq7018__$2 = cljs.core.next(seq7018__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__7019, G__7020, seq7018__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args7027 = [];
  var len__5318__auto___7033 = arguments.length;
  var i__5319__auto___7034 = 0;
  while (true) {
    if (i__5319__auto___7034 < len__5318__auto___7033) {
      args7027.push(arguments[i__5319__auto___7034]);
      var G__7035 = i__5319__auto___7034 + 1;
      i__5319__auto___7034 = G__7035;
      continue;
    } else {
    }
    break;
  }
  var G__7032 = args7027.length;
  switch(G__7032) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7027.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq7028) {
  var G__7029 = cljs.core.first(seq7028);
  var seq7028__$1 = cljs.core.next(seq7028);
  var G__7030 = cljs.core.first(seq7028__$1);
  var seq7028__$2 = cljs.core.next(seq7028__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__7029, G__7030, seq7028__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.mod;
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args7037 = [];
  var len__5318__auto___7043 = arguments.length;
  var i__5319__auto___7044 = 0;
  while (true) {
    if (i__5319__auto___7044 < len__5318__auto___7043) {
      args7037.push(arguments[i__5319__auto___7044]);
      var G__7045 = i__5319__auto___7044 + 1;
      i__5319__auto___7044 = G__7045;
      continue;
    } else {
    }
    break;
  }
  var G__7042 = args7037.length;
  switch(G__7042) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7037.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq7038) {
  var G__7039 = cljs.core.first(seq7038);
  var seq7038__$1 = cljs.core.next(seq7038);
  var G__7040 = cljs.core.first(seq7038__$1);
  var seq7038__$2 = cljs.core.next(seq7038__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__7039, G__7040, seq7038__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args7047 = [];
  var len__5318__auto___7053 = arguments.length;
  var i__5319__auto___7054 = 0;
  while (true) {
    if (i__5319__auto___7054 < len__5318__auto___7053) {
      args7047.push(arguments[i__5319__auto___7054]);
      var G__7055 = i__5319__auto___7054 + 1;
      i__5319__auto___7054 = G__7055;
      continue;
    } else {
    }
    break;
  }
  var G__7052 = args7047.length;
  switch(G__7052) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7047.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq7048) {
  var G__7049 = cljs.core.first(seq7048);
  var seq7048__$1 = cljs.core.next(seq7048);
  var G__7050 = cljs.core.first(seq7048__$1);
  var seq7048__$2 = cljs.core.next(seq7048__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__7049, G__7050, seq7048__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args7057 = [];
  var len__5318__auto___7063 = arguments.length;
  var i__5319__auto___7064 = 0;
  while (true) {
    if (i__5319__auto___7064 < len__5318__auto___7063) {
      args7057.push(arguments[i__5319__auto___7064]);
      var G__7065 = i__5319__auto___7064 + 1;
      i__5319__auto___7064 = G__7065;
      continue;
    } else {
    }
    break;
  }
  var G__7062 = args7057.length;
  switch(G__7062) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7057.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq7058) {
  var G__7059 = cljs.core.first(seq7058);
  var seq7058__$1 = cljs.core.next(seq7058);
  var G__7060 = cljs.core.first(seq7058__$1);
  var seq7058__$2 = cljs.core.next(seq7058__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__7059, G__7060, seq7058__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args7067 = [];
  var len__5318__auto___7073 = arguments.length;
  var i__5319__auto___7074 = 0;
  while (true) {
    if (i__5319__auto___7074 < len__5318__auto___7073) {
      args7067.push(arguments[i__5319__auto___7074]);
      var G__7075 = i__5319__auto___7074 + 1;
      i__5319__auto___7074 = G__7075;
      continue;
    } else {
    }
    break;
  }
  var G__7072 = args7067.length;
  switch(G__7072) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7067.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq7068) {
  var G__7069 = cljs.core.first(seq7068);
  var seq7068__$1 = cljs.core.next(seq7068);
  var G__7070 = cljs.core.first(seq7068__$1);
  var seq7068__$2 = cljs.core.next(seq7068__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__7069, G__7070, seq7068__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args7077 = [];
  var len__5318__auto___7083 = arguments.length;
  var i__5319__auto___7084 = 0;
  while (true) {
    if (i__5319__auto___7084 < len__5318__auto___7083) {
      args7077.push(arguments[i__5319__auto___7084]);
      var G__7085 = i__5319__auto___7084 + 1;
      i__5319__auto___7084 = G__7085;
      continue;
    } else {
    }
    break;
  }
  var G__7082 = args7077.length;
  switch(G__7082) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7077.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq7078) {
  var G__7079 = cljs.core.first(seq7078);
  var seq7078__$1 = cljs.core.next(seq7078);
  var G__7080 = cljs.core.first(seq7078__$1);
  var seq7078__$2 = cljs.core.next(seq7078__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__7079, G__7080, seq7078__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args7087 = [];
  var len__5318__auto___7093 = arguments.length;
  var i__5319__auto___7094 = 0;
  while (true) {
    if (i__5319__auto___7094 < len__5318__auto___7093) {
      args7087.push(arguments[i__5319__auto___7094]);
      var G__7095 = i__5319__auto___7094 + 1;
      i__5319__auto___7094 = G__7095;
      continue;
    } else {
    }
    break;
  }
  var G__7092 = args7087.length;
  switch(G__7092) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7087.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq7088) {
  var G__7089 = cljs.core.first(seq7088);
  var seq7088__$1 = cljs.core.next(seq7088);
  var G__7090 = cljs.core.first(seq7088__$1);
  var seq7088__$2 = cljs.core.next(seq7088__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__7089, G__7090, seq7088__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args7097 = [];
  var len__5318__auto___7103 = arguments.length;
  var i__5319__auto___7104 = 0;
  while (true) {
    if (i__5319__auto___7104 < len__5318__auto___7103) {
      args7097.push(arguments[i__5319__auto___7104]);
      var G__7105 = i__5319__auto___7104 + 1;
      i__5319__auto___7104 = G__7105;
      continue;
    } else {
    }
    break;
  }
  var G__7102 = args7097.length;
  switch(G__7102) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7097.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__7107 = y;
        var G__7108 = cljs.core.first(more);
        var G__7109 = cljs.core.next(more);
        x = G__7107;
        y = G__7108;
        more = G__7109;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq7098) {
  var G__7099 = cljs.core.first(seq7098);
  var seq7098__$1 = cljs.core.next(seq7098);
  var G__7100 = cljs.core.first(seq7098__$1);
  var seq7098__$2 = cljs.core.next(seq7098__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7099, G__7100, seq7098__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__7110 = n__$1 - 1;
      var G__7111 = cljs.core.next(xs);
      n__$1 = G__7110;
      xs = G__7111;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args7112 = [];
  var len__5318__auto___7117 = arguments.length;
  var i__5319__auto___7118 = 0;
  while (true) {
    if (i__5319__auto___7118 < len__5318__auto___7117) {
      args7112.push(arguments[i__5319__auto___7118]);
      var G__7119 = i__5319__auto___7118 + 1;
      i__5319__auto___7118 = G__7119;
      continue;
    } else {
    }
    break;
  }
  var G__7116 = args7112.length;
  switch(G__7116) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7112.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5337__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__7121 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__7122 = cljs.core.next(more);
      sb = G__7121;
      more = G__7122;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq7113) {
  var G__7114 = cljs.core.first(seq7113);
  var seq7113__$1 = cljs.core.next(seq7113);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__7114, seq7113__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args7123 = [];
  var len__5318__auto___7126 = arguments.length;
  var i__5319__auto___7127 = 0;
  while (true) {
    if (i__5319__auto___7127 < len__5318__auto___7126) {
      args7123.push(arguments[i__5319__auto___7127]);
      var G__7128 = i__5319__auto___7127 + 1;
      i__5319__auto___7127 = G__7128;
      continue;
    } else {
    }
    break;
  }
  var G__7125 = args7123.length;
  switch(G__7125) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7123.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.map;
cljs.core.name;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__7130 = cljs.core.next(xs);
            var G__7131 = cljs.core.next(ys);
            xs = G__7130;
            ys = G__7131;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__7132 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__7133 = cljs.core.next(s);
        res = G__7132;
        s = G__7133;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.key;
cljs.core.val;
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__7134 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__7135 = cljs.core.next(s);
      h = G__7134;
      s = G__7135;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__7136 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__7137 = cljs.core.next(s__$1);
      h = G__7136;
      s__$1 = G__7137;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.name;
cljs.core.chunk_first;
cljs.core.chunk_rest;
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__7144_7150 = cljs.core.seq(fn_map);
  var chunk__7145_7151 = null;
  var count__7146_7152 = 0;
  var i__7147_7153 = 0;
  while (true) {
    if (i__7147_7153 < count__7146_7152) {
      var vec__7148_7154 = chunk__7145_7151.cljs$core$IIndexed$_nth$arity$2(null, i__7147_7153);
      var key_name_7155 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7148_7154, 0, null);
      var f_7156 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7148_7154, 1, null);
      var str_name_7157 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7155) : cljs.core.name.call(null, key_name_7155);
      obj[str_name_7157] = f_7156;
      var G__7158 = seq__7144_7150;
      var G__7159 = chunk__7145_7151;
      var G__7160 = count__7146_7152;
      var G__7161 = i__7147_7153 + 1;
      seq__7144_7150 = G__7158;
      chunk__7145_7151 = G__7159;
      count__7146_7152 = G__7160;
      i__7147_7153 = G__7161;
      continue;
    } else {
      var temp__4425__auto___7162 = cljs.core.seq(seq__7144_7150);
      if (temp__4425__auto___7162) {
        var seq__7144_7163__$1 = temp__4425__auto___7162;
        if (cljs.core.chunked_seq_QMARK_(seq__7144_7163__$1)) {
          var c__5063__auto___7164 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__7144_7163__$1) : cljs.core.chunk_first.call(null, seq__7144_7163__$1);
          var G__7165 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__7144_7163__$1) : cljs.core.chunk_rest.call(null, seq__7144_7163__$1);
          var G__7166 = c__5063__auto___7164;
          var G__7167 = cljs.core.count(c__5063__auto___7164);
          var G__7168 = 0;
          seq__7144_7150 = G__7165;
          chunk__7145_7151 = G__7166;
          count__7146_7152 = G__7167;
          i__7147_7153 = G__7168;
          continue;
        } else {
          var vec__7149_7169 = cljs.core.first(seq__7144_7163__$1);
          var key_name_7170 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7149_7169, 0, null);
          var f_7171 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7149_7169, 1, null);
          var str_name_7172 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7170) : cljs.core.name.call(null, key_name_7170);
          obj[str_name_7172] = f_7171;
          var G__7173 = cljs.core.next(seq__7144_7163__$1);
          var G__7174 = null;
          var G__7175 = 0;
          var G__7176 = 0;
          seq__7144_7150 = G__7173;
          chunk__7145_7151 = G__7174;
          count__7146_7152 = G__7175;
          i__7147_7153 = G__7176;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___7182 = arguments.length;
  var i__5319__auto___7183 = 0;
  while (true) {
    if (i__5319__auto___7183 < len__5318__auto___7182) {
      args__5325__auto__.push(arguments[i__5319__auto___7183]);
      var G__7184 = i__5319__auto___7183 + 1;
      i__5319__auto___7183 = G__7184;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__7185 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__7185;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__7186 = i - 1;
      var G__7187 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__7186;
      r = G__7187;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq7181) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7181));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4260__auto__ = coll == null;
    if (or__4260__auto__) {
      return or__4260__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4248__auto__ = cljs.core.not(a.ns);
      if (and__4248__auto__) {
        return b.ns;
      } else {
        return and__4248__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__7198 = a.ns;
            var G__7199 = b.ns;
            return goog.array.defaultCompare(G__7198, G__7199);
          }();
          if (0 === nsc) {
            var G__7200 = a.name;
            var G__7201 = b.name;
            return goog.array.defaultCompare(G__7200, G__7201);
          } else {
            return nsc;
          }
        }
      } else {
        var G__7202 = a.name;
        var G__7203 = b.name;
        return goog.array.defaultCompare(G__7202, G__7203);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__7205 = null;
  var G__7205__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__7205__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__7205 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7205__2.call(this, self__, coll);
      case 3:
        return G__7205__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7205.cljs$core$IFn$_invoke$arity$2 = G__7205__2;
  G__7205.cljs$core$IFn$_invoke$arity$3 = G__7205__3;
  return G__7205;
}();
cljs.core.Keyword.prototype.apply = function(self__, args7204) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7204)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4695__auto__ = self__._hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args7208 = [];
  var len__5318__auto___7211 = arguments.length;
  var i__5319__auto___7212 = 0;
  while (true) {
    if (i__5319__auto___7212 < len__5318__auto___7211) {
      args7208.push(arguments[i__5319__auto___7212]);
      var G__7213 = i__5319__auto___7212 + 1;
      i__5319__auto___7212 = G__7213;
      continue;
    } else {
    }
    break;
  }
  var G__7210 = args7208.length;
  switch(G__7210) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7208.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__7215 = ls.sval();
        ls = G__7215;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.ArrayChunk;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args7216 = [];
  var len__5318__auto___7219 = arguments.length;
  var i__5319__auto___7220 = 0;
  while (true) {
    if (i__5319__auto___7220 < len__5318__auto___7219) {
      args7216.push(arguments[i__5319__auto___7220]);
      var G__7221 = i__5319__auto___7220 + 1;
      i__5319__auto___7220 = G__7221;
      continue;
    } else {
    }
    break;
  }
  var G__7218 = args7216.length;
  switch(G__7218) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7216.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__7225 = cljs.core.next(s__$1);
      s__$1 = G__7225;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_7226 = 0;
  var xs_7227 = cljs.core.seq(coll);
  while (true) {
    if (xs_7227) {
      ret[i_7226] = cljs.core.to_array(cljs.core.first(xs_7227));
      var G__7228 = i_7226 + 1;
      var G__7229 = cljs.core.next(xs_7227);
      i_7226 = G__7228;
      xs_7227 = G__7229;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args7230 = [];
  var len__5318__auto___7233 = arguments.length;
  var i__5319__auto___7234 = 0;
  while (true) {
    if (i__5319__auto___7234 < len__5318__auto___7233) {
      args7230.push(arguments[i__5319__auto___7234]);
      var G__7235 = i__5319__auto___7234 + 1;
      i__5319__auto___7234 = G__7235;
      continue;
    } else {
    }
    break;
  }
  var G__7232 = args7230.length;
  switch(G__7232) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7230.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7237 = i + 1;
        var G__7238 = cljs.core.next(s__$1);
        i = G__7237;
        s__$1 = G__7238;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5163__auto___7239 = size;
    var i_7240 = 0;
    while (true) {
      if (i_7240 < n__5163__auto___7239) {
        a[i_7240] = init_val_or_seq;
        var G__7241 = i_7240 + 1;
        i_7240 = G__7241;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args7242 = [];
  var len__5318__auto___7245 = arguments.length;
  var i__5319__auto___7246 = 0;
  while (true) {
    if (i__5319__auto___7246 < len__5318__auto___7245) {
      args7242.push(arguments[i__5319__auto___7246]);
      var G__7247 = i__5319__auto___7246 + 1;
      i__5319__auto___7246 = G__7247;
      continue;
    } else {
    }
    break;
  }
  var G__7244 = args7242.length;
  switch(G__7244) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7242.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7249 = i + 1;
        var G__7250 = cljs.core.next(s__$1);
        i = G__7249;
        s__$1 = G__7250;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5163__auto___7251 = size;
    var i_7252 = 0;
    while (true) {
      if (i_7252 < n__5163__auto___7251) {
        a[i_7252] = init_val_or_seq;
        var G__7253 = i_7252 + 1;
        i_7252 = G__7253;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args7254 = [];
  var len__5318__auto___7257 = arguments.length;
  var i__5319__auto___7258 = 0;
  while (true) {
    if (i__5319__auto___7258 < len__5318__auto___7257) {
      args7254.push(arguments[i__5319__auto___7258]);
      var G__7259 = i__5319__auto___7258 + 1;
      i__5319__auto___7258 = G__7259;
      continue;
    } else {
    }
    break;
  }
  var G__7256 = args7254.length;
  switch(G__7256) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7254.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7261 = i + 1;
        var G__7262 = cljs.core.next(s__$1);
        i = G__7261;
        s__$1 = G__7262;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5163__auto___7263 = size;
    var i_7264 = 0;
    while (true) {
      if (i_7264 < n__5163__auto___7263) {
        a[i_7264] = init_val_or_seq;
        var G__7265 = i_7264 + 1;
        i_7264 = G__7265;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args7266 = [];
  var len__5318__auto___7269 = arguments.length;
  var i__5319__auto___7270 = 0;
  while (true) {
    if (i__5319__auto___7270 < len__5318__auto___7269) {
      args7266.push(arguments[i__5319__auto___7270]);
      var G__7271 = i__5319__auto___7270 + 1;
      i__5319__auto___7270 = G__7271;
      continue;
    } else {
    }
    break;
  }
  var G__7268 = args7266.length;
  switch(G__7268) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7266.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7273 = i + 1;
        var G__7274 = cljs.core.next(s__$1);
        i = G__7273;
        s__$1 = G__7274;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5163__auto___7275 = size;
    var i_7276 = 0;
    while (true) {
      if (i_7276 < n__5163__auto___7275) {
        a[i_7276] = init_val_or_seq;
        var G__7277 = i_7276 + 1;
        i_7276 = G__7277;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__7278 = cljs.core.next(s__$1);
        var G__7279 = i - 1;
        var G__7280 = sum + 1;
        s__$1 = G__7278;
        i = G__7279;
        sum = G__7280;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args7282 = [];
  var len__5318__auto___7294 = arguments.length;
  var i__5319__auto___7295 = 0;
  while (true) {
    if (i__5319__auto___7295 < len__5318__auto___7294) {
      args7282.push(arguments[i__5319__auto___7295]);
      var G__7296 = i__5319__auto___7295 + 1;
      i__5319__auto___7295 = G__7296;
      continue;
    } else {
    }
    break;
  }
  var G__7287 = args7282.length;
  switch(G__7287) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7282.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq7283) {
  var G__7284 = cljs.core.first(seq7283);
  var seq7283__$1 = cljs.core.next(seq7283);
  var G__7285 = cljs.core.first(seq7283__$1);
  var seq7283__$2 = cljs.core.next(seq7283__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__7284, G__7285, seq7283__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args7298 = [];
  var len__5318__auto___7306 = arguments.length;
  var i__5319__auto___7307 = 0;
  while (true) {
    if (i__5319__auto___7307 < len__5318__auto___7306) {
      args7298.push(arguments[i__5319__auto___7307]);
      var G__7308 = i__5319__auto___7307 + 1;
      i__5319__auto___7307 = G__7308;
      continue;
    } else {
    }
    break;
  }
  var G__7305 = args7298.length;
  switch(G__7305) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7298.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5337__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq7299) {
  var G__7300 = cljs.core.first(seq7299);
  var seq7299__$1 = cljs.core.next(seq7299);
  var G__7301 = cljs.core.first(seq7299__$1);
  var seq7299__$2 = cljs.core.next(seq7299__$1);
  var G__7302 = cljs.core.first(seq7299__$2);
  var seq7299__$3 = cljs.core.next(seq7299__$2);
  var G__7303 = cljs.core.first(seq7299__$3);
  var seq7299__$4 = cljs.core.next(seq7299__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7300, G__7301, G__7302, G__7303, seq7299__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args7310 = [];
  var len__5318__auto___7316 = arguments.length;
  var i__5319__auto___7317 = 0;
  while (true) {
    if (i__5319__auto___7317 < len__5318__auto___7316) {
      args7310.push(arguments[i__5319__auto___7317]);
      var G__7318 = i__5319__auto___7317 + 1;
      i__5319__auto___7317 = G__7318;
      continue;
    } else {
    }
    break;
  }
  var G__7315 = args7310.length;
  switch(G__7315) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7310.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7320 = ntcoll;
      var G__7321 = cljs.core.first(vals);
      var G__7322 = cljs.core.next(vals);
      tcoll = G__7320;
      val = G__7321;
      vals = G__7322;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq7311) {
  var G__7312 = cljs.core.first(seq7311);
  var seq7311__$1 = cljs.core.next(seq7311);
  var G__7313 = cljs.core.first(seq7311__$1);
  var seq7311__$2 = cljs.core.next(seq7311__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7312, G__7313, seq7311__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args7323 = [];
  var len__5318__auto___7330 = arguments.length;
  var i__5319__auto___7331 = 0;
  while (true) {
    if (i__5319__auto___7331 < len__5318__auto___7330) {
      args7323.push(arguments[i__5319__auto___7331]);
      var G__7332 = i__5319__auto___7331 + 1;
      i__5319__auto___7331 = G__7332;
      continue;
    } else {
    }
    break;
  }
  var G__7329 = args7323.length;
  switch(G__7329) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7323.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__7334 = ntcoll;
      var G__7335 = cljs.core.first(kvs);
      var G__7336 = cljs.core.second(kvs);
      var G__7337 = cljs.core.nnext(kvs);
      tcoll = G__7334;
      key = G__7335;
      val = G__7336;
      kvs = G__7337;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq7324) {
  var G__7325 = cljs.core.first(seq7324);
  var seq7324__$1 = cljs.core.next(seq7324);
  var G__7326 = cljs.core.first(seq7324__$1);
  var seq7324__$2 = cljs.core.next(seq7324__$1);
  var G__7327 = cljs.core.first(seq7324__$2);
  var seq7324__$3 = cljs.core.next(seq7324__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7325, G__7326, G__7327, seq7324__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args7338 = [];
  var len__5318__auto___7344 = arguments.length;
  var i__5319__auto___7345 = 0;
  while (true) {
    if (i__5319__auto___7345 < len__5318__auto___7344) {
      args7338.push(arguments[i__5319__auto___7345]);
      var G__7346 = i__5319__auto___7345 + 1;
      i__5319__auto___7345 = G__7346;
      continue;
    } else {
    }
    break;
  }
  var G__7343 = args7338.length;
  switch(G__7343) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7338.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__7348 = ntcoll;
      var G__7349 = cljs.core.first(ks);
      var G__7350 = cljs.core.next(ks);
      tcoll = G__7348;
      key = G__7349;
      ks = G__7350;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq7339) {
  var G__7340 = cljs.core.first(seq7339);
  var seq7339__$1 = cljs.core.next(seq7339);
  var G__7341 = cljs.core.first(seq7339__$1);
  var seq7339__$2 = cljs.core.next(seq7339__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7340, G__7341, seq7339__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args7351 = [];
  var len__5318__auto___7357 = arguments.length;
  var i__5319__auto___7358 = 0;
  while (true) {
    if (i__5319__auto___7358 < len__5318__auto___7357) {
      args7351.push(arguments[i__5319__auto___7358]);
      var G__7359 = i__5319__auto___7358 + 1;
      i__5319__auto___7358 = G__7359;
      continue;
    } else {
    }
    break;
  }
  var G__7356 = args7351.length;
  switch(G__7356) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7351.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7361 = ntcoll;
      var G__7362 = cljs.core.first(vals);
      var G__7363 = cljs.core.next(vals);
      tcoll = G__7361;
      val = G__7362;
      vals = G__7363;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq7352) {
  var G__7353 = cljs.core.first(seq7352);
  var seq7352__$1 = cljs.core.next(seq7352);
  var G__7354 = cljs.core.first(seq7352__$1);
  var seq7352__$2 = cljs.core.next(seq7352__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7353, G__7354, seq7352__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5207 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5207);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5207) : f.call(null, a5207);
      }
    } else {
      var b5208 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5207, b5208);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5207, b5208) : f.call(null, a5207, b5208);
        }
      } else {
        var c5209 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5207, b5208, c5209);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5207, b5208, c5209) : f.call(null, a5207, b5208, c5209);
          }
        } else {
          var d5210 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5207, b5208, c5209, d5210);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5207, b5208, c5209, d5210) : f.call(null, a5207, b5208, c5209, d5210);
            }
          } else {
            var e5211 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5207, b5208, c5209, d5210, e5211);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5207, b5208, c5209, d5210, e5211) : f.call(null, a5207, b5208, c5209, d5210, e5211);
              }
            } else {
              var f5212 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5207, b5208, c5209, d5210, e5211, f5212);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5207, b5208, c5209, d5210, e5211, f5212) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212);
                }
              } else {
                var g5213 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5207, b5208, c5209, d5210, e5211, f5212, g5213);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5207, b5208, c5209, d5210, e5211, f5212, g5213) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213);
                  }
                } else {
                  var h5214 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214);
                    }
                  } else {
                    var i5215 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215);
                      }
                    } else {
                      var j5216 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216);
                        }
                      } else {
                        var k5217 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217);
                          }
                        } else {
                          var l5218 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218);
                            }
                          } else {
                            var m5219 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219);
                              }
                            } else {
                              var n5220 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220);
                                }
                              } else {
                                var o5221 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221);
                                  }
                                } else {
                                  var p5222 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222);
                                    }
                                  } else {
                                    var q5223 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223);
                                      }
                                    } else {
                                      var r5224 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224);
                                        }
                                      } else {
                                        var s5225 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225);
                                          }
                                        } else {
                                          var t5226 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225, t5226);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225, t5226) : f.call(null, a5207, b5208, c5209, d5210, e5211, f5212, g5213, h5214, i5215, j5216, k5217, l5218, m5219, n5220, o5221, p5222, q5223, r5224, s5225, t5226);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args7364 = [];
  var len__5318__auto___7373 = arguments.length;
  var i__5319__auto___7374 = 0;
  while (true) {
    if (i__5319__auto___7374 < len__5318__auto___7373) {
      args7364.push(arguments[i__5319__auto___7374]);
      var G__7375 = i__5319__auto___7374 + 1;
      i__5319__auto___7374 = G__7375;
      continue;
    } else {
    }
    break;
  }
  var G__7372 = args7364.length;
  switch(G__7372) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7364.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5337__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq7365) {
  var G__7366 = cljs.core.first(seq7365);
  var seq7365__$1 = cljs.core.next(seq7365);
  var G__7367 = cljs.core.first(seq7365__$1);
  var seq7365__$2 = cljs.core.next(seq7365__$1);
  var G__7368 = cljs.core.first(seq7365__$2);
  var seq7365__$3 = cljs.core.next(seq7365__$2);
  var G__7369 = cljs.core.first(seq7365__$3);
  var seq7365__$4 = cljs.core.next(seq7365__$3);
  var G__7370 = cljs.core.first(seq7365__$4);
  var seq7365__$5 = cljs.core.next(seq7365__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__7366, G__7367, G__7368, G__7369, G__7370, seq7365__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args7377 = [];
  var len__5318__auto___7402 = arguments.length;
  var i__5319__auto___7403 = 0;
  while (true) {
    if (i__5319__auto___7403 < len__5318__auto___7402) {
      args7377.push(arguments[i__5319__auto___7403]);
      var G__7404 = i__5319__auto___7403 + 1;
      i__5319__auto___7403 = G__7404;
      continue;
    } else {
    }
    break;
  }
  var G__7386 = args7377.length;
  switch(G__7386) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7377.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5337__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__7387 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7387) : f.call(null, G__7387);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__7388 = cljs.core.meta(obj);
    var G__7389 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7388, G__7389) : f.call(null, G__7388, G__7389);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__7390 = cljs.core.meta(obj);
    var G__7391 = a;
    var G__7392 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7390, G__7391, G__7392) : f.call(null, G__7390, G__7391, G__7392);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__7393 = cljs.core.meta(obj);
    var G__7394 = a;
    var G__7395 = b;
    var G__7396 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7393, G__7394, G__7395, G__7396) : f.call(null, G__7393, G__7394, G__7395, G__7396);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__7397 = cljs.core.meta(obj);
    var G__7398 = a;
    var G__7399 = b;
    var G__7400 = c;
    var G__7401 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7397, G__7398, G__7399, G__7400, G__7401) : f.call(null, G__7397, G__7398, G__7399, G__7400, G__7401);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq7378) {
  var G__7379 = cljs.core.first(seq7378);
  var seq7378__$1 = cljs.core.next(seq7378);
  var G__7380 = cljs.core.first(seq7378__$1);
  var seq7378__$2 = cljs.core.next(seq7378__$1);
  var G__7381 = cljs.core.first(seq7378__$2);
  var seq7378__$3 = cljs.core.next(seq7378__$2);
  var G__7382 = cljs.core.first(seq7378__$3);
  var seq7378__$4 = cljs.core.next(seq7378__$3);
  var G__7383 = cljs.core.first(seq7378__$4);
  var seq7378__$5 = cljs.core.next(seq7378__$4);
  var G__7384 = cljs.core.first(seq7378__$5);
  var seq7378__$6 = cljs.core.next(seq7378__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, seq7378__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args7406 = [];
  var len__5318__auto___7412 = arguments.length;
  var i__5319__auto___7413 = 0;
  while (true) {
    if (i__5319__auto___7413 < len__5318__auto___7412) {
      args7406.push(arguments[i__5319__auto___7413]);
      var G__7414 = i__5319__auto___7413 + 1;
      i__5319__auto___7413 = G__7414;
      continue;
    } else {
    }
    break;
  }
  var G__7411 = args7406.length;
  switch(G__7411) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7406.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq7407) {
  var G__7408 = cljs.core.first(seq7407);
  var seq7407__$1 = cljs.core.next(seq7407);
  var G__7409 = cljs.core.first(seq7407__$1);
  var seq7407__$2 = cljs.core.next(seq7407__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7408, G__7409, seq7407__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core7419 !== "undefined") {
  } else {
    cljs.core.t_cljs$core7419 = function(nil_iter, meta7420) {
      this.nil_iter = nil_iter;
      this.meta7420 = meta7420;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core7419.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7421, meta7420__$1) {
      var self__ = this;
      var _7421__$1 = this;
      return new cljs.core.t_cljs$core7419(self__.nil_iter, meta7420__$1);
    };
    cljs.core.t_cljs$core7419.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7421) {
      var self__ = this;
      var _7421__$1 = this;
      return self__.meta7420;
    };
    cljs.core.t_cljs$core7419.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core7419.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core7419.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core7419.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta7420", "meta7420", -594614690, null)], 
      null);
    };
    cljs.core.t_cljs$core7419.cljs$lang$type = true;
    cljs.core.t_cljs$core7419.cljs$lang$ctorStr = "cljs.core/t_cljs$core7419";
    cljs.core.t_cljs$core7419.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
      return cljs.core._write(writer__4859__auto__, "cljs.core/t_cljs$core7419");
    };
    cljs.core.__GT_t_cljs$core7419 = function cljs$core$nil_iter_$___GT_t_cljs$core7419(nil_iter__$1, meta7420) {
      return new cljs.core.t_cljs$core7419(nil_iter__$1, meta7420);
    };
  }
  return new cljs.core.t_cljs$core7419(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.LazyTransformer;
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4248__auto__ = !(lt.stepper == null);
      if (and__4248__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4248__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7422 = lt;
        var G__7423 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7422, G__7423) : self__.xform.call(null, G__7422, G__7423);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7424 = cljs.core.next(iters__$1);
        iters__$1 = G__7424;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5163__auto___7425 = self__.iters.length;
  var i_7426 = 0;
  while (true) {
    if (i_7426 < n__5163__auto___7425) {
      self__.nexts[i_7426] = self__.iters[i_7426].next();
      var G__7427 = i_7426 + 1;
      i_7426 = G__7427;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4248__auto__ = !(lt.stepper == null);
      if (and__4248__auto__) {
        return this$.hasNext();
      } else {
        return and__4248__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args7428 = [];
  var len__5318__auto___7431 = arguments.length;
  var i__5319__auto___7432 = 0;
  while (true) {
    if (i__5319__auto___7432 < len__5318__auto___7431) {
      args7428.push(arguments[i__5319__auto___7432]);
      var G__7433 = i__5319__auto___7432 + 1;
      i__5319__auto___7432 = G__7433;
      continue;
    } else {
    }
    break;
  }
  var G__7430 = args7428.length;
  switch(G__7430) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7428.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7435_7439 = cljs.core.seq(colls);
  var chunk__7436_7440 = null;
  var count__7437_7441 = 0;
  var i__7438_7442 = 0;
  while (true) {
    if (i__7438_7442 < count__7437_7441) {
      var coll_7443 = chunk__7436_7440.cljs$core$IIndexed$_nth$arity$2(null, i__7438_7442);
      iters.push(cljs.core.iter(coll_7443));
      var G__7444 = seq__7435_7439;
      var G__7445 = chunk__7436_7440;
      var G__7446 = count__7437_7441;
      var G__7447 = i__7438_7442 + 1;
      seq__7435_7439 = G__7444;
      chunk__7436_7440 = G__7445;
      count__7437_7441 = G__7446;
      i__7438_7442 = G__7447;
      continue;
    } else {
      var temp__4425__auto___7448 = cljs.core.seq(seq__7435_7439);
      if (temp__4425__auto___7448) {
        var seq__7435_7449__$1 = temp__4425__auto___7448;
        if (cljs.core.chunked_seq_QMARK_(seq__7435_7449__$1)) {
          var c__5063__auto___7450 = cljs.core.chunk_first(seq__7435_7449__$1);
          var G__7451 = cljs.core.chunk_rest(seq__7435_7449__$1);
          var G__7452 = c__5063__auto___7450;
          var G__7453 = cljs.core.count(c__5063__auto___7450);
          var G__7454 = 0;
          seq__7435_7439 = G__7451;
          chunk__7436_7440 = G__7452;
          count__7437_7441 = G__7453;
          i__7438_7442 = G__7454;
          continue;
        } else {
          var coll_7455 = cljs.core.first(seq__7435_7449__$1);
          iters.push(cljs.core.iter(coll_7455));
          var G__7456 = cljs.core.next(seq__7435_7449__$1);
          var G__7457 = null;
          var G__7458 = 0;
          var G__7459 = 0;
          seq__7435_7439 = G__7456;
          chunk__7436_7440 = G__7457;
          count__7437_7441 = G__7458;
          i__7438_7442 = G__7459;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args7460 = [];
  var len__5318__auto___7466 = arguments.length;
  var i__5319__auto___7467 = 0;
  while (true) {
    if (i__5319__auto___7467 < len__5318__auto___7466) {
      args7460.push(arguments[i__5319__auto___7467]);
      var G__7468 = i__5319__auto___7467 + 1;
      i__5319__auto___7467 = G__7468;
      continue;
    } else {
    }
    break;
  }
  var G__7465 = args7460.length;
  switch(G__7465) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7460.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4260__auto__ = cljs.core.seq(coll);
    if (or__4260__auto__) {
      return or__4260__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq7461) {
  var G__7462 = cljs.core.first(seq7461);
  var seq7461__$1 = cljs.core.next(seq7461);
  var G__7463 = cljs.core.first(seq7461__$1);
  var seq7461__$2 = cljs.core.next(seq7461__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__7462, G__7463, seq7461__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7471 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7471) : pred.call(null, G__7471);
      }())) {
        var G__7472 = pred;
        var G__7473 = cljs.core.next(coll);
        pred = G__7472;
        coll = G__7473;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4260__auto__ = function() {
        var G__7477 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7477) : pred.call(null, G__7477);
      }();
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var G__7478 = pred;
        var G__7479 = cljs.core.next(coll);
        pred = G__7478;
        coll = G__7479;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__7480 = null;
    var G__7480__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__7480__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__7480__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__7480__3 = function() {
      var G__7481__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7481 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7482__i = 0, G__7482__a = new Array(arguments.length - 2);
          while (G__7482__i < G__7482__a.length) {
            G__7482__a[G__7482__i] = arguments[G__7482__i + 2];
            ++G__7482__i;
          }
          zs = new cljs.core.IndexedSeq(G__7482__a, 0);
        }
        return G__7481__delegate.call(this, x, y, zs);
      };
      G__7481.cljs$lang$maxFixedArity = 2;
      G__7481.cljs$lang$applyTo = function(arglist__7483) {
        var x = cljs.core.first(arglist__7483);
        arglist__7483 = cljs.core.next(arglist__7483);
        var y = cljs.core.first(arglist__7483);
        var zs = cljs.core.rest(arglist__7483);
        return G__7481__delegate(x, y, zs);
      };
      G__7481.cljs$core$IFn$_invoke$arity$variadic = G__7481__delegate;
      return G__7481;
    }();
    G__7480 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7480__0.call(this);
        case 1:
          return G__7480__1.call(this, x);
        case 2:
          return G__7480__2.call(this, x, y);
        default:
          var G__7484 = null;
          if (arguments.length > 2) {
            var G__7485__i = 0, G__7485__a = new Array(arguments.length - 2);
            while (G__7485__i < G__7485__a.length) {
              G__7485__a[G__7485__i] = arguments[G__7485__i + 2];
              ++G__7485__i;
            }
            G__7484 = new cljs.core.IndexedSeq(G__7485__a, 0);
          }
          return G__7480__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7484);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7480.cljs$lang$maxFixedArity = 2;
    G__7480.cljs$lang$applyTo = G__7480__3.cljs$lang$applyTo;
    G__7480.cljs$core$IFn$_invoke$arity$0 = G__7480__0;
    G__7480.cljs$core$IFn$_invoke$arity$1 = G__7480__1;
    G__7480.cljs$core$IFn$_invoke$arity$2 = G__7480__2;
    G__7480.cljs$core$IFn$_invoke$arity$variadic = G__7480__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7480;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__7486__delegate = function(args) {
      return x;
    };
    var G__7486 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7487__i = 0, G__7487__a = new Array(arguments.length - 0);
        while (G__7487__i < G__7487__a.length) {
          G__7487__a[G__7487__i] = arguments[G__7487__i + 0];
          ++G__7487__i;
        }
        args = new cljs.core.IndexedSeq(G__7487__a, 0);
      }
      return G__7486__delegate.call(this, args);
    };
    G__7486.cljs$lang$maxFixedArity = 0;
    G__7486.cljs$lang$applyTo = function(arglist__7488) {
      var args = cljs.core.seq(arglist__7488);
      return G__7486__delegate(args);
    };
    G__7486.cljs$core$IFn$_invoke$arity$variadic = G__7486__delegate;
    return G__7486;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args7489 = [];
  var len__5318__auto___7516 = arguments.length;
  var i__5319__auto___7517 = 0;
  while (true) {
    if (i__5319__auto___7517 < len__5318__auto___7516) {
      args7489.push(arguments[i__5319__auto___7517]);
      var G__7518 = i__5319__auto___7517 + 1;
      i__5319__auto___7517 = G__7518;
      continue;
    } else {
    }
    break;
  }
  var G__7495 = args7489.length;
  switch(G__7495) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7489.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__7520 = null;
    var G__7520__0 = function() {
      var G__7496 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7496) : f.call(null, G__7496);
    };
    var G__7520__1 = function(x) {
      var G__7497 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7497) : f.call(null, G__7497);
    };
    var G__7520__2 = function(x, y) {
      var G__7498 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7498) : f.call(null, G__7498);
    };
    var G__7520__3 = function(x, y, z) {
      var G__7499 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7499) : f.call(null, G__7499);
    };
    var G__7520__4 = function() {
      var G__7521__delegate = function(x, y, z, args) {
        var G__7500 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7500) : f.call(null, G__7500);
      };
      var G__7521 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7522__i = 0, G__7522__a = new Array(arguments.length - 3);
          while (G__7522__i < G__7522__a.length) {
            G__7522__a[G__7522__i] = arguments[G__7522__i + 3];
            ++G__7522__i;
          }
          args = new cljs.core.IndexedSeq(G__7522__a, 0);
        }
        return G__7521__delegate.call(this, x, y, z, args);
      };
      G__7521.cljs$lang$maxFixedArity = 3;
      G__7521.cljs$lang$applyTo = function(arglist__7523) {
        var x = cljs.core.first(arglist__7523);
        arglist__7523 = cljs.core.next(arglist__7523);
        var y = cljs.core.first(arglist__7523);
        arglist__7523 = cljs.core.next(arglist__7523);
        var z = cljs.core.first(arglist__7523);
        var args = cljs.core.rest(arglist__7523);
        return G__7521__delegate(x, y, z, args);
      };
      G__7521.cljs$core$IFn$_invoke$arity$variadic = G__7521__delegate;
      return G__7521;
    }();
    G__7520 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7520__0.call(this);
        case 1:
          return G__7520__1.call(this, x);
        case 2:
          return G__7520__2.call(this, x, y);
        case 3:
          return G__7520__3.call(this, x, y, z);
        default:
          var G__7524 = null;
          if (arguments.length > 3) {
            var G__7525__i = 0, G__7525__a = new Array(arguments.length - 3);
            while (G__7525__i < G__7525__a.length) {
              G__7525__a[G__7525__i] = arguments[G__7525__i + 3];
              ++G__7525__i;
            }
            G__7524 = new cljs.core.IndexedSeq(G__7525__a, 0);
          }
          return G__7520__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7524);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7520.cljs$lang$maxFixedArity = 3;
    G__7520.cljs$lang$applyTo = G__7520__4.cljs$lang$applyTo;
    G__7520.cljs$core$IFn$_invoke$arity$0 = G__7520__0;
    G__7520.cljs$core$IFn$_invoke$arity$1 = G__7520__1;
    G__7520.cljs$core$IFn$_invoke$arity$2 = G__7520__2;
    G__7520.cljs$core$IFn$_invoke$arity$3 = G__7520__3;
    G__7520.cljs$core$IFn$_invoke$arity$variadic = G__7520__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7520;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__7526 = null;
    var G__7526__0 = function() {
      var G__7502 = function() {
        var G__7503 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7503) : g.call(null, G__7503);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7502) : f.call(null, G__7502);
    };
    var G__7526__1 = function(x) {
      var G__7505 = function() {
        var G__7506 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7506) : g.call(null, G__7506);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7505) : f.call(null, G__7505);
    };
    var G__7526__2 = function(x, y) {
      var G__7508 = function() {
        var G__7509 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7509) : g.call(null, G__7509);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7508) : f.call(null, G__7508);
    };
    var G__7526__3 = function(x, y, z) {
      var G__7511 = function() {
        var G__7512 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7512) : g.call(null, G__7512);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7511) : f.call(null, G__7511);
    };
    var G__7526__4 = function() {
      var G__7527__delegate = function(x, y, z, args) {
        var G__7514 = function() {
          var G__7515 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7515) : g.call(null, G__7515);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7514) : f.call(null, G__7514);
      };
      var G__7527 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7528__i = 0, G__7528__a = new Array(arguments.length - 3);
          while (G__7528__i < G__7528__a.length) {
            G__7528__a[G__7528__i] = arguments[G__7528__i + 3];
            ++G__7528__i;
          }
          args = new cljs.core.IndexedSeq(G__7528__a, 0);
        }
        return G__7527__delegate.call(this, x, y, z, args);
      };
      G__7527.cljs$lang$maxFixedArity = 3;
      G__7527.cljs$lang$applyTo = function(arglist__7529) {
        var x = cljs.core.first(arglist__7529);
        arglist__7529 = cljs.core.next(arglist__7529);
        var y = cljs.core.first(arglist__7529);
        arglist__7529 = cljs.core.next(arglist__7529);
        var z = cljs.core.first(arglist__7529);
        var args = cljs.core.rest(arglist__7529);
        return G__7527__delegate(x, y, z, args);
      };
      G__7527.cljs$core$IFn$_invoke$arity$variadic = G__7527__delegate;
      return G__7527;
    }();
    G__7526 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7526__0.call(this);
        case 1:
          return G__7526__1.call(this, x);
        case 2:
          return G__7526__2.call(this, x, y);
        case 3:
          return G__7526__3.call(this, x, y, z);
        default:
          var G__7530 = null;
          if (arguments.length > 3) {
            var G__7531__i = 0, G__7531__a = new Array(arguments.length - 3);
            while (G__7531__i < G__7531__a.length) {
              G__7531__a[G__7531__i] = arguments[G__7531__i + 3];
              ++G__7531__i;
            }
            G__7530 = new cljs.core.IndexedSeq(G__7531__a, 0);
          }
          return G__7526__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7530);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7526.cljs$lang$maxFixedArity = 3;
    G__7526.cljs$lang$applyTo = G__7526__4.cljs$lang$applyTo;
    G__7526.cljs$core$IFn$_invoke$arity$0 = G__7526__0;
    G__7526.cljs$core$IFn$_invoke$arity$1 = G__7526__1;
    G__7526.cljs$core$IFn$_invoke$arity$2 = G__7526__2;
    G__7526.cljs$core$IFn$_invoke$arity$3 = G__7526__3;
    G__7526.cljs$core$IFn$_invoke$arity$variadic = G__7526__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7526;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__7532__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__7533 = cljs.core.first(fs__$2).call(null, ret);
            var G__7534 = cljs.core.next(fs__$2);
            ret = G__7533;
            fs__$2 = G__7534;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__7532 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__7535__i = 0, G__7535__a = new Array(arguments.length - 0);
          while (G__7535__i < G__7535__a.length) {
            G__7535__a[G__7535__i] = arguments[G__7535__i + 0];
            ++G__7535__i;
          }
          args = new cljs.core.IndexedSeq(G__7535__a, 0);
        }
        return G__7532__delegate.call(this, args);
      };
      G__7532.cljs$lang$maxFixedArity = 0;
      G__7532.cljs$lang$applyTo = function(arglist__7536) {
        var args = cljs.core.seq(arglist__7536);
        return G__7532__delegate(args);
      };
      G__7532.cljs$core$IFn$_invoke$arity$variadic = G__7532__delegate;
      return G__7532;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq7490) {
  var G__7491 = cljs.core.first(seq7490);
  var seq7490__$1 = cljs.core.next(seq7490);
  var G__7492 = cljs.core.first(seq7490__$1);
  var seq7490__$2 = cljs.core.next(seq7490__$1);
  var G__7493 = cljs.core.first(seq7490__$2);
  var seq7490__$3 = cljs.core.next(seq7490__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__7491, G__7492, G__7493, seq7490__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args7537 = [];
  var len__5318__auto___7545 = arguments.length;
  var i__5319__auto___7546 = 0;
  while (true) {
    if (i__5319__auto___7546 < len__5318__auto___7545) {
      args7537.push(arguments[i__5319__auto___7546]);
      var G__7547 = i__5319__auto___7546 + 1;
      i__5319__auto___7546 = G__7547;
      continue;
    } else {
    }
    break;
  }
  var G__7544 = args7537.length;
  switch(G__7544) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7537.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5337__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__7549 = null;
    var G__7549__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__7549__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__7549__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__7549__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__7549__4 = function() {
      var G__7550__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__7550 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7551__i = 0, G__7551__a = new Array(arguments.length - 3);
          while (G__7551__i < G__7551__a.length) {
            G__7551__a[G__7551__i] = arguments[G__7551__i + 3];
            ++G__7551__i;
          }
          args = new cljs.core.IndexedSeq(G__7551__a, 0);
        }
        return G__7550__delegate.call(this, x, y, z, args);
      };
      G__7550.cljs$lang$maxFixedArity = 3;
      G__7550.cljs$lang$applyTo = function(arglist__7552) {
        var x = cljs.core.first(arglist__7552);
        arglist__7552 = cljs.core.next(arglist__7552);
        var y = cljs.core.first(arglist__7552);
        arglist__7552 = cljs.core.next(arglist__7552);
        var z = cljs.core.first(arglist__7552);
        var args = cljs.core.rest(arglist__7552);
        return G__7550__delegate(x, y, z, args);
      };
      G__7550.cljs$core$IFn$_invoke$arity$variadic = G__7550__delegate;
      return G__7550;
    }();
    G__7549 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7549__0.call(this);
        case 1:
          return G__7549__1.call(this, x);
        case 2:
          return G__7549__2.call(this, x, y);
        case 3:
          return G__7549__3.call(this, x, y, z);
        default:
          var G__7553 = null;
          if (arguments.length > 3) {
            var G__7554__i = 0, G__7554__a = new Array(arguments.length - 3);
            while (G__7554__i < G__7554__a.length) {
              G__7554__a[G__7554__i] = arguments[G__7554__i + 3];
              ++G__7554__i;
            }
            G__7553 = new cljs.core.IndexedSeq(G__7554__a, 0);
          }
          return G__7549__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7553);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7549.cljs$lang$maxFixedArity = 3;
    G__7549.cljs$lang$applyTo = G__7549__4.cljs$lang$applyTo;
    G__7549.cljs$core$IFn$_invoke$arity$0 = G__7549__0;
    G__7549.cljs$core$IFn$_invoke$arity$1 = G__7549__1;
    G__7549.cljs$core$IFn$_invoke$arity$2 = G__7549__2;
    G__7549.cljs$core$IFn$_invoke$arity$3 = G__7549__3;
    G__7549.cljs$core$IFn$_invoke$arity$variadic = G__7549__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7549;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__7555 = null;
    var G__7555__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__7555__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__7555__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__7555__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__7555__4 = function() {
      var G__7556__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__7556 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7557__i = 0, G__7557__a = new Array(arguments.length - 3);
          while (G__7557__i < G__7557__a.length) {
            G__7557__a[G__7557__i] = arguments[G__7557__i + 3];
            ++G__7557__i;
          }
          args = new cljs.core.IndexedSeq(G__7557__a, 0);
        }
        return G__7556__delegate.call(this, x, y, z, args);
      };
      G__7556.cljs$lang$maxFixedArity = 3;
      G__7556.cljs$lang$applyTo = function(arglist__7558) {
        var x = cljs.core.first(arglist__7558);
        arglist__7558 = cljs.core.next(arglist__7558);
        var y = cljs.core.first(arglist__7558);
        arglist__7558 = cljs.core.next(arglist__7558);
        var z = cljs.core.first(arglist__7558);
        var args = cljs.core.rest(arglist__7558);
        return G__7556__delegate(x, y, z, args);
      };
      G__7556.cljs$core$IFn$_invoke$arity$variadic = G__7556__delegate;
      return G__7556;
    }();
    G__7555 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7555__0.call(this);
        case 1:
          return G__7555__1.call(this, x);
        case 2:
          return G__7555__2.call(this, x, y);
        case 3:
          return G__7555__3.call(this, x, y, z);
        default:
          var G__7559 = null;
          if (arguments.length > 3) {
            var G__7560__i = 0, G__7560__a = new Array(arguments.length - 3);
            while (G__7560__i < G__7560__a.length) {
              G__7560__a[G__7560__i] = arguments[G__7560__i + 3];
              ++G__7560__i;
            }
            G__7559 = new cljs.core.IndexedSeq(G__7560__a, 0);
          }
          return G__7555__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7559);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7555.cljs$lang$maxFixedArity = 3;
    G__7555.cljs$lang$applyTo = G__7555__4.cljs$lang$applyTo;
    G__7555.cljs$core$IFn$_invoke$arity$0 = G__7555__0;
    G__7555.cljs$core$IFn$_invoke$arity$1 = G__7555__1;
    G__7555.cljs$core$IFn$_invoke$arity$2 = G__7555__2;
    G__7555.cljs$core$IFn$_invoke$arity$3 = G__7555__3;
    G__7555.cljs$core$IFn$_invoke$arity$variadic = G__7555__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7555;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__7561 = null;
    var G__7561__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__7561__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__7561__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__7561__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__7561__4 = function() {
      var G__7562__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__7562 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7563__i = 0, G__7563__a = new Array(arguments.length - 3);
          while (G__7563__i < G__7563__a.length) {
            G__7563__a[G__7563__i] = arguments[G__7563__i + 3];
            ++G__7563__i;
          }
          args = new cljs.core.IndexedSeq(G__7563__a, 0);
        }
        return G__7562__delegate.call(this, x, y, z, args);
      };
      G__7562.cljs$lang$maxFixedArity = 3;
      G__7562.cljs$lang$applyTo = function(arglist__7564) {
        var x = cljs.core.first(arglist__7564);
        arglist__7564 = cljs.core.next(arglist__7564);
        var y = cljs.core.first(arglist__7564);
        arglist__7564 = cljs.core.next(arglist__7564);
        var z = cljs.core.first(arglist__7564);
        var args = cljs.core.rest(arglist__7564);
        return G__7562__delegate(x, y, z, args);
      };
      G__7562.cljs$core$IFn$_invoke$arity$variadic = G__7562__delegate;
      return G__7562;
    }();
    G__7561 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7561__0.call(this);
        case 1:
          return G__7561__1.call(this, x);
        case 2:
          return G__7561__2.call(this, x, y);
        case 3:
          return G__7561__3.call(this, x, y, z);
        default:
          var G__7565 = null;
          if (arguments.length > 3) {
            var G__7566__i = 0, G__7566__a = new Array(arguments.length - 3);
            while (G__7566__i < G__7566__a.length) {
              G__7566__a[G__7566__i] = arguments[G__7566__i + 3];
              ++G__7566__i;
            }
            G__7565 = new cljs.core.IndexedSeq(G__7566__a, 0);
          }
          return G__7561__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7565);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7561.cljs$lang$maxFixedArity = 3;
    G__7561.cljs$lang$applyTo = G__7561__4.cljs$lang$applyTo;
    G__7561.cljs$core$IFn$_invoke$arity$0 = G__7561__0;
    G__7561.cljs$core$IFn$_invoke$arity$1 = G__7561__1;
    G__7561.cljs$core$IFn$_invoke$arity$2 = G__7561__2;
    G__7561.cljs$core$IFn$_invoke$arity$3 = G__7561__3;
    G__7561.cljs$core$IFn$_invoke$arity$variadic = G__7561__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7561;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__7567__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__7567 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7568__i = 0, G__7568__a = new Array(arguments.length - 0);
        while (G__7568__i < G__7568__a.length) {
          G__7568__a[G__7568__i] = arguments[G__7568__i + 0];
          ++G__7568__i;
        }
        args = new cljs.core.IndexedSeq(G__7568__a, 0);
      }
      return G__7567__delegate.call(this, args);
    };
    G__7567.cljs$lang$maxFixedArity = 0;
    G__7567.cljs$lang$applyTo = function(arglist__7569) {
      var args = cljs.core.seq(arglist__7569);
      return G__7567__delegate(args);
    };
    G__7567.cljs$core$IFn$_invoke$arity$variadic = G__7567__delegate;
    return G__7567;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq7538) {
  var G__7539 = cljs.core.first(seq7538);
  var seq7538__$1 = cljs.core.next(seq7538);
  var G__7540 = cljs.core.first(seq7538__$1);
  var seq7538__$2 = cljs.core.next(seq7538__$1);
  var G__7541 = cljs.core.first(seq7538__$2);
  var seq7538__$3 = cljs.core.next(seq7538__$2);
  var G__7542 = cljs.core.first(seq7538__$3);
  var seq7538__$4 = cljs.core.next(seq7538__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__7539, G__7540, G__7541, G__7542, seq7538__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args7570 = [];
  var len__5318__auto___7589 = arguments.length;
  var i__5319__auto___7590 = 0;
  while (true) {
    if (i__5319__auto___7590 < len__5318__auto___7589) {
      args7570.push(arguments[i__5319__auto___7590]);
      var G__7591 = i__5319__auto___7590 + 1;
      i__5319__auto___7590 = G__7591;
      continue;
    } else {
    }
    break;
  }
  var G__7572 = args7570.length;
  switch(G__7572) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7570.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__7593 = null;
    var G__7593__1 = function(a) {
      var G__7573 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7573) : f.call(null, G__7573);
    };
    var G__7593__2 = function(a, b) {
      var G__7574 = a == null ? x : a;
      var G__7575 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7574, G__7575) : f.call(null, G__7574, G__7575);
    };
    var G__7593__3 = function(a, b, c) {
      var G__7576 = a == null ? x : a;
      var G__7577 = b;
      var G__7578 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7576, G__7577, G__7578) : f.call(null, G__7576, G__7577, G__7578);
    };
    var G__7593__4 = function() {
      var G__7594__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__7594 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7595__i = 0, G__7595__a = new Array(arguments.length - 3);
          while (G__7595__i < G__7595__a.length) {
            G__7595__a[G__7595__i] = arguments[G__7595__i + 3];
            ++G__7595__i;
          }
          ds = new cljs.core.IndexedSeq(G__7595__a, 0);
        }
        return G__7594__delegate.call(this, a, b, c, ds);
      };
      G__7594.cljs$lang$maxFixedArity = 3;
      G__7594.cljs$lang$applyTo = function(arglist__7596) {
        var a = cljs.core.first(arglist__7596);
        arglist__7596 = cljs.core.next(arglist__7596);
        var b = cljs.core.first(arglist__7596);
        arglist__7596 = cljs.core.next(arglist__7596);
        var c = cljs.core.first(arglist__7596);
        var ds = cljs.core.rest(arglist__7596);
        return G__7594__delegate(a, b, c, ds);
      };
      G__7594.cljs$core$IFn$_invoke$arity$variadic = G__7594__delegate;
      return G__7594;
    }();
    G__7593 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__7593__1.call(this, a);
        case 2:
          return G__7593__2.call(this, a, b);
        case 3:
          return G__7593__3.call(this, a, b, c);
        default:
          var G__7597 = null;
          if (arguments.length > 3) {
            var G__7598__i = 0, G__7598__a = new Array(arguments.length - 3);
            while (G__7598__i < G__7598__a.length) {
              G__7598__a[G__7598__i] = arguments[G__7598__i + 3];
              ++G__7598__i;
            }
            G__7597 = new cljs.core.IndexedSeq(G__7598__a, 0);
          }
          return G__7593__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7597);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7593.cljs$lang$maxFixedArity = 3;
    G__7593.cljs$lang$applyTo = G__7593__4.cljs$lang$applyTo;
    G__7593.cljs$core$IFn$_invoke$arity$1 = G__7593__1;
    G__7593.cljs$core$IFn$_invoke$arity$2 = G__7593__2;
    G__7593.cljs$core$IFn$_invoke$arity$3 = G__7593__3;
    G__7593.cljs$core$IFn$_invoke$arity$variadic = G__7593__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7593;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__7599 = null;
    var G__7599__2 = function(a, b) {
      var G__7579 = a == null ? x : a;
      var G__7580 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7579, G__7580) : f.call(null, G__7579, G__7580);
    };
    var G__7599__3 = function(a, b, c) {
      var G__7581 = a == null ? x : a;
      var G__7582 = b == null ? y : b;
      var G__7583 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7581, G__7582, G__7583) : f.call(null, G__7581, G__7582, G__7583);
    };
    var G__7599__4 = function() {
      var G__7600__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__7600 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7601__i = 0, G__7601__a = new Array(arguments.length - 3);
          while (G__7601__i < G__7601__a.length) {
            G__7601__a[G__7601__i] = arguments[G__7601__i + 3];
            ++G__7601__i;
          }
          ds = new cljs.core.IndexedSeq(G__7601__a, 0);
        }
        return G__7600__delegate.call(this, a, b, c, ds);
      };
      G__7600.cljs$lang$maxFixedArity = 3;
      G__7600.cljs$lang$applyTo = function(arglist__7602) {
        var a = cljs.core.first(arglist__7602);
        arglist__7602 = cljs.core.next(arglist__7602);
        var b = cljs.core.first(arglist__7602);
        arglist__7602 = cljs.core.next(arglist__7602);
        var c = cljs.core.first(arglist__7602);
        var ds = cljs.core.rest(arglist__7602);
        return G__7600__delegate(a, b, c, ds);
      };
      G__7600.cljs$core$IFn$_invoke$arity$variadic = G__7600__delegate;
      return G__7600;
    }();
    G__7599 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7599__2.call(this, a, b);
        case 3:
          return G__7599__3.call(this, a, b, c);
        default:
          var G__7603 = null;
          if (arguments.length > 3) {
            var G__7604__i = 0, G__7604__a = new Array(arguments.length - 3);
            while (G__7604__i < G__7604__a.length) {
              G__7604__a[G__7604__i] = arguments[G__7604__i + 3];
              ++G__7604__i;
            }
            G__7603 = new cljs.core.IndexedSeq(G__7604__a, 0);
          }
          return G__7599__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7603);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7599.cljs$lang$maxFixedArity = 3;
    G__7599.cljs$lang$applyTo = G__7599__4.cljs$lang$applyTo;
    G__7599.cljs$core$IFn$_invoke$arity$2 = G__7599__2;
    G__7599.cljs$core$IFn$_invoke$arity$3 = G__7599__3;
    G__7599.cljs$core$IFn$_invoke$arity$variadic = G__7599__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7599;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__7605 = null;
    var G__7605__2 = function(a, b) {
      var G__7584 = a == null ? x : a;
      var G__7585 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7584, G__7585) : f.call(null, G__7584, G__7585);
    };
    var G__7605__3 = function(a, b, c) {
      var G__7586 = a == null ? x : a;
      var G__7587 = b == null ? y : b;
      var G__7588 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7586, G__7587, G__7588) : f.call(null, G__7586, G__7587, G__7588);
    };
    var G__7605__4 = function() {
      var G__7606__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__7606 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7607__i = 0, G__7607__a = new Array(arguments.length - 3);
          while (G__7607__i < G__7607__a.length) {
            G__7607__a[G__7607__i] = arguments[G__7607__i + 3];
            ++G__7607__i;
          }
          ds = new cljs.core.IndexedSeq(G__7607__a, 0);
        }
        return G__7606__delegate.call(this, a, b, c, ds);
      };
      G__7606.cljs$lang$maxFixedArity = 3;
      G__7606.cljs$lang$applyTo = function(arglist__7608) {
        var a = cljs.core.first(arglist__7608);
        arglist__7608 = cljs.core.next(arglist__7608);
        var b = cljs.core.first(arglist__7608);
        arglist__7608 = cljs.core.next(arglist__7608);
        var c = cljs.core.first(arglist__7608);
        var ds = cljs.core.rest(arglist__7608);
        return G__7606__delegate(a, b, c, ds);
      };
      G__7606.cljs$core$IFn$_invoke$arity$variadic = G__7606__delegate;
      return G__7606;
    }();
    G__7605 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7605__2.call(this, a, b);
        case 3:
          return G__7605__3.call(this, a, b, c);
        default:
          var G__7609 = null;
          if (arguments.length > 3) {
            var G__7610__i = 0, G__7610__a = new Array(arguments.length - 3);
            while (G__7610__i < G__7610__a.length) {
              G__7610__a[G__7610__i] = arguments[G__7610__i + 3];
              ++G__7610__i;
            }
            G__7609 = new cljs.core.IndexedSeq(G__7610__a, 0);
          }
          return G__7605__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7609);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7605.cljs$lang$maxFixedArity = 3;
    G__7605.cljs$lang$applyTo = G__7605__4.cljs$lang$applyTo;
    G__7605.cljs$core$IFn$_invoke$arity$2 = G__7605__2;
    G__7605.cljs$core$IFn$_invoke$arity$3 = G__7605__3;
    G__7605.cljs$core$IFn$_invoke$arity$variadic = G__7605__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7605;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.volatile_BANG_;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args7611 = [];
  var len__5318__auto___7644 = arguments.length;
  var i__5319__auto___7645 = 0;
  while (true) {
    if (i__5319__auto___7645 < len__5318__auto___7644) {
      args7611.push(arguments[i__5319__auto___7645]);
      var G__7646 = i__5319__auto___7645 + 1;
      i__5319__auto___7645 = G__7646;
      continue;
    } else {
    }
    break;
  }
  var G__7613 = args7611.length;
  switch(G__7613) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7611.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__7648 = null;
        var G__7648__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7648__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7648__2 = function(result, input) {
          var G__7616 = result;
          var G__7617 = function() {
            var G__7618 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__7619 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7618, G__7619) : f.call(null, G__7618, G__7619);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7616, G__7617) : rf.call(null, G__7616, G__7617);
        };
        G__7648 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7648__0.call(this);
            case 1:
              return G__7648__1.call(this, result);
            case 2:
              return G__7648__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7648.cljs$core$IFn$_invoke$arity$0 = G__7648__0;
        G__7648.cljs$core$IFn$_invoke$arity$1 = G__7648__1;
        G__7648.cljs$core$IFn$_invoke$arity$2 = G__7648__2;
        return G__7648;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5163__auto___7649 = size;
          var i_7650 = 0;
          while (true) {
            if (i_7650 < n__5163__auto___7649) {
              cljs.core.chunk_append(b, function() {
                var G__7640 = idx + i_7650;
                var G__7641 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7650);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7640, G__7641) : f.call(null, G__7640, G__7641);
              }());
              var G__7651 = i_7650 + 1;
              i_7650 = G__7651;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__7642 = idx;
            var G__7643 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7642, G__7643) : f.call(null, G__7642, G__7643);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args7652 = [];
  var len__5318__auto___7657 = arguments.length;
  var i__5319__auto___7658 = 0;
  while (true) {
    if (i__5319__auto___7658 < len__5318__auto___7657) {
      args7652.push(arguments[i__5319__auto___7658]);
      var G__7659 = i__5319__auto___7658 + 1;
      i__5319__auto___7658 = G__7659;
      continue;
    } else {
    }
    break;
  }
  var G__7654 = args7652.length;
  switch(G__7654) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7652.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7661 = null;
      var G__7661__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7661__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7661__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__7661 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7661__0.call(this);
          case 1:
            return G__7661__1.call(this, result);
          case 2:
            return G__7661__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7661.cljs$core$IFn$_invoke$arity$0 = G__7661__0;
      G__7661.cljs$core$IFn$_invoke$arity$1 = G__7661__1;
      G__7661.cljs$core$IFn$_invoke$arity$2 = G__7661__2;
      return G__7661;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5163__auto___7662 = size;
        var i_7663 = 0;
        while (true) {
          if (i_7663 < n__5163__auto___7662) {
            var x_7664 = function() {
              var G__7655 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7663);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7655) : f.call(null, G__7655);
            }();
            if (x_7664 == null) {
            } else {
              cljs.core.chunk_append(b, x_7664);
            }
            var G__7665 = i_7663 + 1;
            i_7663 = G__7665;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__7656 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7656) : f.call(null, G__7656);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7666 = cljs.core.seq(self__.watches);
  var chunk__7667 = null;
  var count__7668 = 0;
  var i__7669 = 0;
  while (true) {
    if (i__7669 < count__7668) {
      var vec__7670 = chunk__7667.cljs$core$IIndexed$_nth$arity$2(null, i__7669);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7670, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7670, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__7672 = seq__7666;
      var G__7673 = chunk__7667;
      var G__7674 = count__7668;
      var G__7675 = i__7669 + 1;
      seq__7666 = G__7672;
      chunk__7667 = G__7673;
      count__7668 = G__7674;
      i__7669 = G__7675;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__7666);
      if (temp__4425__auto__) {
        var seq__7666__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7666__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__7666__$1);
          var G__7676 = cljs.core.chunk_rest(seq__7666__$1);
          var G__7677 = c__5063__auto__;
          var G__7678 = cljs.core.count(c__5063__auto__);
          var G__7679 = 0;
          seq__7666 = G__7676;
          chunk__7667 = G__7677;
          count__7668 = G__7678;
          i__7669 = G__7679;
          continue;
        } else {
          var vec__7671 = cljs.core.first(seq__7666__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7671, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7671, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__7680 = cljs.core.next(seq__7666__$1);
          var G__7681 = null;
          var G__7682 = 0;
          var G__7683 = 0;
          seq__7666 = G__7680;
          chunk__7667 = G__7681;
          count__7668 = G__7682;
          i__7669 = G__7683;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args7684 = [];
  var len__5318__auto___7692 = arguments.length;
  var i__5319__auto___7693 = 0;
  while (true) {
    if (i__5319__auto___7693 < len__5318__auto___7692) {
      args7684.push(arguments[i__5319__auto___7693]);
      var G__7694 = i__5319__auto___7693 + 1;
      i__5319__auto___7693 = G__7694;
      continue;
    } else {
    }
    break;
  }
  var G__7688 = args7684.length;
  switch(G__7688) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7684.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5337__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__7689) {
  var map__7690 = p__7689;
  var map__7690__$1 = (!(map__7690 == null) ? map__7690.cljs$lang$protocol_mask$partition0$ & 64 || map__7690.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7690) : map__7690;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7690__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7690__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq7685) {
  var G__7686 = cljs.core.first(seq7685);
  var seq7685__$1 = cljs.core.next(seq7685);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__7686, seq7685__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7697 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7697) : cljs.core.pr_str.call(null, G__7697);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args7698 = [];
  var len__5318__auto___7712 = arguments.length;
  var i__5319__auto___7713 = 0;
  while (true) {
    if (i__5319__auto___7713 < len__5318__auto___7712) {
      args7698.push(arguments[i__5319__auto___7713]);
      var G__7714 = i__5319__auto___7713 + 1;
      i__5319__auto___7713 = G__7714;
      continue;
    } else {
    }
    break;
  }
  var G__7705 = args7698.length;
  switch(G__7705) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7698.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5337__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7706 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7706) : f.call(null, G__7706);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7707 = a.state;
      var G__7708 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7707, G__7708) : f.call(null, G__7707, G__7708);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7709 = a.state;
      var G__7710 = x;
      var G__7711 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7709, G__7710, G__7711) : f.call(null, G__7709, G__7710, G__7711);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq7699) {
  var G__7700 = cljs.core.first(seq7699);
  var seq7699__$1 = cljs.core.next(seq7699);
  var G__7701 = cljs.core.first(seq7699__$1);
  var seq7699__$2 = cljs.core.next(seq7699__$1);
  var G__7702 = cljs.core.first(seq7699__$2);
  var seq7699__$3 = cljs.core.next(seq7699__$2);
  var G__7703 = cljs.core.first(seq7699__$3);
  var seq7699__$4 = cljs.core.next(seq7699__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7700, G__7701, G__7702, G__7703, seq7699__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args7716 = [];
  var len__5318__auto___7747 = arguments.length;
  var i__5319__auto___7748 = 0;
  while (true) {
    if (i__5319__auto___7748 < len__5318__auto___7747) {
      args7716.push(arguments[i__5319__auto___7748]);
      var G__7749 = i__5319__auto___7748 + 1;
      i__5319__auto___7748 = G__7749;
      continue;
    } else {
    }
    break;
  }
  var G__7718 = args7716.length;
  switch(G__7718) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7716.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__7751 = null;
        var G__7751__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7751__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7751__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__7751 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7751__0.call(this);
            case 1:
              return G__7751__1.call(this, result);
            case 2:
              return G__7751__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7751.cljs$core$IFn$_invoke$arity$0 = G__7751__0;
        G__7751.cljs$core$IFn$_invoke$arity$1 = G__7751__1;
        G__7751.cljs$core$IFn$_invoke$arity$2 = G__7751__2;
        return G__7751;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5163__auto___7752 = size;
          var i_7753 = 0;
          while (true) {
            if (i_7753 < n__5163__auto___7752) {
              var x_7754 = function() {
                var G__7743 = idx + i_7753;
                var G__7744 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7753);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7743, G__7744) : f.call(null, G__7743, G__7744);
              }();
              if (x_7754 == null) {
              } else {
                cljs.core.chunk_append(b, x_7754);
              }
              var G__7755 = i_7753 + 1;
              i_7753 = G__7755;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7745 = idx;
            var G__7746 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7745, G__7746) : f.call(null, G__7745, G__7746);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args7762 = [];
  var len__5318__auto___7769 = arguments.length;
  var i__5319__auto___7770 = 0;
  while (true) {
    if (i__5319__auto___7770 < len__5318__auto___7769) {
      args7762.push(arguments[i__5319__auto___7770]);
      var G__7771 = i__5319__auto___7770 + 1;
      i__5319__auto___7770 = G__7771;
      continue;
    } else {
    }
    break;
  }
  var G__7768 = args7762.length;
  switch(G__7768) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7762.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__7773__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4248__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4248__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4248__auto__;
          }
        }());
      };
      var G__7773 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7774__i = 0, G__7774__a = new Array(arguments.length - 3);
          while (G__7774__i < G__7774__a.length) {
            G__7774__a[G__7774__i] = arguments[G__7774__i + 3];
            ++G__7774__i;
          }
          args = new cljs.core.IndexedSeq(G__7774__a, 0);
        }
        return G__7773__delegate.call(this, x, y, z, args);
      };
      G__7773.cljs$lang$maxFixedArity = 3;
      G__7773.cljs$lang$applyTo = function(arglist__7775) {
        var x = cljs.core.first(arglist__7775);
        arglist__7775 = cljs.core.next(arglist__7775);
        var y = cljs.core.first(arglist__7775);
        arglist__7775 = cljs.core.next(arglist__7775);
        var z = cljs.core.first(arglist__7775);
        var args = cljs.core.rest(arglist__7775);
        return G__7773__delegate(x, y, z, args);
      };
      G__7773.cljs$core$IFn$_invoke$arity$variadic = G__7773__delegate;
      return G__7773;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__7776 = null;
          if (arguments.length > 3) {
            var G__7777__i = 0, G__7777__a = new Array(arguments.length - 3);
            while (G__7777__i < G__7777__a.length) {
              G__7777__a[G__7777__i] = arguments[G__7777__i + 3];
              ++G__7777__i;
            }
            G__7776 = new cljs.core.IndexedSeq(G__7777__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7776);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            var and__4248__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4248__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4248__auto____$2;
            }
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            var and__4248__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4248__auto____$2)) {
              var and__4248__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4248__auto____$3)) {
                var and__4248__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4248__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4248__auto____$4;
                }
              } else {
                return and__4248__auto____$3;
              }
            } else {
              return and__4248__auto____$2;
            }
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__7778__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4248__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4248__auto__)) {
            return cljs.core.every_QMARK_(function(and__4248__auto__) {
              return function(p1__7756_SHARP_) {
                var and__4248__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7756_SHARP_) : p1.call(null, p1__7756_SHARP_);
                if (cljs.core.truth_(and__4248__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7756_SHARP_) : p2.call(null, p1__7756_SHARP_);
                } else {
                  return and__4248__auto____$1;
                }
              };
            }(and__4248__auto__), args);
          } else {
            return and__4248__auto__;
          }
        }());
      };
      var G__7778 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7779__i = 0, G__7779__a = new Array(arguments.length - 3);
          while (G__7779__i < G__7779__a.length) {
            G__7779__a[G__7779__i] = arguments[G__7779__i + 3];
            ++G__7779__i;
          }
          args = new cljs.core.IndexedSeq(G__7779__a, 0);
        }
        return G__7778__delegate.call(this, x, y, z, args);
      };
      G__7778.cljs$lang$maxFixedArity = 3;
      G__7778.cljs$lang$applyTo = function(arglist__7780) {
        var x = cljs.core.first(arglist__7780);
        arglist__7780 = cljs.core.next(arglist__7780);
        var y = cljs.core.first(arglist__7780);
        arglist__7780 = cljs.core.next(arglist__7780);
        var z = cljs.core.first(arglist__7780);
        var args = cljs.core.rest(arglist__7780);
        return G__7778__delegate(x, y, z, args);
      };
      G__7778.cljs$core$IFn$_invoke$arity$variadic = G__7778__delegate;
      return G__7778;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__7781 = null;
          if (arguments.length > 3) {
            var G__7782__i = 0, G__7782__a = new Array(arguments.length - 3);
            while (G__7782__i < G__7782__a.length) {
              G__7782__a[G__7782__i] = arguments[G__7782__i + 3];
              ++G__7782__i;
            }
            G__7781 = new cljs.core.IndexedSeq(G__7782__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7781);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            var and__4248__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4248__auto____$2)) {
              var and__4248__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4248__auto____$3)) {
                var and__4248__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4248__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4248__auto____$4;
                }
              } else {
                return and__4248__auto____$3;
              }
            } else {
              return and__4248__auto____$2;
            }
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4248__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4248__auto__)) {
          var and__4248__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4248__auto____$1)) {
            var and__4248__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4248__auto____$2)) {
              var and__4248__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4248__auto____$3)) {
                var and__4248__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4248__auto____$4)) {
                  var and__4248__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4248__auto____$5)) {
                    var and__4248__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4248__auto____$6)) {
                      var and__4248__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4248__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4248__auto____$7;
                      }
                    } else {
                      return and__4248__auto____$6;
                    }
                  } else {
                    return and__4248__auto____$5;
                  }
                } else {
                  return and__4248__auto____$4;
                }
              } else {
                return and__4248__auto____$3;
              }
            } else {
              return and__4248__auto____$2;
            }
          } else {
            return and__4248__auto____$1;
          }
        } else {
          return and__4248__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__7783__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4248__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4248__auto__)) {
            return cljs.core.every_QMARK_(function(and__4248__auto__) {
              return function(p1__7757_SHARP_) {
                var and__4248__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7757_SHARP_) : p1.call(null, p1__7757_SHARP_);
                if (cljs.core.truth_(and__4248__auto____$1)) {
                  var and__4248__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7757_SHARP_) : p2.call(null, p1__7757_SHARP_);
                  if (cljs.core.truth_(and__4248__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7757_SHARP_) : p3.call(null, p1__7757_SHARP_);
                  } else {
                    return and__4248__auto____$2;
                  }
                } else {
                  return and__4248__auto____$1;
                }
              };
            }(and__4248__auto__), args);
          } else {
            return and__4248__auto__;
          }
        }());
      };
      var G__7783 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7784__i = 0, G__7784__a = new Array(arguments.length - 3);
          while (G__7784__i < G__7784__a.length) {
            G__7784__a[G__7784__i] = arguments[G__7784__i + 3];
            ++G__7784__i;
          }
          args = new cljs.core.IndexedSeq(G__7784__a, 0);
        }
        return G__7783__delegate.call(this, x, y, z, args);
      };
      G__7783.cljs$lang$maxFixedArity = 3;
      G__7783.cljs$lang$applyTo = function(arglist__7785) {
        var x = cljs.core.first(arglist__7785);
        arglist__7785 = cljs.core.next(arglist__7785);
        var y = cljs.core.first(arglist__7785);
        arglist__7785 = cljs.core.next(arglist__7785);
        var z = cljs.core.first(arglist__7785);
        var args = cljs.core.rest(arglist__7785);
        return G__7783__delegate(x, y, z, args);
      };
      G__7783.cljs$core$IFn$_invoke$arity$variadic = G__7783__delegate;
      return G__7783;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__7786 = null;
          if (arguments.length > 3) {
            var G__7787__i = 0, G__7787__a = new Array(arguments.length - 3);
            while (G__7787__i < G__7787__a.length) {
              G__7787__a[G__7787__i] = arguments[G__7787__i + 3];
              ++G__7787__i;
            }
            G__7786 = new cljs.core.IndexedSeq(G__7787__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7786);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7758_SHARP_) {
            return p1__7758_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7758_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7758_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7759_SHARP_) {
            var and__4248__auto__ = p1__7759_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7759_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7759_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4248__auto__)) {
              return p1__7759_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7759_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7759_SHARP_.call(null, y);
            } else {
              return and__4248__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7760_SHARP_) {
            var and__4248__auto__ = p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7760_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4248__auto__)) {
              var and__4248__auto____$1 = p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7760_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4248__auto____$1)) {
                return p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7760_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7760_SHARP_.call(null, z);
              } else {
                return and__4248__auto____$1;
              }
            } else {
              return and__4248__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__7788__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4248__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4248__auto__)) {
              return cljs.core.every_QMARK_(function(and__4248__auto__, ps__$1) {
                return function(p1__7761_SHARP_) {
                  return cljs.core.every_QMARK_(p1__7761_SHARP_, args);
                };
              }(and__4248__auto__, ps__$1), ps__$1);
            } else {
              return and__4248__auto__;
            }
          }());
        };
        var G__7788 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7789__i = 0, G__7789__a = new Array(arguments.length - 3);
            while (G__7789__i < G__7789__a.length) {
              G__7789__a[G__7789__i] = arguments[G__7789__i + 3];
              ++G__7789__i;
            }
            args = new cljs.core.IndexedSeq(G__7789__a, 0);
          }
          return G__7788__delegate.call(this, x, y, z, args);
        };
        G__7788.cljs$lang$maxFixedArity = 3;
        G__7788.cljs$lang$applyTo = function(arglist__7790) {
          var x = cljs.core.first(arglist__7790);
          arglist__7790 = cljs.core.next(arglist__7790);
          var y = cljs.core.first(arglist__7790);
          arglist__7790 = cljs.core.next(arglist__7790);
          var z = cljs.core.first(arglist__7790);
          var args = cljs.core.rest(arglist__7790);
          return G__7788__delegate(x, y, z, args);
        };
        G__7788.cljs$core$IFn$_invoke$arity$variadic = G__7788__delegate;
        return G__7788;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__7791 = null;
            if (arguments.length > 3) {
              var G__7792__i = 0, G__7792__a = new Array(arguments.length - 3);
              while (G__7792__i < G__7792__a.length) {
                G__7792__a[G__7792__i] = arguments[G__7792__i + 3];
                ++G__7792__i;
              }
              G__7791 = new cljs.core.IndexedSeq(G__7792__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7791);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq7763) {
  var G__7764 = cljs.core.first(seq7763);
  var seq7763__$1 = cljs.core.next(seq7763);
  var G__7765 = cljs.core.first(seq7763__$1);
  var seq7763__$2 = cljs.core.next(seq7763__$1);
  var G__7766 = cljs.core.first(seq7763__$2);
  var seq7763__$3 = cljs.core.next(seq7763__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__7764, G__7765, G__7766, seq7763__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args7799 = [];
  var len__5318__auto___7806 = arguments.length;
  var i__5319__auto___7807 = 0;
  while (true) {
    if (i__5319__auto___7807 < len__5318__auto___7806) {
      args7799.push(arguments[i__5319__auto___7807]);
      var G__7808 = i__5319__auto___7807 + 1;
      i__5319__auto___7807 = G__7808;
      continue;
    } else {
    }
    break;
  }
  var G__7805 = args7799.length;
  switch(G__7805) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7799.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4260__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4260__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__7810__delegate = function(x, y, z, args) {
        var or__4260__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4260__auto__)) {
          return or__4260__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__7810 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7811__i = 0, G__7811__a = new Array(arguments.length - 3);
          while (G__7811__i < G__7811__a.length) {
            G__7811__a[G__7811__i] = arguments[G__7811__i + 3];
            ++G__7811__i;
          }
          args = new cljs.core.IndexedSeq(G__7811__a, 0);
        }
        return G__7810__delegate.call(this, x, y, z, args);
      };
      G__7810.cljs$lang$maxFixedArity = 3;
      G__7810.cljs$lang$applyTo = function(arglist__7812) {
        var x = cljs.core.first(arglist__7812);
        arglist__7812 = cljs.core.next(arglist__7812);
        var y = cljs.core.first(arglist__7812);
        arglist__7812 = cljs.core.next(arglist__7812);
        var z = cljs.core.first(arglist__7812);
        var args = cljs.core.rest(arglist__7812);
        return G__7810__delegate(x, y, z, args);
      };
      G__7810.cljs$core$IFn$_invoke$arity$variadic = G__7810__delegate;
      return G__7810;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__7813 = null;
          if (arguments.length > 3) {
            var G__7814__i = 0, G__7814__a = new Array(arguments.length - 3);
            while (G__7814__i < G__7814__a.length) {
              G__7814__a[G__7814__i] = arguments[G__7814__i + 3];
              ++G__7814__i;
            }
            G__7813 = new cljs.core.IndexedSeq(G__7814__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7813);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          var or__4260__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4260__auto____$2)) {
            return or__4260__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          var or__4260__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4260__auto____$2)) {
            return or__4260__auto____$2;
          } else {
            var or__4260__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4260__auto____$3)) {
              return or__4260__auto____$3;
            } else {
              var or__4260__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4260__auto____$4)) {
                return or__4260__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__7815__delegate = function(x, y, z, args) {
        var or__4260__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4260__auto__)) {
          return or__4260__auto__;
        } else {
          return cljs.core.some(function(or__4260__auto__) {
            return function(p1__7793_SHARP_) {
              var or__4260__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7793_SHARP_) : p1.call(null, p1__7793_SHARP_);
              if (cljs.core.truth_(or__4260__auto____$1)) {
                return or__4260__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7793_SHARP_) : p2.call(null, p1__7793_SHARP_);
              }
            };
          }(or__4260__auto__), args);
        }
      };
      var G__7815 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7816__i = 0, G__7816__a = new Array(arguments.length - 3);
          while (G__7816__i < G__7816__a.length) {
            G__7816__a[G__7816__i] = arguments[G__7816__i + 3];
            ++G__7816__i;
          }
          args = new cljs.core.IndexedSeq(G__7816__a, 0);
        }
        return G__7815__delegate.call(this, x, y, z, args);
      };
      G__7815.cljs$lang$maxFixedArity = 3;
      G__7815.cljs$lang$applyTo = function(arglist__7817) {
        var x = cljs.core.first(arglist__7817);
        arglist__7817 = cljs.core.next(arglist__7817);
        var y = cljs.core.first(arglist__7817);
        arglist__7817 = cljs.core.next(arglist__7817);
        var z = cljs.core.first(arglist__7817);
        var args = cljs.core.rest(arglist__7817);
        return G__7815__delegate(x, y, z, args);
      };
      G__7815.cljs$core$IFn$_invoke$arity$variadic = G__7815__delegate;
      return G__7815;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__7818 = null;
          if (arguments.length > 3) {
            var G__7819__i = 0, G__7819__a = new Array(arguments.length - 3);
            while (G__7819__i < G__7819__a.length) {
              G__7819__a[G__7819__i] = arguments[G__7819__i + 3];
              ++G__7819__i;
            }
            G__7818 = new cljs.core.IndexedSeq(G__7819__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7818);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          var or__4260__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4260__auto____$2)) {
            return or__4260__auto____$2;
          } else {
            var or__4260__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4260__auto____$3)) {
              return or__4260__auto____$3;
            } else {
              var or__4260__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4260__auto____$4)) {
                return or__4260__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4260__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        var or__4260__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4260__auto____$1)) {
          return or__4260__auto____$1;
        } else {
          var or__4260__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4260__auto____$2)) {
            return or__4260__auto____$2;
          } else {
            var or__4260__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4260__auto____$3)) {
              return or__4260__auto____$3;
            } else {
              var or__4260__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4260__auto____$4)) {
                return or__4260__auto____$4;
              } else {
                var or__4260__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4260__auto____$5)) {
                  return or__4260__auto____$5;
                } else {
                  var or__4260__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4260__auto____$6)) {
                    return or__4260__auto____$6;
                  } else {
                    var or__4260__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4260__auto____$7)) {
                      return or__4260__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__7820__delegate = function(x, y, z, args) {
        var or__4260__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4260__auto__)) {
          return or__4260__auto__;
        } else {
          return cljs.core.some(function(or__4260__auto__) {
            return function(p1__7794_SHARP_) {
              var or__4260__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7794_SHARP_) : p1.call(null, p1__7794_SHARP_);
              if (cljs.core.truth_(or__4260__auto____$1)) {
                return or__4260__auto____$1;
              } else {
                var or__4260__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7794_SHARP_) : p2.call(null, p1__7794_SHARP_);
                if (cljs.core.truth_(or__4260__auto____$2)) {
                  return or__4260__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7794_SHARP_) : p3.call(null, p1__7794_SHARP_);
                }
              }
            };
          }(or__4260__auto__), args);
        }
      };
      var G__7820 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7821__i = 0, G__7821__a = new Array(arguments.length - 3);
          while (G__7821__i < G__7821__a.length) {
            G__7821__a[G__7821__i] = arguments[G__7821__i + 3];
            ++G__7821__i;
          }
          args = new cljs.core.IndexedSeq(G__7821__a, 0);
        }
        return G__7820__delegate.call(this, x, y, z, args);
      };
      G__7820.cljs$lang$maxFixedArity = 3;
      G__7820.cljs$lang$applyTo = function(arglist__7822) {
        var x = cljs.core.first(arglist__7822);
        arglist__7822 = cljs.core.next(arglist__7822);
        var y = cljs.core.first(arglist__7822);
        arglist__7822 = cljs.core.next(arglist__7822);
        var z = cljs.core.first(arglist__7822);
        var args = cljs.core.rest(arglist__7822);
        return G__7820__delegate(x, y, z, args);
      };
      G__7820.cljs$core$IFn$_invoke$arity$variadic = G__7820__delegate;
      return G__7820;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__7823 = null;
          if (arguments.length > 3) {
            var G__7824__i = 0, G__7824__a = new Array(arguments.length - 3);
            while (G__7824__i < G__7824__a.length) {
              G__7824__a[G__7824__i] = arguments[G__7824__i + 3];
              ++G__7824__i;
            }
            G__7823 = new cljs.core.IndexedSeq(G__7824__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7823);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7795_SHARP_) {
            return p1__7795_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7795_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7795_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7796_SHARP_) {
            var or__4260__auto__ = p1__7796_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7796_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7796_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4260__auto__)) {
              return or__4260__auto__;
            } else {
              return p1__7796_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7796_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7796_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7797_SHARP_) {
            var or__4260__auto__ = p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7797_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4260__auto__)) {
              return or__4260__auto__;
            } else {
              var or__4260__auto____$1 = p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7797_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4260__auto____$1)) {
                return or__4260__auto____$1;
              } else {
                return p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7797_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7797_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__7825__delegate = function(x, y, z, args) {
          var or__4260__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4260__auto__)) {
            return or__4260__auto__;
          } else {
            return cljs.core.some(function(or__4260__auto__, ps__$1) {
              return function(p1__7798_SHARP_) {
                return cljs.core.some(p1__7798_SHARP_, args);
              };
            }(or__4260__auto__, ps__$1), ps__$1);
          }
        };
        var G__7825 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7826__i = 0, G__7826__a = new Array(arguments.length - 3);
            while (G__7826__i < G__7826__a.length) {
              G__7826__a[G__7826__i] = arguments[G__7826__i + 3];
              ++G__7826__i;
            }
            args = new cljs.core.IndexedSeq(G__7826__a, 0);
          }
          return G__7825__delegate.call(this, x, y, z, args);
        };
        G__7825.cljs$lang$maxFixedArity = 3;
        G__7825.cljs$lang$applyTo = function(arglist__7827) {
          var x = cljs.core.first(arglist__7827);
          arglist__7827 = cljs.core.next(arglist__7827);
          var y = cljs.core.first(arglist__7827);
          arglist__7827 = cljs.core.next(arglist__7827);
          var z = cljs.core.first(arglist__7827);
          var args = cljs.core.rest(arglist__7827);
          return G__7825__delegate(x, y, z, args);
        };
        G__7825.cljs$core$IFn$_invoke$arity$variadic = G__7825__delegate;
        return G__7825;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__7828 = null;
            if (arguments.length > 3) {
              var G__7829__i = 0, G__7829__a = new Array(arguments.length - 3);
              while (G__7829__i < G__7829__a.length) {
                G__7829__a[G__7829__i] = arguments[G__7829__i + 3];
                ++G__7829__i;
              }
              G__7828 = new cljs.core.IndexedSeq(G__7829__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7828);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq7800) {
  var G__7801 = cljs.core.first(seq7800);
  var seq7800__$1 = cljs.core.next(seq7800);
  var G__7802 = cljs.core.first(seq7800__$1);
  var seq7800__$2 = cljs.core.next(seq7800__$1);
  var G__7803 = cljs.core.first(seq7800__$2);
  var seq7800__$3 = cljs.core.next(seq7800__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__7801, G__7802, G__7803, seq7800__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args7831 = [];
  var len__5318__auto___7851 = arguments.length;
  var i__5319__auto___7852 = 0;
  while (true) {
    if (i__5319__auto___7852 < len__5318__auto___7851) {
      args7831.push(arguments[i__5319__auto___7852]);
      var G__7853 = i__5319__auto___7852 + 1;
      i__5319__auto___7852 = G__7853;
      continue;
    } else {
    }
    break;
  }
  var G__7838 = args7831.length;
  switch(G__7838) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7831.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5337__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7855 = null;
      var G__7855__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7855__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7855__2 = function(result, input) {
        var G__7839 = result;
        var G__7840 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7839, G__7840) : rf.call(null, G__7839, G__7840);
      };
      var G__7855__3 = function() {
        var G__7856__delegate = function(result, input, inputs) {
          var G__7841 = result;
          var G__7842 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7841, G__7842) : rf.call(null, G__7841, G__7842);
        };
        var G__7856 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__7857__i = 0, G__7857__a = new Array(arguments.length - 2);
            while (G__7857__i < G__7857__a.length) {
              G__7857__a[G__7857__i] = arguments[G__7857__i + 2];
              ++G__7857__i;
            }
            inputs = new cljs.core.IndexedSeq(G__7857__a, 0);
          }
          return G__7856__delegate.call(this, result, input, inputs);
        };
        G__7856.cljs$lang$maxFixedArity = 2;
        G__7856.cljs$lang$applyTo = function(arglist__7858) {
          var result = cljs.core.first(arglist__7858);
          arglist__7858 = cljs.core.next(arglist__7858);
          var input = cljs.core.first(arglist__7858);
          var inputs = cljs.core.rest(arglist__7858);
          return G__7856__delegate(result, input, inputs);
        };
        G__7856.cljs$core$IFn$_invoke$arity$variadic = G__7856__delegate;
        return G__7856;
      }();
      G__7855 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__7855__0.call(this);
          case 1:
            return G__7855__1.call(this, result);
          case 2:
            return G__7855__2.call(this, result, input);
          default:
            var G__7859 = null;
            if (arguments.length > 2) {
              var G__7860__i = 0, G__7860__a = new Array(arguments.length - 2);
              while (G__7860__i < G__7860__a.length) {
                G__7860__a[G__7860__i] = arguments[G__7860__i + 2];
                ++G__7860__i;
              }
              G__7859 = new cljs.core.IndexedSeq(G__7860__a, 0);
            }
            return G__7855__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__7859);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7855.cljs$lang$maxFixedArity = 2;
      G__7855.cljs$lang$applyTo = G__7855__3.cljs$lang$applyTo;
      G__7855.cljs$core$IFn$_invoke$arity$0 = G__7855__0;
      G__7855.cljs$core$IFn$_invoke$arity$1 = G__7855__1;
      G__7855.cljs$core$IFn$_invoke$arity$2 = G__7855__2;
      G__7855.cljs$core$IFn$_invoke$arity$variadic = G__7855__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__7855;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5163__auto___7861 = size;
        var i_7862 = 0;
        while (true) {
          if (i_7862 < n__5163__auto___7861) {
            cljs.core.chunk_append(b, function() {
              var G__7843 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7862);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7843) : f.call(null, G__7843);
            }());
            var G__7863 = i_7862 + 1;
            i_7862 = G__7863;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__7844 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7844) : f.call(null, G__7844);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__7845 = cljs.core.first(s1);
        var G__7846 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7845, G__7846) : f.call(null, G__7845, G__7846);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__7847 = cljs.core.first(s1);
        var G__7848 = cljs.core.first(s2);
        var G__7849 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7847, G__7848, G__7849) : f.call(null, G__7847, G__7848, G__7849);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__7830_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__7830_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq7832) {
  var G__7833 = cljs.core.first(seq7832);
  var seq7832__$1 = cljs.core.next(seq7832);
  var G__7834 = cljs.core.first(seq7832__$1);
  var seq7832__$2 = cljs.core.next(seq7832__$1);
  var G__7835 = cljs.core.first(seq7832__$2);
  var seq7832__$3 = cljs.core.next(seq7832__$2);
  var G__7836 = cljs.core.first(seq7832__$3);
  var seq7832__$4 = cljs.core.next(seq7832__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__7833, G__7834, G__7835, G__7836, seq7832__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args7864 = [];
  var len__5318__auto___7869 = arguments.length;
  var i__5319__auto___7870 = 0;
  while (true) {
    if (i__5319__auto___7870 < len__5318__auto___7869) {
      args7864.push(arguments[i__5319__auto___7870]);
      var G__7871 = i__5319__auto___7870 + 1;
      i__5319__auto___7870 = G__7871;
      continue;
    } else {
    }
    break;
  }
  var G__7866 = args7864.length;
  switch(G__7866) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7864.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7867 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7867) : cljs.core.pr_str.call(null, G__7867);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7873 = null;
        var G__7873__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7873__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7873__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__7873 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7873__0.call(this);
            case 1:
              return G__7873__1.call(this, result);
            case 2:
              return G__7873__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7873.cljs$core$IFn$_invoke$arity$0 = G__7873__0;
        G__7873.cljs$core$IFn$_invoke$arity$1 = G__7873__1;
        G__7873.cljs$core$IFn$_invoke$arity$2 = G__7873__2;
        return G__7873;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7868 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7868) : cljs.core.pr_str.call(null, G__7868);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args7874 = [];
  var len__5318__auto___7879 = arguments.length;
  var i__5319__auto___7880 = 0;
  while (true) {
    if (i__5319__auto___7880 < len__5318__auto___7879) {
      args7874.push(arguments[i__5319__auto___7880]);
      var G__7881 = i__5319__auto___7880 + 1;
      i__5319__auto___7880 = G__7881;
      continue;
    } else {
    }
    break;
  }
  var G__7876 = args7874.length;
  switch(G__7876) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7874.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7877 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7877) : cljs.core.pr_str.call(null, G__7877);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7883 = null;
        var G__7883__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7883__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7883__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7883 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7883__0.call(this);
            case 1:
              return G__7883__1.call(this, result);
            case 2:
              return G__7883__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7883.cljs$core$IFn$_invoke$arity$0 = G__7883__0;
        G__7883.cljs$core$IFn$_invoke$arity$1 = G__7883__1;
        G__7883.cljs$core$IFn$_invoke$arity$2 = G__7883__2;
        return G__7883;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7878 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7878) : cljs.core.pr_str.call(null, G__7878);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__7884 = n__$1 - 1;
        var G__7885 = cljs.core.rest(s);
        n__$1 = G__7884;
        coll__$1 = G__7885;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args7886 = [];
  var len__5318__auto___7889 = arguments.length;
  var i__5319__auto___7890 = 0;
  while (true) {
    if (i__5319__auto___7890 < len__5318__auto___7889) {
      args7886.push(arguments[i__5319__auto___7890]);
      var G__7891 = i__5319__auto___7890 + 1;
      i__5319__auto___7890 = G__7891;
      continue;
    } else {
    }
    break;
  }
  var G__7888 = args7886.length;
  switch(G__7888) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7886.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__7893 = cljs.core.next(s);
      var G__7894 = cljs.core.next(lead);
      s = G__7893;
      lead = G__7894;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args7895 = [];
  var len__5318__auto___7900 = arguments.length;
  var i__5319__auto___7901 = 0;
  while (true) {
    if (i__5319__auto___7901 < len__5318__auto___7900) {
      args7895.push(arguments[i__5319__auto___7901]);
      var G__7902 = i__5319__auto___7901 + 1;
      i__5319__auto___7901 = G__7902;
      continue;
    } else {
    }
    break;
  }
  var G__7897 = args7895.length;
  switch(G__7897) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7895.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__7904 = null;
        var G__7904__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7904__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7904__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4248__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4248__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4248__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7904 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7904__0.call(this);
            case 1:
              return G__7904__1.call(this, result);
            case 2:
              return G__7904__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7904.cljs$core$IFn$_invoke$arity$0 = G__7904__0;
        G__7904.cljs$core$IFn$_invoke$arity$1 = G__7904__1;
        G__7904.cljs$core$IFn$_invoke$arity$2 = G__7904__2;
        return G__7904;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4248__auto__ = s;
        if (and__4248__auto__) {
          var G__7899 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__7899) : pred__$1.call(null, G__7899);
        } else {
          return and__4248__auto__;
        }
      }())) {
        var G__7905 = pred__$1;
        var G__7906 = cljs.core.rest(s);
        pred__$1 = G__7905;
        coll__$1 = G__7906;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args7907 = [];
  var len__5318__auto___7910 = arguments.length;
  var i__5319__auto___7911 = 0;
  while (true) {
    if (i__5319__auto___7911 < len__5318__auto___7910) {
      args7907.push(arguments[i__5319__auto___7911]);
      var G__7912 = i__5319__auto___7911 + 1;
      i__5319__auto___7911 = G__7912;
      continue;
    } else {
    }
    break;
  }
  var G__7909 = args7907.length;
  switch(G__7909) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7907.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args7914 = [];
  var len__5318__auto___7917 = arguments.length;
  var i__5319__auto___7918 = 0;
  while (true) {
    if (i__5319__auto___7918 < len__5318__auto___7917) {
      args7914.push(arguments[i__5319__auto___7918]);
      var G__7919 = i__5319__auto___7918 + 1;
      i__5319__auto___7918 = G__7919;
      continue;
    } else {
    }
    break;
  }
  var G__7916 = args7914.length;
  switch(G__7916) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7914.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args7923 = [];
  var len__5318__auto___7929 = arguments.length;
  var i__5319__auto___7930 = 0;
  while (true) {
    if (i__5319__auto___7930 < len__5318__auto___7929) {
      args7923.push(arguments[i__5319__auto___7930]);
      var G__7931 = i__5319__auto___7930 + 1;
      i__5319__auto___7930 = G__7931;
      continue;
    } else {
    }
    break;
  }
  var G__7928 = args7923.length;
  switch(G__7928) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7923.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5337__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq7924) {
  var G__7925 = cljs.core.first(seq7924);
  var seq7924__$1 = cljs.core.next(seq7924);
  var G__7926 = cljs.core.first(seq7924__$1);
  var seq7924__$2 = cljs.core.next(seq7924__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__7925, G__7926, seq7924__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args7933 = [];
  var len__5318__auto___7936 = arguments.length;
  var i__5319__auto___7937 = 0;
  while (true) {
    if (i__5319__auto___7937 < len__5318__auto___7936) {
      args7933.push(arguments[i__5319__auto___7937]);
      var G__7938 = i__5319__auto___7937 + 1;
      i__5319__auto___7937 = G__7938;
      continue;
    } else {
    }
    break;
  }
  var G__7935 = args7933.length;
  switch(G__7935) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7933.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__7940 = null;
        var G__7940__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7940__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7940__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7940 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7940__0.call(this);
            case 1:
              return G__7940__1.call(this, result);
            case 2:
              return G__7940__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7940.cljs$core$IFn$_invoke$arity$0 = G__7940__0;
        G__7940.cljs$core$IFn$_invoke$arity$1 = G__7940__1;
        G__7940.cljs$core$IFn$_invoke$arity$2 = G__7940__2;
        return G__7940;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.cat;
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args7949 = [];
  var len__5318__auto___7954 = arguments.length;
  var i__5319__auto___7955 = 0;
  while (true) {
    if (i__5319__auto___7955 < len__5318__auto___7954) {
      args7949.push(arguments[i__5319__auto___7955]);
      var G__7956 = i__5319__auto___7955 + 1;
      i__5319__auto___7955 = G__7956;
      continue;
    } else {
    }
    break;
  }
  var G__7953 = args7949.length;
  switch(G__7953) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7949.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5337__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq7950) {
  var G__7951 = cljs.core.first(seq7950);
  var seq7950__$1 = cljs.core.next(seq7950);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__7951, seq7950__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args7958 = [];
  var len__5318__auto___7962 = arguments.length;
  var i__5319__auto___7963 = 0;
  while (true) {
    if (i__5319__auto___7963 < len__5318__auto___7962) {
      args7958.push(arguments[i__5319__auto___7963]);
      var G__7964 = i__5319__auto___7963 + 1;
      i__5319__auto___7963 = G__7964;
      continue;
    } else {
    }
    break;
  }
  var G__7960 = args7958.length;
  switch(G__7960) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7958.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__7966 = null;
      var G__7966__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7966__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7966__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__7966 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7966__0.call(this);
          case 1:
            return G__7966__1.call(this, result);
          case 2:
            return G__7966__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7966.cljs$core$IFn$_invoke$arity$0 = G__7966__0;
      G__7966.cljs$core$IFn$_invoke$arity$1 = G__7966__1;
      G__7966.cljs$core$IFn$_invoke$arity$2 = G__7966__2;
      return G__7966;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5163__auto___7967 = size;
        var i_7968 = 0;
        while (true) {
          if (i_7968 < n__5163__auto___7967) {
            if (cljs.core.truth_(function() {
              var G__7961 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7968);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7961) : pred.call(null, G__7961);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7968));
            } else {
            }
            var G__7969 = i_7968 + 1;
            i_7968 = G__7969;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args7970 = [];
  var len__5318__auto___7973 = arguments.length;
  var i__5319__auto___7974 = 0;
  while (true) {
    if (i__5319__auto___7974 < len__5318__auto___7973) {
      args7970.push(arguments[i__5319__auto___7974]);
      var G__7975 = i__5319__auto___7974 + 1;
      i__5319__auto___7974 = G__7975;
      continue;
    } else {
    }
    break;
  }
  var G__7972 = args7970.length;
  switch(G__7972) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7970.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__7977_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__7977_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args7978 = [];
  var len__5318__auto___7983 = arguments.length;
  var i__5319__auto___7984 = 0;
  while (true) {
    if (i__5319__auto___7984 < len__5318__auto___7983) {
      args7978.push(arguments[i__5319__auto___7984]);
      var G__7985 = i__5319__auto___7984 + 1;
      i__5319__auto___7984 = G__7985;
      continue;
    } else {
    }
    break;
  }
  var G__7980 = args7978.length;
  switch(G__7980) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7978.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args7987 = [];
  var len__5318__auto___7995 = arguments.length;
  var i__5319__auto___7996 = 0;
  while (true) {
    if (i__5319__auto___7996 < len__5318__auto___7995) {
      args7987.push(arguments[i__5319__auto___7996]);
      var G__7997 = i__5319__auto___7996 + 1;
      i__5319__auto___7996 = G__7997;
      continue;
    } else {
    }
    break;
  }
  var G__7994 = args7987.length;
  switch(G__7994) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args7987.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5337__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq7988) {
  var G__7989 = cljs.core.first(seq7988);
  var seq7988__$1 = cljs.core.next(seq7988);
  var G__7990 = cljs.core.first(seq7988__$1);
  var seq7988__$2 = cljs.core.next(seq7988__$1);
  var G__7991 = cljs.core.first(seq7988__$2);
  var seq7988__$3 = cljs.core.next(seq7988__$2);
  var G__7992 = cljs.core.first(seq7988__$3);
  var seq7988__$4 = cljs.core.next(seq7988__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__7989, G__7990, G__7991, G__7992, seq7988__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args7999 = [];
  var len__5318__auto___8002 = arguments.length;
  var i__5319__auto___8003 = 0;
  while (true) {
    if (i__5319__auto___8003 < len__5318__auto___8002) {
      args7999.push(arguments[i__5319__auto___8003]);
      var G__8004 = i__5319__auto___8003 + 1;
      i__5319__auto___8003 = G__8004;
      continue;
    } else {
    }
    break;
  }
  var G__8001 = args7999.length;
  switch(G__8001) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7999.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args8006 = [];
  var len__5318__auto___8010 = arguments.length;
  var i__5319__auto___8011 = 0;
  while (true) {
    if (i__5319__auto___8011 < len__5318__auto___8010) {
      args8006.push(arguments[i__5319__auto___8011]);
      var G__8012 = i__5319__auto___8011 + 1;
      i__5319__auto___8011 = G__8012;
      continue;
    } else {
    }
    break;
  }
  var G__8008 = args8006.length;
  switch(G__8008) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8006.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__8014 = sentinel;
          var G__8015 = m__$2;
          var G__8016 = cljs.core.next(ks__$1);
          sentinel = G__8014;
          m__$1 = G__8015;
          ks__$1 = G__8016;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__8017, v) {
  var vec__8022 = p__8017;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8022, 0, null);
  var ks = cljs.core.nthnext(vec__8022, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args8023 = [];
  var len__5318__auto___8053 = arguments.length;
  var i__5319__auto___8054 = 0;
  while (true) {
    if (i__5319__auto___8054 < len__5318__auto___8053) {
      args8023.push(arguments[i__5319__auto___8054]);
      var G__8055 = i__5319__auto___8054 + 1;
      i__5319__auto___8054 = G__8055;
      continue;
    } else {
    }
    break;
  }
  var G__8032 = args8023.length;
  switch(G__8032) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8023.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5337__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__8033, f) {
  var vec__8034 = p__8033;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8034, 0, null);
  var ks = cljs.core.nthnext(vec__8034, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8035) : f.call(null, G__8035);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__8036, f, a) {
  var vec__8037 = p__8036;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8037, 0, null);
  var ks = cljs.core.nthnext(vec__8037, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8038 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8039 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8038, G__8039) : f.call(null, G__8038, G__8039);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__8040, f, a, b) {
  var vec__8041 = p__8040;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8041, 0, null);
  var ks = cljs.core.nthnext(vec__8041, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8042 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8043 = a;
      var G__8044 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8042, G__8043, G__8044) : f.call(null, G__8042, G__8043, G__8044);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__8045, f, a, b, c) {
  var vec__8046 = p__8045;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8046, 0, null);
  var ks = cljs.core.nthnext(vec__8046, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8047 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8048 = a;
      var G__8049 = b;
      var G__8050 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8047, G__8048, G__8049, G__8050) : f.call(null, G__8047, G__8048, G__8049, G__8050);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__8051, f, a, b, c, args) {
  var vec__8052 = p__8051;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8052, 0, null);
  var ks = cljs.core.nthnext(vec__8052, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq8024) {
  var G__8025 = cljs.core.first(seq8024);
  var seq8024__$1 = cljs.core.next(seq8024);
  var G__8026 = cljs.core.first(seq8024__$1);
  var seq8024__$2 = cljs.core.next(seq8024__$1);
  var G__8027 = cljs.core.first(seq8024__$2);
  var seq8024__$3 = cljs.core.next(seq8024__$2);
  var G__8028 = cljs.core.first(seq8024__$3);
  var seq8024__$4 = cljs.core.next(seq8024__$3);
  var G__8029 = cljs.core.first(seq8024__$4);
  var seq8024__$5 = cljs.core.next(seq8024__$4);
  var G__8030 = cljs.core.first(seq8024__$5);
  var seq8024__$6 = cljs.core.next(seq8024__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__8025, G__8026, G__8027, G__8028, G__8029, G__8030, seq8024__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args8057 = [];
  var len__5318__auto___8077 = arguments.length;
  var i__5319__auto___8078 = 0;
  while (true) {
    if (i__5319__auto___8078 < len__5318__auto___8077) {
      args8057.push(arguments[i__5319__auto___8078]);
      var G__8079 = i__5319__auto___8078 + 1;
      i__5319__auto___8078 = G__8079;
      continue;
    } else {
    }
    break;
  }
  var G__8066 = args8057.length;
  switch(G__8066) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8057.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5337__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8067 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8067) : f.call(null, G__8067);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8068 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8069 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8068, G__8069) : f.call(null, G__8068, G__8069);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8070 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8071 = x;
    var G__8072 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8070, G__8071, G__8072) : f.call(null, G__8070, G__8071, G__8072);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8073 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8074 = x;
    var G__8075 = y;
    var G__8076 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8073, G__8074, G__8075, G__8076) : f.call(null, G__8073, G__8074, G__8075, G__8076);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq8058) {
  var G__8059 = cljs.core.first(seq8058);
  var seq8058__$1 = cljs.core.next(seq8058);
  var G__8060 = cljs.core.first(seq8058__$1);
  var seq8058__$2 = cljs.core.next(seq8058__$1);
  var G__8061 = cljs.core.first(seq8058__$2);
  var seq8058__$3 = cljs.core.next(seq8058__$2);
  var G__8062 = cljs.core.first(seq8058__$3);
  var seq8058__$4 = cljs.core.next(seq8058__$3);
  var G__8063 = cljs.core.first(seq8058__$4);
  var seq8058__$5 = cljs.core.next(seq8058__$4);
  var G__8064 = cljs.core.first(seq8058__$5);
  var seq8058__$6 = cljs.core.next(seq8058__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__8059, G__8060, G__8061, G__8062, G__8063, G__8064, seq8058__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__8081 = ll - 5;
      var G__8082 = r;
      ll = G__8081;
      ret = G__8082;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__8087 = cljs.core.pv_aget(node, 0);
      var G__8088 = level - 5;
      node = G__8087;
      level = G__8088;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__8089 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__8090 = level - 5;
        node = G__8089;
        level = G__8090;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.tv_editable_root;
cljs.core.tv_editable_tail;
cljs.core.TransientVector;
cljs.core.deref;
cljs.core.pr_sequential_writer;
cljs.core.pr_writer;
cljs.core.chunked_seq;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8100 = init__$2;
              var G__8101 = j + i;
              var G__8102 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8100, G__8101, G__8102) : f.call(null, G__8100, G__8101, G__8102);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8109 = j + 1;
              var G__8110 = init__$3;
              j = G__8109;
              init__$2 = G__8110;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8111 = i + len;
        var G__8112 = init__$2;
        i = G__8111;
        init__$1 = G__8112;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8103 = init__$2;
              var G__8104 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8103, G__8104) : f.call(null, G__8103, G__8104);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8113 = j + 1;
              var G__8114 = init__$3;
              j = G__8113;
              init__$2 = G__8114;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8115 = i + len;
        var G__8116 = init__$2;
        i = G__8115;
        init__$1 = G__8116;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__8105 = coll__$1;
      var G__8106 = cljs.core.first_array_for_longvec(coll__$1);
      var G__8107 = 0;
      var G__8108 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8105, G__8106, G__8107, G__8108) : cljs.core.chunked_seq.call(null, G__8105, G__8106, G__8107, G__8108);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5163__auto___8117 = len;
    var i_8118 = 0;
    while (true) {
      if (i_8118 < n__5163__auto___8117) {
        new_tail[i_8118] = self__.tail[i_8118];
        var G__8119 = i_8118 + 1;
        i_8118 = G__8119;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8120 = null;
  var G__8120__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8120__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8120 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8120__2.call(this, self__, k);
      case 3:
        return G__8120__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8120.cljs$core$IFn$_invoke$arity$2 = G__8120__2;
  G__8120.cljs$core$IFn$_invoke$arity$3 = G__8120__3;
  return G__8120;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args8099) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8099)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__8121 = i + 1;
        var G__8122 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__8121;
        out = G__8122;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8124 = arguments.length;
  var i__5319__auto___8125 = 0;
  while (true) {
    if (i__5319__auto___8125 < len__5318__auto___8124) {
      args__5325__auto__.push(arguments[i__5319__auto___8125]);
      var G__8126 = i__5319__auto___8125 + 1;
      i__5319__auto___8125 = G__8126;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq8123) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8123));
};
cljs.core.subvec;
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8127 = self__.vec;
      var G__8128 = self__.node;
      var G__8129 = self__.i;
      var G__8130 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8127, G__8128, G__8129, G__8130) : cljs.core.chunked_seq.call(null, G__8127, G__8128, G__8129, G__8130);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__8131 = self__.vec;
    var G__8132 = self__.i + self__.off;
    var G__8133 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8131, G__8132, G__8133) : cljs.core.subvec.call(null, G__8131, G__8132, G__8133);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__8134 = self__.vec;
    var G__8135 = self__.i + self__.off;
    var G__8136 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8134, G__8135, G__8136) : cljs.core.subvec.call(null, G__8134, G__8135, G__8136);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8137 = self__.vec;
      var G__8138 = self__.node;
      var G__8139 = self__.i;
      var G__8140 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8137, G__8138, G__8139, G__8140) : cljs.core.chunked_seq.call(null, G__8137, G__8138, G__8139, G__8140);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8141 = self__.vec;
    var G__8142 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8143 = end;
    var G__8144 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8141, G__8142, G__8143, G__8144) : cljs.core.chunked_seq.call(null, G__8141, G__8142, G__8143, G__8144);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8145 = self__.vec;
    var G__8146 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8147 = end;
    var G__8148 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8145, G__8146, G__8147, G__8148) : cljs.core.chunked_seq.call(null, G__8145, G__8146, G__8147, G__8148);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args8149 = [];
  var len__5318__auto___8152 = arguments.length;
  var i__5319__auto___8153 = 0;
  while (true) {
    if (i__5319__auto___8153 < len__5318__auto___8152) {
      args8149.push(arguments[i__5319__auto___8153]);
      var G__8154 = i__5319__auto___8153 + 1;
      i__5319__auto___8153 = G__8154;
      continue;
    } else {
    }
    break;
  }
  var G__8151 = args8149.length;
  switch(G__8151) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8149.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.build_subvec;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__8157 = init__$1;
        var G__8158 = j;
        var G__8159 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8157, G__8158, G__8159) : f.call(null, G__8157, G__8158, G__8159);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8176 = i + 1;
        var G__8177 = j + 1;
        var G__8178 = init__$2;
        i = G__8176;
        j = G__8177;
        init__$1 = G__8178;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__8160 = self__.meta;
  var G__8161 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__8162 = self__.start;
  var G__8163 = function() {
    var x__4591__auto__ = self__.end;
    var y__4592__auto__ = v_pos + 1;
    return x__4591__auto__ > y__4592__auto__ ? x__4591__auto__ : y__4592__auto__;
  }();
  var G__8164 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8160, G__8161, G__8162, G__8163, G__8164) : cljs.core.build_subvec.call(null, G__8160, G__8161, G__8162, G__8163, G__8164);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__8165 = self__.meta;
    var G__8166 = self__.v;
    var G__8167 = self__.start;
    var G__8168 = self__.end - 1;
    var G__8169 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8165, G__8166, G__8167, G__8168, G__8169) : cljs.core.build_subvec.call(null, G__8165, G__8166, G__8167, G__8168, G__8169);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8171 = self__.meta;
  var G__8172 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__8173 = self__.start;
  var G__8174 = self__.end + 1;
  var G__8175 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8171, G__8172, G__8173, G__8174, G__8175) : cljs.core.build_subvec.call(null, G__8171, G__8172, G__8173, G__8174, G__8175);
};
cljs.core.Subvec.prototype.call = function() {
  var G__8179 = null;
  var G__8179__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8179__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8179 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8179__2.call(this, self__, k);
      case 3:
        return G__8179__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8179.cljs$core$IFn$_invoke$arity$2 = G__8179__2;
  G__8179.cljs$core$IFn$_invoke$arity$3 = G__8179__3;
  return G__8179;
}();
cljs.core.Subvec.prototype.apply = function(self__, args8156) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8156)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__8180 = meta;
      var G__8181 = v.v;
      var G__8182 = v.start + start;
      var G__8183 = v.start + end;
      var G__8184 = __hash;
      meta = G__8180;
      v = G__8181;
      start = G__8182;
      end = G__8183;
      __hash = G__8184;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args8185 = [];
  var len__5318__auto___8188 = arguments.length;
  var i__5319__auto___8189 = 0;
  while (true) {
    if (i__5319__auto___8189 < len__5318__auto___8188) {
      args8185.push(arguments[i__5319__auto___8189]);
      var G__8190 = i__5319__auto___8189 + 1;
      i__5319__auto___8189 = G__8190;
      continue;
    } else {
    }
    break;
  }
  var G__8187 = args8185.length;
  switch(G__8187) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8185.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__8203 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__8204 = level - 5;
        node = G__8203;
        level = G__8204;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__8208 = null;
  var G__8208__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8208__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8208 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8208__2.call(this, self__, k);
      case 3:
        return G__8208__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8208.cljs$core$IFn$_invoke$arity$2 = G__8208__2;
  G__8208.cljs$core$IFn$_invoke$arity$3 = G__8208__3;
  return G__8208;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args8205) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8205)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4260__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    var and__4248__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4248__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4248__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4260__auto__ = self__.front;
    if (cljs.core.truth_(or__4260__auto__)) {
      return or__4260__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4260__auto__ = self__.rear;
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__8209 = i + incr;
        i = G__8209;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__8210 = i + 1;
      var G__8211 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__8210;
      out = G__8211;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_8216 = 0;
  while (true) {
    if (i_8216 < l) {
      var k_8217 = ks[i_8216];
      new_obj[k_8217] = obj[k_8217];
      var G__8218 = i_8216 + 1;
      i_8216 = G__8218;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__8221 = init__$1;
        var G__8222 = k;
        var G__8223 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8221, G__8222, G__8223) : f.call(null, G__8221, G__8222, G__8223);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8224 = cljs.core.rest(keys__$1);
        var G__8225 = init__$2;
        keys__$1 = G__8224;
        init__$1 = G__8225;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__8219_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8219_SHARP_, self__.strobj[p1__8219_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__8226 = null;
  var G__8226__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8226__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8226 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8226__2.call(this, self__, k);
      case 3:
        return G__8226__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8226.cljs$core$IFn$_invoke$arity$2 = G__8226__2;
  G__8226.cljs$core$IFn$_invoke$arity$3 = G__8226__3;
  return G__8226;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args8220) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8220)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4260__auto__ = self__.i < self__.base_count;
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__8229 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8229, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8229, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__8230 = i + 2;
        i = G__8230;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__8231 = i + 2;
        i = G__8231;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__8232 = i + 2;
        i = G__8232;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__8233 = i + 2;
        i = G__8233;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__8234 = i + 2;
        i = G__8234;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_8235 = 0;
  while (true) {
    if (i_8235 < l) {
      narr[i_8235] = arr[i_8235];
      var G__8236 = i_8235 + 1;
      i_8235 = G__8236;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.TransientArrayMap;
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.keys;
cljs.core.vals;
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8238 = cljs.core.seq(coll);
  var chunk__8239 = null;
  var count__8240 = 0;
  var i__8241 = 0;
  while (true) {
    if (i__8241 < count__8240) {
      var vec__8242 = chunk__8239.cljs$core$IIndexed$_nth$arity$2(null, i__8241);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8242, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8242, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8251 = seq__8238;
      var G__8252 = chunk__8239;
      var G__8253 = count__8240;
      var G__8254 = i__8241 + 1;
      seq__8238 = G__8251;
      chunk__8239 = G__8252;
      count__8240 = G__8253;
      i__8241 = G__8254;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8238);
      if (temp__4425__auto__) {
        var seq__8238__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8238__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8238__$1);
          var G__8255 = cljs.core.chunk_rest(seq__8238__$1);
          var G__8256 = c__5063__auto__;
          var G__8257 = cljs.core.count(c__5063__auto__);
          var G__8258 = 0;
          seq__8238 = G__8255;
          chunk__8239 = G__8256;
          count__8240 = G__8257;
          i__8241 = G__8258;
          continue;
        } else {
          var vec__8243 = cljs.core.first(seq__8238__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8243, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8243, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8259 = cljs.core.next(seq__8238__$1);
          var G__8260 = null;
          var G__8261 = 0;
          var G__8262 = 0;
          seq__8238 = G__8259;
          chunk__8239 = G__8260;
          count__8240 = G__8261;
          i__8241 = G__8262;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__8244 = init__$1;
        var G__8245 = self__.arr[i];
        var G__8246 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8244, G__8245, G__8246) : f.call(null, G__8244, G__8245, G__8246);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8263 = i + 2;
        var G__8264 = init__$2;
        i = G__8263;
        init__$1 = G__8264;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__8265 = i + 2;
              i = G__8265;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__8266 = s + 2;
            var G__8267 = d;
            s = G__8266;
            d = G__8267;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__8268 = s + 2;
            var G__8269 = d + 2;
            s = G__8268;
            d = G__8269;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__8250 = cljs.core.aclone(self__.arr);
        G__8250[idx + 1] = v;
        return G__8250;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8270 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8271 = cljs.core.next(es);
          ret = G__8270;
          es = G__8271;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__8272 = null;
  var G__8272__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8272__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8272 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8272__2.call(this, self__, k);
      case 3:
        return G__8272__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8272.cljs$core$IFn$_invoke$arity$2 = G__8272__2;
  G__8272.cljs$core$IFn$_invoke$arity$3 = G__8272__3;
  return G__8272;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args8237) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8237)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_8273 = 0;
    while (true) {
      if (i_8273 < arr__$1.length) {
        var k_8274 = arr__$1[i_8273];
        var v_8275 = arr__$1[i_8273 + 1];
        var idx_8276 = cljs.core.array_index_of(ret, k_8274);
        if (idx_8276 === -1) {
          ret.push(k_8274);
          ret.push(v_8275);
        } else {
        }
        var G__8277 = i_8273 + 2;
        i_8273 = G__8277;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.array__GT_transient_hash_map;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8280 = cljs.core.next(es);
          var G__8281 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8280;
          tcoll__$2 = G__8281;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__8279_8282 = self__.arr;
      G__8279_8282.pop();
      G__8279_8282.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.TransientHashMap;
cljs.core.PersistentHashMap;
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__8283 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__8284 = i + 2;
      out = G__8283;
      i = G__8284;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.create_inode_seq;
cljs.core.create_array_node_seq;
cljs.core.reset_BANG_;
cljs.core.create_node;
cljs.core.atom;
cljs.core.deref;
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args8285 = [];
  var len__5318__auto___8290 = arguments.length;
  var i__5319__auto___8291 = 0;
  while (true) {
    if (i__5319__auto___8291 < len__5318__auto___8290) {
      args8285.push(arguments[i__5319__auto___8291]);
      var G__8292 = i__5319__auto___8291 + 1;
      i__5319__auto___8291 = G__8292;
      continue;
    } else {
    }
    break;
  }
  var G__8287 = args8285.length;
  switch(G__8287) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8285.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__8288 = cljs.core.aclone(arr);
  G__8288[i] = a;
  return G__8288;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__8289 = cljs.core.aclone(arr);
  G__8289[i] = a;
  G__8289[j] = b;
  return G__8289;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args8294 = [];
  var len__5318__auto___8297 = arguments.length;
  var i__5319__auto___8298 = 0;
  while (true) {
    if (i__5319__auto___8298 < len__5318__auto___8297) {
      args8294.push(arguments[i__5319__auto___8298]);
      var G__8299 = i__5319__auto___8298 + 1;
      i__5319__auto___8298 = G__8299;
      continue;
    } else {
    }
    break;
  }
  var G__8296 = args8294.length;
  switch(G__8296) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8294.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__8304 = init__$1;
          var G__8305 = k;
          var G__8306 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8304, G__8305, G__8306) : f.call(null, G__8304, G__8305, G__8306);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8307 = i + 2;
        var G__8308 = init__$2;
        i = G__8307;
        init__$1 = G__8308;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode;
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4260__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    var or__4260__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4260__auto____$1) {
      return or__4260__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_8322 = 0;
        var j_8323 = 0;
        while (true) {
          if (i_8322 < 32) {
            if ((self__.bitmap >>> i_8322 & 1) === 0) {
              var G__8324 = i_8322 + 1;
              var G__8325 = j_8323;
              i_8322 = G__8324;
              j_8323 = G__8325;
              continue;
            } else {
              nodes[i_8322] = !(self__.arr[j_8323] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_8323]), self__.arr[j_8323], self__.arr[j_8323 + 1], added_leaf_QMARK_) : self__.arr[j_8323 + 1];
              var G__8326 = i_8322 + 1;
              var G__8327 = j_8323 + 2;
              i_8322 = G__8326;
              j_8323 = G__8327;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__8309 = edit__$1;
          var G__8310 = shift + 5;
          var G__8311 = key_or_nil;
          var G__8312 = val_or_node;
          var G__8313 = hash;
          var G__8314 = key;
          var G__8315 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__8309, G__8310, G__8311, G__8312, G__8313, G__8314, G__8315) : cljs.core.create_node.call(null, G__8309, G__8310, G__8311, G__8312, G__8313, G__8314, G__8315);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_8328 = 0;
      var j_8329 = 0;
      while (true) {
        if (i_8328 < 32) {
          if ((self__.bitmap >>> i_8328 & 1) === 0) {
            var G__8330 = i_8328 + 1;
            var G__8331 = j_8329;
            i_8328 = G__8330;
            j_8329 = G__8331;
            continue;
          } else {
            nodes[i_8328] = !(self__.arr[j_8329] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_8329]), self__.arr[j_8329], self__.arr[j_8329 + 1], added_leaf_QMARK_) : self__.arr[j_8329 + 1];
            var G__8332 = i_8328 + 1;
            var G__8333 = j_8329 + 2;
            i_8328 = G__8332;
            j_8329 = G__8333;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__8316 = shift + 5;
          var G__8317 = key_or_nil;
          var G__8318 = val_or_node;
          var G__8319 = hash;
          var G__8320 = key;
          var G__8321 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__8316, G__8317, G__8318, G__8319, G__8320, G__8321) : cljs.core.create_node.call(null, G__8316, G__8317, G__8318, G__8319, G__8320, G__8321);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__8334 = i + 1;
        var G__8335 = j + 2;
        var G__8336 = bitmap | 1 << i;
        i = G__8334;
        j = G__8335;
        bitmap = G__8336;
        continue;
      } else {
        var G__8337 = i + 1;
        var G__8338 = j;
        var G__8339 = bitmap;
        i = G__8337;
        j = G__8338;
        bitmap = G__8339;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__8340 = i + 1;
          var G__8341 = init__$2;
          i = G__8340;
          init__$1 = G__8341;
          continue;
        }
      } else {
        var G__8342 = i + 1;
        var G__8343 = init__$1;
        i = G__8342;
        init__$1 = G__8343;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__8344 = i + 2;
        i = G__8344;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args8345 = [];
  var len__5318__auto___8348 = arguments.length;
  var i__5319__auto___8349 = 0;
  while (true) {
    if (i__5319__auto___8349 < len__5318__auto___8348) {
      args8345.push(arguments[i__5319__auto___8349]);
      var G__8350 = i__5319__auto___8349 + 1;
      i__5319__auto___8349 = G__8350;
      continue;
    } else {
    }
    break;
  }
  var G__8347 = args8345.length;
  switch(G__8347) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8345.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__8352 = self__.nodes;
    var G__8353 = self__.i + 2;
    var G__8354 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8352, G__8353, G__8354) : cljs.core.create_inode_seq.call(null, G__8352, G__8353, G__8354);
  } else {
    var G__8355 = self__.nodes;
    var G__8356 = self__.i;
    var G__8357 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8355, G__8356, G__8357) : cljs.core.create_inode_seq.call(null, G__8355, G__8356, G__8357);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args8358 = [];
  var len__5318__auto___8361 = arguments.length;
  var i__5319__auto___8362 = 0;
  while (true) {
    if (i__5319__auto___8362 < len__5318__auto___8361) {
      args8358.push(arguments[i__5319__auto___8362]);
      var G__8363 = i__5319__auto___8362 + 1;
      i__5319__auto___8362 = G__8363;
      continue;
    } else {
    }
    break;
  }
  var G__8360 = args8358.length;
  switch(G__8360) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8358.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__8365 = j + 2;
              j = G__8365;
              continue;
            }
          } else {
            var G__8366 = j + 2;
            j = G__8366;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__8367 = null;
  var G__8368 = self__.nodes;
  var G__8369 = self__.i;
  var G__8370 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__8367, G__8368, G__8369, G__8370) : cljs.core.create_array_node_seq.call(null, G__8367, G__8368, G__8369, G__8370);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args8371 = [];
  var len__5318__auto___8374 = arguments.length;
  var i__5319__auto___8375 = 0;
  while (true) {
    if (i__5319__auto___8375 < len__5318__auto___8374) {
      args8371.push(arguments[i__5319__auto___8375]);
      var G__8376 = i__5319__auto___8375 + 1;
      i__5319__auto___8375 = G__8376;
      continue;
    } else {
    }
    break;
  }
  var G__8373 = args8371.length;
  switch(G__8373) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8371.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__8378 = j + 1;
            j = G__8378;
            continue;
          }
        } else {
          var G__8379 = j + 1;
          j = G__8379;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.TransientHashMap;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8381 = cljs.core.seq(coll);
  var chunk__8382 = null;
  var count__8383 = 0;
  var i__8384 = 0;
  while (true) {
    if (i__8384 < count__8383) {
      var vec__8385 = chunk__8382.cljs$core$IIndexed$_nth$arity$2(null, i__8384);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8385, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8385, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8389 = seq__8381;
      var G__8390 = chunk__8382;
      var G__8391 = count__8383;
      var G__8392 = i__8384 + 1;
      seq__8381 = G__8389;
      chunk__8382 = G__8390;
      count__8383 = G__8391;
      i__8384 = G__8392;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8381);
      if (temp__4425__auto__) {
        var seq__8381__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8381__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8381__$1);
          var G__8393 = cljs.core.chunk_rest(seq__8381__$1);
          var G__8394 = c__5063__auto__;
          var G__8395 = cljs.core.count(c__5063__auto__);
          var G__8396 = 0;
          seq__8381 = G__8393;
          chunk__8382 = G__8394;
          count__8383 = G__8395;
          i__8384 = G__8396;
          continue;
        } else {
          var vec__8386 = cljs.core.first(seq__8381__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8386, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8386, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8397 = cljs.core.next(seq__8381__$1);
          var G__8398 = null;
          var G__8399 = 0;
          var G__8400 = 0;
          seq__8381 = G__8397;
          chunk__8382 = G__8398;
          count__8383 = G__8399;
          i__8384 = G__8400;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8401 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8402 = cljs.core.next(es);
          ret = G__8401;
          es = G__8402;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__8403 = null;
  var G__8403__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8403__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8403 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8403__2.call(this, self__, k);
      case 3:
        return G__8403__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8403.cljs$core$IFn$_invoke$arity$2 = G__8403__2;
  G__8403.cljs$core$IFn$_invoke$arity$3 = G__8403__3;
  return G__8403;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args8380) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8380)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8404 = i + 2;
      var G__8405 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__8404;
      ret = G__8405;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8406 = i + 1;
      var G__8407 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__8406;
      out = G__8407;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8409 = cljs.core.next(es);
          var G__8410 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8409;
          tcoll__$1 = G__8410;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__8411 = ascending_QMARK_ ? t.left : t.right;
      var G__8412 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__8411;
      stack__$1 = G__8412;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.RedNode;
cljs.core.BlackNode;
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__8422 = init__$1;
      var G__8423 = node.key;
      var G__8424 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8422, G__8423, G__8424) : f.call(null, G__8422, G__8423, G__8424);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__8426 = null;
  var G__8426__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8426__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8426 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8426__2.call(this, self__, k);
      case 3:
        return G__8426__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8426.cljs$core$IFn$_invoke$arity$2 = G__8426__2;
  G__8426.cljs$core$IFn$_invoke$arity$3 = G__8426__3;
  return G__8426;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args8425) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8425)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__8428 = null;
  var G__8428__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8428__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8428 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8428__2.call(this, self__, k);
      case 3:
        return G__8428__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8428.cljs$core$IFn$_invoke$arity$2 = G__8428__2;
  G__8428.cljs$core$IFn$_invoke$arity$3 = G__8428__3;
  return G__8428;
}();
cljs.core.RedNode.prototype.apply = function(self__, args8427) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8427)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__8441 = k;
      var G__8442 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8441, G__8442) : comp.call(null, G__8441, G__8442);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__8461 = k;
      var G__8462 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8461, G__8462) : comp.call(null, G__8461, G__8462);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.key;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8472 = cljs.core.seq(coll);
  var chunk__8473 = null;
  var count__8474 = 0;
  var i__8475 = 0;
  while (true) {
    if (i__8475 < count__8474) {
      var vec__8476 = chunk__8473.cljs$core$IIndexed$_nth$arity$2(null, i__8475);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8476, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8476, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8482 = seq__8472;
      var G__8483 = chunk__8473;
      var G__8484 = count__8474;
      var G__8485 = i__8475 + 1;
      seq__8472 = G__8482;
      chunk__8473 = G__8483;
      count__8474 = G__8484;
      i__8475 = G__8485;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8472);
      if (temp__4425__auto__) {
        var seq__8472__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8472__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8472__$1);
          var G__8486 = cljs.core.chunk_rest(seq__8472__$1);
          var G__8487 = c__5063__auto__;
          var G__8488 = cljs.core.count(c__5063__auto__);
          var G__8489 = 0;
          seq__8472 = G__8486;
          chunk__8473 = G__8487;
          count__8474 = G__8488;
          i__8475 = G__8489;
          continue;
        } else {
          var vec__8477 = cljs.core.first(seq__8472__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8477, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8477, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8490 = cljs.core.next(seq__8472__$1);
          var G__8491 = null;
          var G__8492 = 0;
          var G__8493 = 0;
          seq__8472 = G__8490;
          chunk__8473 = G__8491;
          count__8474 = G__8492;
          i__8475 = G__8493;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__8478 = k;
        var G__8479 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8478, G__8479) : self__.comp.call(null, G__8478, G__8479);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__8494 = t.left;
          t = G__8494;
          continue;
        } else {
          var G__8495 = t.right;
          t = G__8495;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8496 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8497 = cljs.core.next(es);
          ret = G__8496;
          es = G__8497;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__8498 = null;
  var G__8498__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8498__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8498 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8498__2.call(this, self__, k);
      case 3:
        return G__8498__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8498.cljs$core$IFn$_invoke$arity$2 = G__8498__2;
  G__8498.cljs$core$IFn$_invoke$arity$3 = G__8498__3;
  return G__8498;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args8471) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8471)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__8480 = k;
          var G__8481 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8480, G__8481) : self__.comp.call(null, G__8480, G__8481);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__8499 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8500 = t.left;
              stack = G__8499;
              t = G__8500;
              continue;
            } else {
              var G__8501 = stack;
              var G__8502 = t.right;
              stack = G__8501;
              t = G__8502;
              continue;
            }
          } else {
            if (c > 0) {
              var G__8503 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8504 = t.right;
              stack = G__8503;
              t = G__8504;
              continue;
            } else {
              var G__8505 = stack;
              var G__8506 = t.left;
              stack = G__8505;
              t = G__8506;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8508 = arguments.length;
  var i__5319__auto___8509 = 0;
  while (true) {
    if (i__5319__auto___8509 < len__5318__auto___8508) {
      args__5325__auto__.push(arguments[i__5319__auto___8509]);
      var G__8510 = i__5319__auto___8509 + 1;
      i__5319__auto___8509 = G__8510;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__8511 = cljs.core.nnext(in$);
      var G__8512 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8511;
      out = G__8512;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq8507) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8507));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8514 = arguments.length;
  var i__5319__auto___8515 = 0;
  while (true) {
    if (i__5319__auto___8515 < len__5318__auto___8514) {
      args__5325__auto__.push(arguments[i__5319__auto___8515]);
      var G__8516 = i__5319__auto___8515 + 1;
      i__5319__auto___8515 = G__8516;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq8513) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8513));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8520 = arguments.length;
  var i__5319__auto___8521 = 0;
  while (true) {
    if (i__5319__auto___8521 < len__5318__auto___8520) {
      args__5325__auto__.push(arguments[i__5319__auto___8521]);
      var G__8522 = i__5319__auto___8521 + 1;
      i__5319__auto___8521 = G__8522;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__8523 = cljs.core.nnext(kvs);
      kvs = G__8523;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq8517) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8517));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8525 = arguments.length;
  var i__5319__auto___8526 = 0;
  while (true) {
    if (i__5319__auto___8526 < len__5318__auto___8525) {
      args__5325__auto__.push(arguments[i__5319__auto___8526]);
      var G__8527 = i__5319__auto___8526 + 1;
      i__5319__auto___8526 = G__8527;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__8528 = cljs.core.nnext(in$);
      var G__8529 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8528;
      out = G__8529;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq8524) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8524));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8532 = arguments.length;
  var i__5319__auto___8533 = 0;
  while (true) {
    if (i__5319__auto___8533 < len__5318__auto___8532) {
      args__5325__auto__.push(arguments[i__5319__auto___8533]);
      var G__8534 = i__5319__auto___8533 + 1;
      i__5319__auto___8533 = G__8534;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 1 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5326__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__8535 = cljs.core.nnext(in$);
      var G__8536 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8535;
      out = G__8536;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq8530) {
  var G__8531 = cljs.core.first(seq8530);
  var seq8530__$1 = cljs.core.next(seq8530);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__8531, seq8530__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8544 = arguments.length;
  var i__5319__auto___8545 = 0;
  while (true) {
    if (i__5319__auto___8545 < len__5318__auto___8544) {
      args__5325__auto__.push(arguments[i__5319__auto___8545]);
      var G__8546 = i__5319__auto___8545 + 1;
      i__5319__auto___8545 = G__8546;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__8541_SHARP_, p2__8542_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4260__auto__ = p1__8541_SHARP_;
        if (cljs.core.truth_(or__4260__auto__)) {
          return or__4260__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__8542_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq8543) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8543));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8551 = arguments.length;
  var i__5319__auto___8552 = 0;
  while (true) {
    if (i__5319__auto___8552 < len__5318__auto___8551) {
      args__5325__auto__.push(arguments[i__5319__auto___8552]);
      var G__8553 = i__5319__auto___8552 + 1;
      i__5319__auto___8552 = G__8553;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 1 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5326__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__8549 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__8550 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8549, G__8550) : f.call(null, G__8549, G__8550);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4260__auto__ = m1;
          if (cljs.core.truth_(or__4260__auto__)) {
            return or__4260__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq8547) {
  var G__8548 = cljs.core.first(seq8547);
  var seq8547__$1 = cljs.core.next(seq8547);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__8548, seq8547__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__8554 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__8555 = cljs.core.next(keys);
      ret = G__8554;
      keys = G__8555;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.TransientHashSet;
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8558 = cljs.core.seq(coll);
  var chunk__8559 = null;
  var count__8560 = 0;
  var i__8561 = 0;
  while (true) {
    if (i__8561 < count__8560) {
      var vec__8562 = chunk__8559.cljs$core$IIndexed$_nth$arity$2(null, i__8561);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8562, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8562, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8564 = seq__8558;
      var G__8565 = chunk__8559;
      var G__8566 = count__8560;
      var G__8567 = i__8561 + 1;
      seq__8558 = G__8564;
      chunk__8559 = G__8565;
      count__8560 = G__8566;
      i__8561 = G__8567;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8558);
      if (temp__4425__auto__) {
        var seq__8558__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8558__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8558__$1);
          var G__8568 = cljs.core.chunk_rest(seq__8558__$1);
          var G__8569 = c__5063__auto__;
          var G__8570 = cljs.core.count(c__5063__auto__);
          var G__8571 = 0;
          seq__8558 = G__8568;
          chunk__8559 = G__8569;
          count__8560 = G__8570;
          i__8561 = G__8571;
          continue;
        } else {
          var vec__8563 = cljs.core.first(seq__8558__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8563, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8563, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8572 = cljs.core.next(seq__8558__$1);
          var G__8573 = null;
          var G__8574 = 0;
          var G__8575 = 0;
          seq__8558 = G__8572;
          chunk__8559 = G__8573;
          count__8560 = G__8574;
          i__8561 = G__8575;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8556_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8556_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__8576 = null;
  var G__8576__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8576__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8576 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8576__2.call(this, self__, k);
      case 3:
        return G__8576__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8576.cljs$core$IFn$_invoke$arity$2 = G__8576__2;
  G__8576.cljs$core$IFn$_invoke$arity$3 = G__8576__3;
  return G__8576;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args8557) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8557)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__8577 = i + 1;
        var G__8578 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__8577;
        out = G__8578;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__8579 = i + 1;
        var G__8580 = cljs.core._conj_BANG_(out, items[i]);
        i = G__8579;
        out = G__8580;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__8582 = null;
  var G__8582__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__8582__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__8582 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8582__2.call(this, self__, k);
      case 3:
        return G__8582__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8582.cljs$core$IFn$_invoke$arity$2 = G__8582__2;
  G__8582.cljs$core$IFn$_invoke$arity$3 = G__8582__3;
  return G__8582;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args8581) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8581)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8585 = cljs.core.seq(coll);
  var chunk__8586 = null;
  var count__8587 = 0;
  var i__8588 = 0;
  while (true) {
    if (i__8588 < count__8587) {
      var vec__8589 = chunk__8586.cljs$core$IIndexed$_nth$arity$2(null, i__8588);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8589, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8589, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8591 = seq__8585;
      var G__8592 = chunk__8586;
      var G__8593 = count__8587;
      var G__8594 = i__8588 + 1;
      seq__8585 = G__8591;
      chunk__8586 = G__8592;
      count__8587 = G__8593;
      i__8588 = G__8594;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8585);
      if (temp__4425__auto__) {
        var seq__8585__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8585__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8585__$1);
          var G__8595 = cljs.core.chunk_rest(seq__8585__$1);
          var G__8596 = c__5063__auto__;
          var G__8597 = cljs.core.count(c__5063__auto__);
          var G__8598 = 0;
          seq__8585 = G__8595;
          chunk__8586 = G__8596;
          count__8587 = G__8597;
          i__8588 = G__8598;
          continue;
        } else {
          var vec__8590 = cljs.core.first(seq__8585__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8590, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8590, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8599 = cljs.core.next(seq__8585__$1);
          var G__8600 = null;
          var G__8601 = 0;
          var G__8602 = 0;
          seq__8585 = G__8599;
          chunk__8586 = G__8600;
          count__8587 = G__8601;
          i__8588 = G__8602;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8583_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8583_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__8603 = null;
  var G__8603__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8603__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8603 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8603__2.call(this, self__, k);
      case 3:
        return G__8603__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8603.cljs$core$IFn$_invoke$arity$2 = G__8603__2;
  G__8603.cljs$core$IFn$_invoke$arity$3 = G__8603__3;
  return G__8603;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args8584) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8584)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5157__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5157__auto__.length) {
        var G__8604 = i + 1;
        var G__8605 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__8604;
        res = G__8605;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__8606 = cljs.core.next(in$__$1);
          var G__8607 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__8606;
          out = G__8607;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args8608 = [];
  var len__5318__auto___8612 = arguments.length;
  var i__5319__auto___8613 = 0;
  while (true) {
    if (i__5319__auto___8613 < len__5318__auto___8612) {
      args8608.push(arguments[i__5319__auto___8613]);
      var G__8614 = i__5319__auto___8613 + 1;
      i__5319__auto___8613 = G__8614;
      continue;
    } else {
    }
    break;
  }
  var G__8611 = args8608.length;
  switch(G__8611) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8608.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5337__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq8609) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8609));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8617 = arguments.length;
  var i__5319__auto___8618 = 0;
  while (true) {
    if (i__5319__auto___8618 < len__5318__auto___8617) {
      args__5325__auto__.push(arguments[i__5319__auto___8618]);
      var G__8619 = i__5319__auto___8618 + 1;
      i__5319__auto___8618 = G__8619;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq8616) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8616));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8622 = arguments.length;
  var i__5319__auto___8623 = 0;
  while (true) {
    if (i__5319__auto___8623 < len__5318__auto___8622) {
      args__5325__auto__.push(arguments[i__5319__auto___8623]);
      var G__8624 = i__5319__auto___8623 + 1;
      i__5319__auto___8623 = G__8624;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 1 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5326__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq8620) {
  var G__8621 = cljs.core.first(seq8620);
  var seq8620__$1 = cljs.core.next(seq8620);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__8621, seq8620__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args8627 = [];
  var len__5318__auto___8630 = arguments.length;
  var i__5319__auto___8631 = 0;
  while (true) {
    if (i__5319__auto___8631 < len__5318__auto___8630) {
      args8627.push(arguments[i__5319__auto___8631]);
      var G__8632 = i__5319__auto___8631 + 1;
      i__5319__auto___8631 = G__8632;
      continue;
    } else {
    }
    break;
  }
  var G__8629 = args8627.length;
  switch(G__8629) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8627.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__8625_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__8625_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__8625_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__8626_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__8626_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__8626_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args8634 = [];
  var len__5318__auto___8643 = arguments.length;
  var i__5319__auto___8644 = 0;
  while (true) {
    if (i__5319__auto___8644 < len__5318__auto___8643) {
      args8634.push(arguments[i__5319__auto___8644]);
      var G__8645 = i__5319__auto___8644 + 1;
      i__5319__auto___8644 = G__8645;
      continue;
    } else {
    }
    break;
  }
  var G__8636 = args8634.length;
  switch(G__8636) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8634.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__8647 = null;
        var G__8647__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8647__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8647__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__8647 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8647__0.call(this);
            case 1:
              return G__8647__1.call(this, result);
            case 2:
              return G__8647__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8647.cljs$core$IFn$_invoke$arity$0 = G__8647__0;
        G__8647.cljs$core$IFn$_invoke$arity$1 = G__8647__1;
        G__8647.cljs$core$IFn$_invoke$arity$2 = G__8647__2;
        return G__8647;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__8641, seen__$1) {
        while (true) {
          var vec__8642 = p__8641;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8642, 0, null);
          var xs__$1 = vec__8642;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__8648 = cljs.core.rest(s);
              var G__8649 = seen__$1;
              p__8641 = G__8648;
              seen__$1 = G__8649;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__8650 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__8651 = cljs.core.next(s__$1);
      ret = G__8650;
      s__$1 = G__8651;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__8654 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__8655 = cljs.core.next(ks);
      var G__8656 = cljs.core.next(vs);
      map = G__8654;
      ks = G__8655;
      vs = G__8656;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args8659 = [];
  var len__5318__auto___8666 = arguments.length;
  var i__5319__auto___8667 = 0;
  while (true) {
    if (i__5319__auto___8667 < len__5318__auto___8666) {
      args8659.push(arguments[i__5319__auto___8667]);
      var G__8668 = i__5319__auto___8667 + 1;
      i__5319__auto___8667 = G__8668;
      continue;
    } else {
    }
    break;
  }
  var G__8665 = args8659.length;
  switch(G__8665) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8659.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8657_SHARP_, p2__8658_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__8657_SHARP_, p2__8658_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq8660) {
  var G__8661 = cljs.core.first(seq8660);
  var seq8660__$1 = cljs.core.next(seq8660);
  var G__8662 = cljs.core.first(seq8660__$1);
  var seq8660__$2 = cljs.core.next(seq8660__$1);
  var G__8663 = cljs.core.first(seq8660__$2);
  var seq8660__$3 = cljs.core.next(seq8660__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__8661, G__8662, G__8663, seq8660__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args8672 = [];
  var len__5318__auto___8679 = arguments.length;
  var i__5319__auto___8680 = 0;
  while (true) {
    if (i__5319__auto___8680 < len__5318__auto___8679) {
      args8672.push(arguments[i__5319__auto___8680]);
      var G__8681 = i__5319__auto___8680 + 1;
      i__5319__auto___8680 = G__8681;
      continue;
    } else {
    }
    break;
  }
  var G__8678 = args8672.length;
  switch(G__8678) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8672.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8670_SHARP_, p2__8671_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__8670_SHARP_, p2__8671_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq8673) {
  var G__8674 = cljs.core.first(seq8673);
  var seq8673__$1 = cljs.core.next(seq8673);
  var G__8675 = cljs.core.first(seq8673__$1);
  var seq8673__$2 = cljs.core.next(seq8673__$1);
  var G__8676 = cljs.core.first(seq8673__$2);
  var seq8673__$3 = cljs.core.next(seq8673__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__8674, G__8675, G__8676, seq8673__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args8683 = [];
  var len__5318__auto___8686 = arguments.length;
  var i__5319__auto___8687 = 0;
  while (true) {
    if (i__5319__auto___8687 < len__5318__auto___8686) {
      args8683.push(arguments[i__5319__auto___8687]);
      var G__8688 = i__5319__auto___8687 + 1;
      i__5319__auto___8687 = G__8688;
      continue;
    } else {
    }
    break;
  }
  var G__8685 = args8683.length;
  switch(G__8685) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8683.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__8690 = null;
        var G__8690__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8690__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8690__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__8690 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8690__0.call(this);
            case 1:
              return G__8690__1.call(this, result);
            case 2:
              return G__8690__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8690.cljs$core$IFn$_invoke$arity$0 = G__8690__0;
        G__8690.cljs$core$IFn$_invoke$arity$1 = G__8690__1;
        G__8690.cljs$core$IFn$_invoke$arity$2 = G__8690__2;
        return G__8690;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args8691 = [];
  var len__5318__auto___8695 = arguments.length;
  var i__5319__auto___8696 = 0;
  while (true) {
    if (i__5319__auto___8696 < len__5318__auto___8695) {
      args8691.push(arguments[i__5319__auto___8696]);
      var G__8697 = i__5319__auto___8696 + 1;
      i__5319__auto___8696 = G__8697;
      continue;
    } else {
    }
    break;
  }
  var G__8693 = args8691.length;
  switch(G__8693) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8691.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__8699 = null;
      var G__8699__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8699__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8699__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__8699 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8699__0.call(this);
          case 1:
            return G__8699__1.call(this, result);
          case 2:
            return G__8699__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8699.cljs$core$IFn$_invoke$arity$0 = G__8699__0;
      G__8699.cljs$core$IFn$_invoke$arity$1 = G__8699__1;
      G__8699.cljs$core$IFn$_invoke$arity$2 = G__8699__2;
      return G__8699;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__8694 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8694) : pred.call(null, G__8694);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__8708 = function() {
      var G__8710 = cljs.core._entry_key(sc, e);
      var G__8711 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8710, G__8711) : comp.call(null, G__8710, G__8711);
    }();
    var G__8709 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__8708, G__8709) : test.call(null, G__8708, G__8709);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args8712 = [];
  var len__5318__auto___8717 = arguments.length;
  var i__5319__auto___8718 = 0;
  while (true) {
    if (i__5319__auto___8718 < len__5318__auto___8717) {
      args8712.push(arguments[i__5319__auto___8718]);
      var G__8719 = i__5319__auto___8718 + 1;
      i__5319__auto___8718 = G__8719;
      continue;
    } else {
    }
    break;
  }
  var G__8714 = args8712.length;
  switch(G__8714) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8712.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8715 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8715, 0, null);
      var s = vec__8715;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8716 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8716, 0, null);
    var s = vec__8716;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args8721 = [];
  var len__5318__auto___8726 = arguments.length;
  var i__5319__auto___8727 = 0;
  while (true) {
    if (i__5319__auto___8727 < len__5318__auto___8726) {
      args8721.push(arguments[i__5319__auto___8727]);
      var G__8728 = i__5319__auto___8727 + 1;
      i__5319__auto___8727 = G__8728;
      continue;
    } else {
    }
    break;
  }
  var G__8723 = args8721.length;
  switch(G__8723) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8721.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8724 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8724, 0, null);
      var s = vec__8724;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8725 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8725, 0, null);
    var s = vec__8725;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__8730 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__8730);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4695__auto__ = self__.__hash;
  if (!(h__4695__auto__ == null)) {
    return h__4695__auto__;
  } else {
    var h__4695__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4695__auto____$1;
    return h__4695__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__8731 = i + self__.step;
        var G__8732 = ret__$1;
        i = G__8731;
        ret = G__8732;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args8733 = [];
  var len__5318__auto___8736 = arguments.length;
  var i__5319__auto___8737 = 0;
  while (true) {
    if (i__5319__auto___8737 < len__5318__auto___8736) {
      args8733.push(arguments[i__5319__auto___8737]);
      var G__8738 = i__5319__auto___8737 + 1;
      i__5319__auto___8737 = G__8738;
      continue;
    } else {
    }
    break;
  }
  var G__8735 = args8733.length;
  switch(G__8735) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8733.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args8740 = [];
  var len__5318__auto___8745 = arguments.length;
  var i__5319__auto___8746 = 0;
  while (true) {
    if (i__5319__auto___8746 < len__5318__auto___8745) {
      args8740.push(arguments[i__5319__auto___8746]);
      var G__8747 = i__5319__auto___8746 + 1;
      i__5319__auto___8746 = G__8747;
      continue;
    } else {
    }
    break;
  }
  var G__8742 = args8740.length;
  switch(G__8742) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8740.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8743 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8743) : cljs.core.pr_str.call(null, G__8743);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__8749 = null;
        var G__8749__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8749__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8749__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__8749 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8749__0.call(this);
            case 1:
              return G__8749__1.call(this, result);
            case 2:
              return G__8749__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8749.cljs$core$IFn$_invoke$arity$0 = G__8749__0;
        G__8749.cljs$core$IFn$_invoke$arity$1 = G__8749__1;
        G__8749.cljs$core$IFn$_invoke$arity$2 = G__8749__2;
        return G__8749;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8744 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8744) : cljs.core.pr_str.call(null, G__8744);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args8751 = [];
  var len__5318__auto___8754 = arguments.length;
  var i__5319__auto___8755 = 0;
  while (true) {
    if (i__5319__auto___8755 < len__5318__auto___8754) {
      args8751.push(arguments[i__5319__auto___8755]);
      var G__8756 = i__5319__auto___8755 + 1;
      i__5319__auto___8755 = G__8756;
      continue;
    } else {
    }
    break;
  }
  var G__8753 = args8751.length;
  switch(G__8753) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8751.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__8758 = null;
        var G__8758__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8758__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8758__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__8758 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8758__0.call(this);
            case 1:
              return G__8758__1.call(this, result);
            case 2:
              return G__8758__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8758.cljs$core$IFn$_invoke$arity$0 = G__8758__0;
        G__8758.cljs$core$IFn$_invoke$arity$1 = G__8758__1;
        G__8758.cljs$core$IFn$_invoke$arity$2 = G__8758__2;
        return G__8758;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__8750_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__8750_SHARP_) : f.call(null, p1__8750_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args8759 = [];
  var len__5318__auto___8764 = arguments.length;
  var i__5319__auto___8765 = 0;
  while (true) {
    if (i__5319__auto___8765 < len__5318__auto___8764) {
      args8759.push(arguments[i__5319__auto___8765]);
      var G__8766 = i__5319__auto___8765 + 1;
      i__5319__auto___8765 = G__8766;
      continue;
    } else {
    }
    break;
  }
  var G__8761 = args8759.length;
  switch(G__8761) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8759.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__8762 = init;
        var G__8763 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8762, G__8763) : f.call(null, G__8762, G__8763);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args8778 = [];
  var len__5318__auto___8785 = arguments.length;
  var i__5319__auto___8786 = 0;
  while (true) {
    if (i__5319__auto___8786 < len__5318__auto___8785) {
      args8778.push(arguments[i__5319__auto___8786]);
      var G__8787 = i__5319__auto___8786 + 1;
      i__5319__auto___8786 = G__8787;
      continue;
    } else {
    }
    break;
  }
  var G__8784 = args8778.length;
  switch(G__8784) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args8778.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5337__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__8789 = null;
    var G__8789__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__8789__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__8789__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__8789__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__8789__4 = function() {
      var G__8790__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__8790 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8791__i = 0, G__8791__a = new Array(arguments.length - 3);
          while (G__8791__i < G__8791__a.length) {
            G__8791__a[G__8791__i] = arguments[G__8791__i + 3];
            ++G__8791__i;
          }
          args = new cljs.core.IndexedSeq(G__8791__a, 0);
        }
        return G__8790__delegate.call(this, x, y, z, args);
      };
      G__8790.cljs$lang$maxFixedArity = 3;
      G__8790.cljs$lang$applyTo = function(arglist__8792) {
        var x = cljs.core.first(arglist__8792);
        arglist__8792 = cljs.core.next(arglist__8792);
        var y = cljs.core.first(arglist__8792);
        arglist__8792 = cljs.core.next(arglist__8792);
        var z = cljs.core.first(arglist__8792);
        var args = cljs.core.rest(arglist__8792);
        return G__8790__delegate(x, y, z, args);
      };
      G__8790.cljs$core$IFn$_invoke$arity$variadic = G__8790__delegate;
      return G__8790;
    }();
    G__8789 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8789__0.call(this);
        case 1:
          return G__8789__1.call(this, x);
        case 2:
          return G__8789__2.call(this, x, y);
        case 3:
          return G__8789__3.call(this, x, y, z);
        default:
          var G__8793 = null;
          if (arguments.length > 3) {
            var G__8794__i = 0, G__8794__a = new Array(arguments.length - 3);
            while (G__8794__i < G__8794__a.length) {
              G__8794__a[G__8794__i] = arguments[G__8794__i + 3];
              ++G__8794__i;
            }
            G__8793 = new cljs.core.IndexedSeq(G__8794__a, 0);
          }
          return G__8789__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8793);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8789.cljs$lang$maxFixedArity = 3;
    G__8789.cljs$lang$applyTo = G__8789__4.cljs$lang$applyTo;
    G__8789.cljs$core$IFn$_invoke$arity$0 = G__8789__0;
    G__8789.cljs$core$IFn$_invoke$arity$1 = G__8789__1;
    G__8789.cljs$core$IFn$_invoke$arity$2 = G__8789__2;
    G__8789.cljs$core$IFn$_invoke$arity$3 = G__8789__3;
    G__8789.cljs$core$IFn$_invoke$arity$variadic = G__8789__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8789;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8795 = null;
    var G__8795__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__8795__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__8795__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__8795__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__8795__4 = function() {
      var G__8796__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__8796 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8797__i = 0, G__8797__a = new Array(arguments.length - 3);
          while (G__8797__i < G__8797__a.length) {
            G__8797__a[G__8797__i] = arguments[G__8797__i + 3];
            ++G__8797__i;
          }
          args = new cljs.core.IndexedSeq(G__8797__a, 0);
        }
        return G__8796__delegate.call(this, x, y, z, args);
      };
      G__8796.cljs$lang$maxFixedArity = 3;
      G__8796.cljs$lang$applyTo = function(arglist__8798) {
        var x = cljs.core.first(arglist__8798);
        arglist__8798 = cljs.core.next(arglist__8798);
        var y = cljs.core.first(arglist__8798);
        arglist__8798 = cljs.core.next(arglist__8798);
        var z = cljs.core.first(arglist__8798);
        var args = cljs.core.rest(arglist__8798);
        return G__8796__delegate(x, y, z, args);
      };
      G__8796.cljs$core$IFn$_invoke$arity$variadic = G__8796__delegate;
      return G__8796;
    }();
    G__8795 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8795__0.call(this);
        case 1:
          return G__8795__1.call(this, x);
        case 2:
          return G__8795__2.call(this, x, y);
        case 3:
          return G__8795__3.call(this, x, y, z);
        default:
          var G__8799 = null;
          if (arguments.length > 3) {
            var G__8800__i = 0, G__8800__a = new Array(arguments.length - 3);
            while (G__8800__i < G__8800__a.length) {
              G__8800__a[G__8800__i] = arguments[G__8800__i + 3];
              ++G__8800__i;
            }
            G__8799 = new cljs.core.IndexedSeq(G__8800__a, 0);
          }
          return G__8795__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8799);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8795.cljs$lang$maxFixedArity = 3;
    G__8795.cljs$lang$applyTo = G__8795__4.cljs$lang$applyTo;
    G__8795.cljs$core$IFn$_invoke$arity$0 = G__8795__0;
    G__8795.cljs$core$IFn$_invoke$arity$1 = G__8795__1;
    G__8795.cljs$core$IFn$_invoke$arity$2 = G__8795__2;
    G__8795.cljs$core$IFn$_invoke$arity$3 = G__8795__3;
    G__8795.cljs$core$IFn$_invoke$arity$variadic = G__8795__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8795;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8801 = null;
    var G__8801__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__8801__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__8801__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__8801__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__8801__4 = function() {
      var G__8802__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__8802 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8803__i = 0, G__8803__a = new Array(arguments.length - 3);
          while (G__8803__i < G__8803__a.length) {
            G__8803__a[G__8803__i] = arguments[G__8803__i + 3];
            ++G__8803__i;
          }
          args = new cljs.core.IndexedSeq(G__8803__a, 0);
        }
        return G__8802__delegate.call(this, x, y, z, args);
      };
      G__8802.cljs$lang$maxFixedArity = 3;
      G__8802.cljs$lang$applyTo = function(arglist__8804) {
        var x = cljs.core.first(arglist__8804);
        arglist__8804 = cljs.core.next(arglist__8804);
        var y = cljs.core.first(arglist__8804);
        arglist__8804 = cljs.core.next(arglist__8804);
        var z = cljs.core.first(arglist__8804);
        var args = cljs.core.rest(arglist__8804);
        return G__8802__delegate(x, y, z, args);
      };
      G__8802.cljs$core$IFn$_invoke$arity$variadic = G__8802__delegate;
      return G__8802;
    }();
    G__8801 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8801__0.call(this);
        case 1:
          return G__8801__1.call(this, x);
        case 2:
          return G__8801__2.call(this, x, y);
        case 3:
          return G__8801__3.call(this, x, y, z);
        default:
          var G__8805 = null;
          if (arguments.length > 3) {
            var G__8806__i = 0, G__8806__a = new Array(arguments.length - 3);
            while (G__8806__i < G__8806__a.length) {
              G__8806__a[G__8806__i] = arguments[G__8806__i + 3];
              ++G__8806__i;
            }
            G__8805 = new cljs.core.IndexedSeq(G__8806__a, 0);
          }
          return G__8801__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8805);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8801.cljs$lang$maxFixedArity = 3;
    G__8801.cljs$lang$applyTo = G__8801__4.cljs$lang$applyTo;
    G__8801.cljs$core$IFn$_invoke$arity$0 = G__8801__0;
    G__8801.cljs$core$IFn$_invoke$arity$1 = G__8801__1;
    G__8801.cljs$core$IFn$_invoke$arity$2 = G__8801__2;
    G__8801.cljs$core$IFn$_invoke$arity$3 = G__8801__3;
    G__8801.cljs$core$IFn$_invoke$arity$variadic = G__8801__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8801;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__8807 = null;
      var G__8807__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8768_SHARP_, p2__8769_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8768_SHARP_, p2__8769_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__8769_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__8769_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8807__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8770_SHARP_, p2__8771_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8770_SHARP_, p2__8771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__8771_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__8771_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8807__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8772_SHARP_, p2__8773_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8772_SHARP_, p2__8773_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__8773_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__8773_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8807__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8774_SHARP_, p2__8775_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8774_SHARP_, p2__8775_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__8775_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__8775_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8807__4 = function() {
        var G__8808__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__8776_SHARP_, p2__8777_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8776_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__8777_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__8808 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8809__i = 0, G__8809__a = new Array(arguments.length - 3);
            while (G__8809__i < G__8809__a.length) {
              G__8809__a[G__8809__i] = arguments[G__8809__i + 3];
              ++G__8809__i;
            }
            args = new cljs.core.IndexedSeq(G__8809__a, 0);
          }
          return G__8808__delegate.call(this, x, y, z, args);
        };
        G__8808.cljs$lang$maxFixedArity = 3;
        G__8808.cljs$lang$applyTo = function(arglist__8810) {
          var x = cljs.core.first(arglist__8810);
          arglist__8810 = cljs.core.next(arglist__8810);
          var y = cljs.core.first(arglist__8810);
          arglist__8810 = cljs.core.next(arglist__8810);
          var z = cljs.core.first(arglist__8810);
          var args = cljs.core.rest(arglist__8810);
          return G__8808__delegate(x, y, z, args);
        };
        G__8808.cljs$core$IFn$_invoke$arity$variadic = G__8808__delegate;
        return G__8808;
      }();
      G__8807 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8807__0.call(this);
          case 1:
            return G__8807__1.call(this, x);
          case 2:
            return G__8807__2.call(this, x, y);
          case 3:
            return G__8807__3.call(this, x, y, z);
          default:
            var G__8811 = null;
            if (arguments.length > 3) {
              var G__8812__i = 0, G__8812__a = new Array(arguments.length - 3);
              while (G__8812__i < G__8812__a.length) {
                G__8812__a[G__8812__i] = arguments[G__8812__i + 3];
                ++G__8812__i;
              }
              G__8811 = new cljs.core.IndexedSeq(G__8812__a, 0);
            }
            return G__8807__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8811);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8807.cljs$lang$maxFixedArity = 3;
      G__8807.cljs$lang$applyTo = G__8807__4.cljs$lang$applyTo;
      G__8807.cljs$core$IFn$_invoke$arity$0 = G__8807__0;
      G__8807.cljs$core$IFn$_invoke$arity$1 = G__8807__1;
      G__8807.cljs$core$IFn$_invoke$arity$2 = G__8807__2;
      G__8807.cljs$core$IFn$_invoke$arity$3 = G__8807__3;
      G__8807.cljs$core$IFn$_invoke$arity$variadic = G__8807__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__8807;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq8779) {
  var G__8780 = cljs.core.first(seq8779);
  var seq8779__$1 = cljs.core.next(seq8779);
  var G__8781 = cljs.core.first(seq8779__$1);
  var seq8779__$2 = cljs.core.next(seq8779__$1);
  var G__8782 = cljs.core.first(seq8779__$2);
  var seq8779__$3 = cljs.core.next(seq8779__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__8780, G__8781, G__8782, seq8779__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args8813 = [];
  var len__5318__auto___8816 = arguments.length;
  var i__5319__auto___8817 = 0;
  while (true) {
    if (i__5319__auto___8817 < len__5318__auto___8816) {
      args8813.push(arguments[i__5319__auto___8817]);
      var G__8818 = i__5319__auto___8817 + 1;
      i__5319__auto___8817 = G__8818;
      continue;
    } else {
    }
    break;
  }
  var G__8815 = args8813.length;
  switch(G__8815) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8813.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__8820 = cljs.core.next(coll);
      coll = G__8820;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__8821 = n - 1;
      var G__8822 = cljs.core.next(coll);
      n = G__8821;
      coll = G__8822;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args8823 = [];
  var len__5318__auto___8826 = arguments.length;
  var i__5319__auto___8827 = 0;
  while (true) {
    if (i__5319__auto___8827 < len__5318__auto___8826) {
      args8823.push(arguments[i__5319__auto___8827]);
      var G__8828 = i__5319__auto___8827 + 1;
      i__5319__auto___8827 = G__8828;
      continue;
    } else {
    }
    break;
  }
  var G__8825 = args8823.length;
  switch(G__8825) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8823.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__8831 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8831, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8831, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4260__auto__ = flags;
      if (cljs.core.truth_(or__4260__auto__)) {
        return or__4260__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_8839 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4260__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4260__auto__)) {
              return or__4260__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__8840_8846 = cljs.core.first(coll);
          var G__8841_8847 = writer;
          var G__8842_8848 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8840_8846, G__8841_8847, G__8842_8848) : print_one.call(null, G__8840_8846, G__8841_8847, G__8842_8848);
        } else {
        }
        var coll_8849__$1 = cljs.core.next(coll);
        var n_8850 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_8849__$1 && (n_8850 == null || !(n_8850 === 0))) {
            cljs.core._write(writer, sep);
            var G__8843_8851 = cljs.core.first(coll_8849__$1);
            var G__8844_8852 = writer;
            var G__8845_8853 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8843_8851, G__8844_8852, G__8845_8853) : print_one.call(null, G__8843_8851, G__8844_8852, G__8845_8853);
            var G__8854 = cljs.core.next(coll_8849__$1);
            var G__8855 = n_8850 - 1;
            coll_8849__$1 = G__8854;
            n_8850 = G__8855;
            continue;
          } else {
            if (cljs.core.seq(coll_8849__$1) && n_8850 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4260__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4260__auto__)) {
                  return or__4260__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_8839;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8862 = arguments.length;
  var i__5319__auto___8863 = 0;
  while (true) {
    if (i__5319__auto___8863 < len__5318__auto___8862) {
      args__5325__auto__.push(arguments[i__5319__auto___8863]);
      var G__8864 = i__5319__auto___8863 + 1;
      i__5319__auto___8863 = G__8864;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 1 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5326__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__8858 = cljs.core.seq(ss);
  var chunk__8859 = null;
  var count__8860 = 0;
  var i__8861 = 0;
  while (true) {
    if (i__8861 < count__8860) {
      var s = chunk__8859.cljs$core$IIndexed$_nth$arity$2(null, i__8861);
      cljs.core._write(writer, s);
      var G__8865 = seq__8858;
      var G__8866 = chunk__8859;
      var G__8867 = count__8860;
      var G__8868 = i__8861 + 1;
      seq__8858 = G__8865;
      chunk__8859 = G__8866;
      count__8860 = G__8867;
      i__8861 = G__8868;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8858);
      if (temp__4425__auto__) {
        var seq__8858__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8858__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8858__$1);
          var G__8869 = cljs.core.chunk_rest(seq__8858__$1);
          var G__8870 = c__5063__auto__;
          var G__8871 = cljs.core.count(c__5063__auto__);
          var G__8872 = 0;
          seq__8858 = G__8869;
          chunk__8859 = G__8870;
          count__8860 = G__8871;
          i__8861 = G__8872;
          continue;
        } else {
          var s = cljs.core.first(seq__8858__$1);
          cljs.core._write(writer, s);
          var G__8873 = cljs.core.next(seq__8858__$1);
          var G__8874 = null;
          var G__8875 = 0;
          var G__8876 = 0;
          seq__8858 = G__8873;
          chunk__8859 = G__8874;
          count__8860 = G__8875;
          i__8861 = G__8876;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq8856) {
  var G__8857 = cljs.core.first(seq8856);
  var seq8856__$1 = cljs.core.next(seq8856);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__8857, seq8856__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj8878 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj8878;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_map;
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4248__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4248__auto__) {
    var and__4248__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4248__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4248__auto____$1;
    }
  } else {
    return and__4248__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__8894_8903 = cljs.core.meta(obj);
      var G__8895_8904 = writer;
      var G__8896_8905 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__8894_8903, G__8895_8904, G__8896_8905) : cljs.core.pr_writer.call(null, G__8894_8903, G__8895_8904, G__8896_8905);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__8898 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__8899 = cljs.core.pr_writer;
            var G__8900 = writer;
            var G__8901 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__8898, G__8899, G__8900, G__8901) : cljs.core.print_map.call(null, G__8898, G__8899, G__8900, G__8901);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4260__auto__ = name == null;
                    if (or__4260__auto__) {
                      return or__4260__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__8906 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__8906;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4260__auto__ = name == null;
                            if (or__4260__auto__) {
                              return or__4260__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__8910 = obj;
    var G__8911 = writer;
    var G__8912 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__8910, G__8911, G__8912) : alt_impl.call(null, G__8910, G__8911, G__8912);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__8917 = cljs.core.seq(cljs.core.next(objs));
  var chunk__8918 = null;
  var count__8919 = 0;
  var i__8920 = 0;
  while (true) {
    if (i__8920 < count__8919) {
      var obj = chunk__8918.cljs$core$IIndexed$_nth$arity$2(null, i__8920);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__8921 = seq__8917;
      var G__8922 = chunk__8918;
      var G__8923 = count__8919;
      var G__8924 = i__8920 + 1;
      seq__8917 = G__8921;
      chunk__8918 = G__8922;
      count__8919 = G__8923;
      i__8920 = G__8924;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8917);
      if (temp__4425__auto__) {
        var seq__8917__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8917__$1)) {
          var c__5063__auto__ = cljs.core.chunk_first(seq__8917__$1);
          var G__8925 = cljs.core.chunk_rest(seq__8917__$1);
          var G__8926 = c__5063__auto__;
          var G__8927 = cljs.core.count(c__5063__auto__);
          var G__8928 = 0;
          seq__8917 = G__8925;
          chunk__8918 = G__8926;
          count__8919 = G__8927;
          i__8920 = G__8928;
          continue;
        } else {
          var obj = cljs.core.first(seq__8917__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__8929 = cljs.core.next(seq__8917__$1);
          var G__8930 = null;
          var G__8931 = 0;
          var G__8932 = 0;
          seq__8917 = G__8929;
          chunk__8918 = G__8930;
          count__8919 = G__8931;
          i__8920 = G__8932;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args8933 = [];
  var len__5318__auto___8936 = arguments.length;
  var i__5319__auto___8937 = 0;
  while (true) {
    if (i__5319__auto___8937 < len__5318__auto___8936) {
      args8933.push(arguments[i__5319__auto___8937]);
      var G__8938 = i__5319__auto___8937 + 1;
      i__5319__auto___8937 = G__8938;
      continue;
    } else {
    }
    break;
  }
  var G__8935 = args8933.length;
  switch(G__8935) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8933.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8941 = arguments.length;
  var i__5319__auto___8942 = 0;
  while (true) {
    if (i__5319__auto___8942 < len__5318__auto___8941) {
      args__5325__auto__.push(arguments[i__5319__auto___8942]);
      var G__8943 = i__5319__auto___8942 + 1;
      i__5319__auto___8942 = G__8943;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq8940) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8940));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8945 = arguments.length;
  var i__5319__auto___8946 = 0;
  while (true) {
    if (i__5319__auto___8946 < len__5318__auto___8945) {
      args__5325__auto__.push(arguments[i__5319__auto___8946]);
      var G__8947 = i__5319__auto___8946 + 1;
      i__5319__auto___8946 = G__8947;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq8944) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8944));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8949 = arguments.length;
  var i__5319__auto___8950 = 0;
  while (true) {
    if (i__5319__auto___8950 < len__5318__auto___8949) {
      args__5325__auto__.push(arguments[i__5319__auto___8950]);
      var G__8951 = i__5319__auto___8950 + 1;
      i__5319__auto___8950 = G__8951;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq8948) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8948));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__8952__i = 0, G__8952__a = new Array(arguments.length - 0);
      while (G__8952__i < G__8952__a.length) {
        G__8952__a[G__8952__i] = arguments[G__8952__i + 0];
        ++G__8952__i;
      }
      objs = new cljs.core.IndexedSeq(G__8952__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__8953) {
    var objs = cljs.core.seq(arglist__8953);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8955 = arguments.length;
  var i__5319__auto___8956 = 0;
  while (true) {
    if (i__5319__auto___8956 < len__5318__auto___8955) {
      args__5325__auto__.push(arguments[i__5319__auto___8956]);
      var G__8957 = i__5319__auto___8956 + 1;
      i__5319__auto___8956 = G__8957;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq8954) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8954));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8959 = arguments.length;
  var i__5319__auto___8960 = 0;
  while (true) {
    if (i__5319__auto___8960 < len__5318__auto___8959) {
      args__5325__auto__.push(arguments[i__5319__auto___8960]);
      var G__8961 = i__5319__auto___8960 + 1;
      i__5319__auto___8960 = G__8961;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq8958) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8958));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8963 = arguments.length;
  var i__5319__auto___8964 = 0;
  while (true) {
    if (i__5319__auto___8964 < len__5318__auto___8963) {
      args__5325__auto__.push(arguments[i__5319__auto___8964]);
      var G__8965 = i__5319__auto___8964 + 1;
      i__5319__auto___8964 = G__8965;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq8962) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8962));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8967 = arguments.length;
  var i__5319__auto___8968 = 0;
  while (true) {
    if (i__5319__auto___8968 < len__5318__auto___8967) {
      args__5325__auto__.push(arguments[i__5319__auto___8968]);
      var G__8969 = i__5319__auto___8968 + 1;
      i__5319__auto___8968 = G__8969;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq8966) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8966));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__8976_8982 = cljs.core.key(e);
    var G__8977_8983 = w;
    var G__8978_8984 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8976_8982, G__8977_8983, G__8978_8984) : print_one.call(null, G__8976_8982, G__8977_8983, G__8978_8984);
    cljs.core._write(w, " ");
    var G__8979 = cljs.core.val(e);
    var G__8980 = w;
    var G__8981 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8979, G__8980, G__8981) : print_one.call(null, G__8979, G__8980, G__8981);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___8988 = arguments.length;
  var i__5319__auto___8989 = 0;
  while (true) {
    if (i__5319__auto___8989 < len__5318__auto___8988) {
      args__5325__auto__.push(arguments[i__5319__auto___8989]);
      var G__8990 = i__5319__auto___8989 + 1;
      i__5319__auto___8989 = G__8990;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 2 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5326__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq8985) {
  var G__8986 = cljs.core.first(seq8985);
  var seq8985__$1 = cljs.core.next(seq8985);
  var G__8987 = cljs.core.first(seq8985__$1);
  var seq8985__$2 = cljs.core.next(seq8985__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8986, G__8987, seq8985__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args8991 = [];
  var len__5318__auto___8994 = arguments.length;
  var i__5319__auto___8995 = 0;
  while (true) {
    if (i__5319__auto___8995 < len__5318__auto___8994) {
      args8991.push(arguments[i__5319__auto___8995]);
      var G__8996 = i__5319__auto___8995 + 1;
      i__5319__auto___8995 = G__8996;
      continue;
    } else {
    }
    break;
  }
  var G__8993 = args8991.length;
  switch(G__8993) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8991.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__8998_SHARP_, p2__8999_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__8998_SHARP_, p2__8999_SHARP_) : rf.call(null, p1__8998_SHARP_, p2__8999_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__9000 = null;
      var G__9000__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9000__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__9000__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__9000 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9000__0.call(this);
          case 1:
            return G__9000__1.call(this, result);
          case 2:
            return G__9000__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9000.cljs$core$IFn$_invoke$arity$0 = G__9000__0;
      G__9000.cljs$core$IFn$_invoke$arity$1 = G__9000__1;
      G__9000.cljs$core$IFn$_invoke$arity$2 = G__9000__2;
      return G__9000;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args9001 = [];
  var len__5318__auto___9004 = arguments.length;
  var i__5319__auto___9005 = 0;
  while (true) {
    if (i__5319__auto___9005 < len__5318__auto___9004) {
      args9001.push(arguments[i__5319__auto___9005]);
      var G__9006 = i__5319__auto___9005 + 1;
      i__5319__auto___9005 = G__9006;
      continue;
    } else {
    }
    break;
  }
  var G__9003 = args9001.length;
  switch(G__9003) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9001.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__9008 = null;
        var G__9008__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9008__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9008__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__9008 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9008__0.call(this);
            case 1:
              return G__9008__1.call(this, result);
            case 2:
              return G__9008__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9008.cljs$core$IFn$_invoke$arity$0 = G__9008__0;
        G__9008.cljs$core$IFn$_invoke$arity$1 = G__9008__1;
        G__9008.cljs$core$IFn$_invoke$arity$2 = G__9008__2;
        return G__9008;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.rand;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args9009 = [];
  var len__5318__auto___9012 = arguments.length;
  var i__5319__auto___9013 = 0;
  while (true) {
    if (i__5319__auto___9013 < len__5318__auto___9012) {
      args9009.push(arguments[i__5319__auto___9013]);
      var G__9014 = i__5319__auto___9013 + 1;
      i__5319__auto___9013 = G__9014;
      continue;
    } else {
    }
    break;
  }
  var G__9011 = args9009.length;
  switch(G__9011) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9009.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5254__auto__ = this;
  return cljs.core.es6_iterator(this__5254__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___9017 = arguments.length;
  var i__5319__auto___9018 = 0;
  while (true) {
    if (i__5319__auto___9018 < len__5318__auto___9017) {
      args__5325__auto__.push(arguments[i__5319__auto___9018]);
      var G__9019 = i__5319__auto___9018 + 1;
      i__5319__auto___9018 = G__9019;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 0 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5326__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq9016) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9016));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9021_SHARP_, p2__9020_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__9020_SHARP_) : proc.call(null, p2__9020_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto__.call(null, x);
    } else {
      var m__4916__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto__.call(null, x);
    } else {
      var m__4916__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4916__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.clj__GT_js;
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__9040_9050 = cljs.core.seq(x);
            var chunk__9041_9051 = null;
            var count__9042_9052 = 0;
            var i__9043_9053 = 0;
            while (true) {
              if (i__9043_9053 < count__9042_9052) {
                var vec__9044_9054 = chunk__9041_9051.cljs$core$IIndexed$_nth$arity$2(null, i__9043_9053);
                var k_9055 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9044_9054, 0, null);
                var v_9056 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9044_9054, 1, null);
                m[cljs.core.key__GT_js(k_9055)] = cljs$core$clj__GT_js(v_9056);
                var G__9057 = seq__9040_9050;
                var G__9058 = chunk__9041_9051;
                var G__9059 = count__9042_9052;
                var G__9060 = i__9043_9053 + 1;
                seq__9040_9050 = G__9057;
                chunk__9041_9051 = G__9058;
                count__9042_9052 = G__9059;
                i__9043_9053 = G__9060;
                continue;
              } else {
                var temp__4425__auto___9061 = cljs.core.seq(seq__9040_9050);
                if (temp__4425__auto___9061) {
                  var seq__9040_9062__$1 = temp__4425__auto___9061;
                  if (cljs.core.chunked_seq_QMARK_(seq__9040_9062__$1)) {
                    var c__5063__auto___9063 = cljs.core.chunk_first(seq__9040_9062__$1);
                    var G__9064 = cljs.core.chunk_rest(seq__9040_9062__$1);
                    var G__9065 = c__5063__auto___9063;
                    var G__9066 = cljs.core.count(c__5063__auto___9063);
                    var G__9067 = 0;
                    seq__9040_9050 = G__9064;
                    chunk__9041_9051 = G__9065;
                    count__9042_9052 = G__9066;
                    i__9043_9053 = G__9067;
                    continue;
                  } else {
                    var vec__9045_9068 = cljs.core.first(seq__9040_9062__$1);
                    var k_9069 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9045_9068, 0, null);
                    var v_9070 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9045_9068, 1, null);
                    m[cljs.core.key__GT_js(k_9069)] = cljs$core$clj__GT_js(v_9070);
                    var G__9071 = cljs.core.next(seq__9040_9062__$1);
                    var G__9072 = null;
                    var G__9073 = 0;
                    var G__9074 = 0;
                    seq__9040_9050 = G__9071;
                    chunk__9041_9051 = G__9072;
                    count__9042_9052 = G__9073;
                    i__9043_9053 = G__9074;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__9046_9075 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__9047_9076 = null;
              var count__9048_9077 = 0;
              var i__9049_9078 = 0;
              while (true) {
                if (i__9049_9078 < count__9048_9077) {
                  var x_9079__$1 = chunk__9047_9076.cljs$core$IIndexed$_nth$arity$2(null, i__9049_9078);
                  arr.push(x_9079__$1);
                  var G__9080 = seq__9046_9075;
                  var G__9081 = chunk__9047_9076;
                  var G__9082 = count__9048_9077;
                  var G__9083 = i__9049_9078 + 1;
                  seq__9046_9075 = G__9080;
                  chunk__9047_9076 = G__9081;
                  count__9048_9077 = G__9082;
                  i__9049_9078 = G__9083;
                  continue;
                } else {
                  var temp__4425__auto___9084 = cljs.core.seq(seq__9046_9075);
                  if (temp__4425__auto___9084) {
                    var seq__9046_9085__$1 = temp__4425__auto___9084;
                    if (cljs.core.chunked_seq_QMARK_(seq__9046_9085__$1)) {
                      var c__5063__auto___9086 = cljs.core.chunk_first(seq__9046_9085__$1);
                      var G__9087 = cljs.core.chunk_rest(seq__9046_9085__$1);
                      var G__9088 = c__5063__auto___9086;
                      var G__9089 = cljs.core.count(c__5063__auto___9086);
                      var G__9090 = 0;
                      seq__9046_9075 = G__9087;
                      chunk__9047_9076 = G__9088;
                      count__9048_9077 = G__9089;
                      i__9049_9078 = G__9090;
                      continue;
                    } else {
                      var x_9091__$1 = cljs.core.first(seq__9046_9085__$1);
                      arr.push(x_9091__$1);
                      var G__9092 = cljs.core.next(seq__9046_9085__$1);
                      var G__9093 = null;
                      var G__9094 = 0;
                      var G__9095 = 0;
                      seq__9046_9075 = G__9092;
                      chunk__9047_9076 = G__9093;
                      count__9048_9077 = G__9094;
                      i__9049_9078 = G__9095;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4915__auto__ = x == null ? null : x;
    var m__4916__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4916__auto__.call(null, x, options);
    } else {
      var m__4916__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4916__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args9096 = [];
  var len__5318__auto___9121 = arguments.length;
  var i__5319__auto___9122 = 0;
  while (true) {
    if (i__5319__auto___9122 < len__5318__auto___9121) {
      args9096.push(arguments[i__5319__auto___9122]);
      var G__9123 = i__5319__auto___9122 + 1;
      i__5319__auto___9122 = G__9123;
      continue;
    } else {
    }
    break;
  }
  var G__9100 = args9096.length;
  switch(G__9100) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args9096.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5337__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__9101 = opts;
  var map__9101__$1 = (!(map__9101 == null) ? map__9101.cljs$lang$protocol_mask$partition0$ & 64 || map__9101.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9101) : map__9101;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9101__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__9101, map__9101__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5032__auto__ = function(map__9101, map__9101__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__9115(s__9116) {
                      return new cljs.core.LazySeq(null, function(map__9101, map__9101__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__9116__$1 = s__9116;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__9116__$1);
                            if (temp__4425__auto__) {
                              var s__9116__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__9116__$2)) {
                                var c__5030__auto__ = cljs.core.chunk_first(s__9116__$2);
                                var size__5031__auto__ = cljs.core.count(c__5030__auto__);
                                var b__9118 = cljs.core.chunk_buffer(size__5031__auto__);
                                if (function() {
                                  var i__9117 = 0;
                                  while (true) {
                                    if (i__9117 < size__5031__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5030__auto__, i__9117);
                                      cljs.core.chunk_append(b__9118, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__9125 = i__9117 + 1;
                                      i__9117 = G__9125;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9118), cljs$core$thisfn_$_iter__9115(cljs.core.chunk_rest(s__9116__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9118), null);
                                }
                              } else {
                                var k = cljs.core.first(s__9116__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__9115(cljs.core.rest(s__9116__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__9101, map__9101__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__9101, map__9101__$1, keywordize_keys, keyfn);
                  return iter__5032__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__9101, map__9101__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq9097) {
  var G__9098 = cljs.core.first(seq9097);
  var seq9097__$1 = cljs.core.next(seq9097);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__9098, seq9097__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__9127 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9127) : cljs.core.atom.call(null, G__9127);
  }();
  return function(mem) {
    return function() {
      var G__9128__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__9128 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__9129__i = 0, G__9129__a = new Array(arguments.length - 0);
          while (G__9129__i < G__9129__a.length) {
            G__9129__a[G__9129__i] = arguments[G__9129__i + 0];
            ++G__9129__i;
          }
          args = new cljs.core.IndexedSeq(G__9129__a, 0);
        }
        return G__9128__delegate.call(this, args);
      };
      G__9128.cljs$lang$maxFixedArity = 0;
      G__9128.cljs$lang$applyTo = function(arglist__9130) {
        var args = cljs.core.seq(arglist__9130);
        return G__9128__delegate(args);
      };
      G__9128.cljs$core$IFn$_invoke$arity$variadic = G__9128__delegate;
      return G__9128;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args9131 = [];
  var len__5318__auto___9136 = arguments.length;
  var i__5319__auto___9137 = 0;
  while (true) {
    if (i__5319__auto___9137 < len__5318__auto___9136) {
      args9131.push(arguments[i__5319__auto___9137]);
      var G__9138 = i__5319__auto___9137 + 1;
      i__5319__auto___9137 = G__9138;
      continue;
    } else {
    }
    break;
  }
  var G__9135 = args9131.length;
  switch(G__9135) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5337__auto__ = new cljs.core.IndexedSeq(args9131.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5337__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__9140 = ret;
      f = G__9140;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq9132) {
  var G__9133 = cljs.core.first(seq9132);
  var seq9132__$1 = cljs.core.next(seq9132);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__9133, seq9132__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args9141 = [];
  var len__5318__auto___9144 = arguments.length;
  var i__5319__auto___9145 = 0;
  while (true) {
    if (i__5319__auto___9145 < len__5318__auto___9144) {
      args9141.push(arguments[i__5319__auto___9145]);
      var G__9146 = i__5319__auto___9145 + 1;
      i__5319__auto___9145 = G__9146;
      continue;
    } else {
    }
    break;
  }
  var G__9143 = args9141.length;
  switch(G__9143) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9141.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__9149 = Math.random() * n;
  return Math.floor(G__9149);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__9151 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9151) : cljs.core.atom.call(null, G__9151);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__5325__auto__ = [];
  var len__5318__auto___9154 = arguments.length;
  var i__5319__auto___9155 = 0;
  while (true) {
    if (i__5319__auto___9155 < len__5318__auto___9154) {
      args__5325__auto__.push(arguments[i__5319__auto___9155]);
      var G__9156 = i__5319__auto___9155 + 1;
      i__5319__auto___9155 = G__9156;
      continue;
    } else {
    }
    break;
  }
  var argseq__5326__auto__ = 1 < args__5325__auto__.length ? new cljs.core.IndexedSeq(args__5325__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5326__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq9152) {
  var G__9153 = cljs.core.first(seq9152);
  var seq9152__$1 = cljs.core.next(seq9152);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9153, seq9152__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args9157 = [];
  var len__5318__auto___9161 = arguments.length;
  var i__5319__auto___9162 = 0;
  while (true) {
    if (i__5319__auto___9162 < len__5318__auto___9161) {
      args9157.push(arguments[i__5319__auto___9162]);
      var G__9163 = i__5319__auto___9162 + 1;
      i__5319__auto___9162 = G__9163;
      continue;
    } else {
    }
    break;
  }
  var G__9159 = args9157.length;
  switch(G__9159) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9157.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9160 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9160) : cljs.core.deref.call(null, G__9160);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4260__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4260__auto__) {
    return or__4260__auto__;
  } else {
    var or__4260__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4260__auto____$1) {
      return or__4260__auto____$1;
    } else {
      var and__4248__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4248__auto__) {
        var and__4248__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4248__auto____$1) {
          var and__4248__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4248__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__9165 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__9166 = i + 1;
                ret = G__9165;
                i = G__9166;
                continue;
              }
              break;
            }
          } else {
            return and__4248__auto____$2;
          }
        } else {
          return and__4248__auto____$1;
        }
      } else {
        return and__4248__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args9167 = [];
  var len__5318__auto___9171 = arguments.length;
  var i__5319__auto___9172 = 0;
  while (true) {
    if (i__5319__auto___9172 < len__5318__auto___9171) {
      args9167.push(arguments[i__5319__auto___9172]);
      var G__9173 = i__5319__auto___9172 + 1;
      i__5319__auto___9172 = G__9173;
      continue;
    } else {
    }
    break;
  }
  var G__9169 = args9167.length;
  switch(G__9169) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9167.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9170 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9170) : cljs.core.deref.call(null, G__9170);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args9175 = [];
  var len__5318__auto___9179 = arguments.length;
  var i__5319__auto___9180 = 0;
  while (true) {
    if (i__5319__auto___9180 < len__5318__auto___9179) {
      args9175.push(arguments[i__5319__auto___9180]);
      var G__9181 = i__5319__auto___9180 + 1;
      i__5319__auto___9180 = G__9181;
      continue;
    } else {
    }
    break;
  }
  var G__9177 = args9175.length;
  switch(G__9177) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9175.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9178 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9178) : cljs.core.deref.call(null, G__9178);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args9183 = [];
  var len__5318__auto___9187 = arguments.length;
  var i__5319__auto___9188 = 0;
  while (true) {
    if (i__5319__auto___9188 < len__5318__auto___9187) {
      args9183.push(arguments[i__5319__auto___9188]);
      var G__9189 = i__5319__auto___9188 + 1;
      i__5319__auto___9188 = G__9189;
      continue;
    } else {
    }
    break;
  }
  var G__9185 = args9183.length;
  switch(G__9185) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9183.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9186 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9186) : cljs.core.deref.call(null, G__9186);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args9191 = [];
  var len__5318__auto___9194 = arguments.length;
  var i__5319__auto___9195 = 0;
  while (true) {
    if (i__5319__auto___9195 < len__5318__auto___9194) {
      args9191.push(arguments[i__5319__auto___9195]);
      var G__9196 = i__5319__auto___9195 + 1;
      i__5319__auto___9195 = G__9196;
      continue;
    } else {
    }
    break;
  }
  var G__9193 = args9191.length;
  switch(G__9193) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9191.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4260__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4260__auto__)) {
    return or__4260__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args9201 = [];
  var len__5318__auto___9204 = arguments.length;
  var i__5319__auto___9205 = 0;
  while (true) {
    if (i__5319__auto___9205 < len__5318__auto___9204) {
      args9201.push(arguments[i__5319__auto___9205]);
      var G__9206 = i__5319__auto___9205 + 1;
      i__5319__auto___9205 = G__9206;
      continue;
    } else {
    }
    break;
  }
  var G__9203 = args9201.length;
  switch(G__9203) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9201.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__9198_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__9198_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9198_SHARP_), cljs.core.second(p1__9198_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__9199_SHARP_, p2__9200_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__9199_SHARP_, p2__9200_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4260__auto__ = cljs.core.truth_(function() {
    var and__4248__auto__ = xprefs;
    if (cljs.core.truth_(and__4248__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4248__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4260__auto__)) {
    return or__4260__auto__;
  } else {
    var or__4260__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__9220 = cljs.core.rest(ps);
          ps = G__9220;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4260__auto____$1)) {
      return or__4260__auto____$1;
    } else {
      var or__4260__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__9221 = cljs.core.rest(ps);
            ps = G__9221;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4260__auto____$2)) {
        return or__4260__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4260__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4260__auto__)) {
    return or__4260__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__9224) {
    var vec__9225 = p__9224;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9225, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9225, 1, null);
    var e = vec__9225;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4260__auto__ = be == null;
        if (or__4260__auto__) {
          return or__4260__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._reset[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto__.call(null, mf);
    } else {
      var m__4916__auto____$1 = cljs.core._reset["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._add_method[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4916__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4916__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4916__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._remove_method[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4916__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4916__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4916__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._prefer_method[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4916__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4916__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4916__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._get_method[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4916__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4916__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4916__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._methods[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto__.call(null, mf);
    } else {
      var m__4916__auto____$1 = cljs.core._methods["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._prefers[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto__.call(null, mf);
    } else {
      var m__4916__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto__.call(null, mf);
    } else {
      var m__4916__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4915__auto__ = mf == null ? null : mf;
    var m__4916__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4915__auto__)];
    if (!(m__4916__auto__ == null)) {
      return m__4916__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto__.call(null, mf);
    } else {
      var m__4916__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4916__auto____$1 == null)) {
        return m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4916__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4916__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__9227 = null;
  var G__9227__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__9227__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__9227__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__9227__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__9227__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__9227__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__9227__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__9227__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__9227__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__9227__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9227__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9227__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9227__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9227__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9227__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9227__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9227__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9227__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9227__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9227__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9227__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9227__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__9227 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9227__1.call(this, self__);
      case 2:
        return G__9227__2.call(this, self__, a);
      case 3:
        return G__9227__3.call(this, self__, a, b);
      case 4:
        return G__9227__4.call(this, self__, a, b, c);
      case 5:
        return G__9227__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9227__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9227__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9227__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9227__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9227__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9227__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9227__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9227__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9227__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9227__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9227__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9227__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9227__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9227__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9227__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9227__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9227__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9227.cljs$core$IFn$_invoke$arity$1 = G__9227__1;
  G__9227.cljs$core$IFn$_invoke$arity$2 = G__9227__2;
  G__9227.cljs$core$IFn$_invoke$arity$3 = G__9227__3;
  G__9227.cljs$core$IFn$_invoke$arity$4 = G__9227__4;
  G__9227.cljs$core$IFn$_invoke$arity$5 = G__9227__5;
  G__9227.cljs$core$IFn$_invoke$arity$6 = G__9227__6;
  G__9227.cljs$core$IFn$_invoke$arity$7 = G__9227__7;
  G__9227.cljs$core$IFn$_invoke$arity$8 = G__9227__8;
  G__9227.cljs$core$IFn$_invoke$arity$9 = G__9227__9;
  G__9227.cljs$core$IFn$_invoke$arity$10 = G__9227__10;
  G__9227.cljs$core$IFn$_invoke$arity$11 = G__9227__11;
  G__9227.cljs$core$IFn$_invoke$arity$12 = G__9227__12;
  G__9227.cljs$core$IFn$_invoke$arity$13 = G__9227__13;
  G__9227.cljs$core$IFn$_invoke$arity$14 = G__9227__14;
  G__9227.cljs$core$IFn$_invoke$arity$15 = G__9227__15;
  G__9227.cljs$core$IFn$_invoke$arity$16 = G__9227__16;
  G__9227.cljs$core$IFn$_invoke$arity$17 = G__9227__17;
  G__9227.cljs$core$IFn$_invoke$arity$18 = G__9227__18;
  G__9227.cljs$core$IFn$_invoke$arity$19 = G__9227__19;
  G__9227.cljs$core$IFn$_invoke$arity$20 = G__9227__20;
  G__9227.cljs$core$IFn$_invoke$arity$21 = G__9227__21;
  G__9227.cljs$core$IFn$_invoke$arity$22 = G__9227__22;
  return G__9227;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args9226) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9226)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__9228 = self__.uuid;
  var G__9229 = other.uuid;
  return goog.array.defaultCompare(G__9228, G__9229);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args9230 = [];
  var len__5318__auto___9233 = arguments.length;
  var i__5319__auto___9234 = 0;
  while (true) {
    if (i__5319__auto___9234 < len__5318__auto___9233) {
      args9230.push(arguments[i__5319__auto___9234]);
      var G__9235 = i__5319__auto___9234 + 1;
      i__5319__auto___9234 = G__9235;
      continue;
    } else {
    }
    break;
  }
  var G__9232 = args9230.length;
  switch(G__9232) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9230.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__9237 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__9237) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9239_SHARP_, p2__9240_SHARP_) {
      goog.object.set(p1__9239_SHARP_, p2__9240_SHARP_, true);
      return p1__9239_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__9243 = cljs.core.next(ks__$1);
          var G__9244 = [cljs.core.str(function() {
            var G__9242 = ret;
            var G__9242__$1 = !(ret === "") ? [cljs.core.str(G__9242), cljs.core.str("|")].join("") : G__9242;
            return G__9242__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__9243;
          ret = G__9244;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_9245 = 0;
  while (true) {
    if (i_9245 < name.length) {
      var c_9246 = name.charAt(i_9245);
      var sub_9247 = goog.object.get(cljs.core.CHAR_MAP, c_9246);
      if (!(sub_9247 == null)) {
        sb.append(sub_9247);
      } else {
        sb.append(c_9246);
      }
      var G__9248 = i_9245 + 1;
      i_9245 = G__9248;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__9250 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9250, 0, null);
      var G__9251 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__9252 = r.lastIndex;
      ret = G__9251;
      last_match_end = G__9252;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4858__auto__, writer__4859__auto__, opt__4860__auto__) {
  return cljs.core._write(writer__4859__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__9257 = function() {
          var G__9255 = ctxt;
          var G__9256 = cljs.core.first(xs);
          return goog.object.get(G__9255, G__9256);
        }();
        var G__9258 = cljs.core.next(xs);
        ctxt = G__9257;
        xs = G__9258;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__9262 = cljs.core._STAR_target_STAR_;
  switch(G__9262) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__9264 = cljs.core.first(segs);
            return eval(G__9264);
          } catch (e9263) {
            if (e9263 instanceof ReferenceError) {
              var e = e9263;
              return null;
            } else {
              throw e9263;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args9266 = [];
  var len__5318__auto___9269 = arguments.length;
  var i__5319__auto___9270 = 0;
  while (true) {
    if (i__5319__auto___9270 < len__5318__auto___9269) {
      args9266.push(arguments[i__5319__auto___9270]);
      var G__9271 = i__5319__auto___9270 + 1;
      i__5319__auto___9270 = G__9271;
      continue;
    } else {
    }
    break;
  }
  var G__9268 = args9266.length;
  switch(G__9268) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9266.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9274 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9274) : cljs.core.atom.call(null, G__9274);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9276 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9276) : cljs.core.atom.call(null, G__9276);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("m_clj.c9.common");
goog.require("cljs.core");
m_clj.c9.common.by_id = function m_clj$c9$common$by_id(id) {
  return document.getElementById(id);
};
goog.exportSymbol("m_clj.c9.common.by_id", m_clj.c9.common.by_id);
m_clj.c9.common.set_html_BANG_ = function m_clj$c9$common$set_html_BANG_(el, s) {
  return el.innerHTML = s;
};
goog.exportSymbol("m_clj.c9.common.set_html_BANG_", m_clj.c9.common.set_html_BANG_);
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__5324__auto__ = port == null ? null : port;
    var m__5325__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, port, fn1_handler);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__5324__auto__ = port == null ? null : port;
    var m__5325__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__5324__auto__ = chan == null ? null : chan;
    var m__5325__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, chan);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__5324__auto__ = chan == null ? null : chan;
    var m__5325__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, chan);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__5324__auto__ = h == null ? null : h;
    var m__5325__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, h);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__5324__auto__ = h == null ? null : h;
    var m__5325__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, h);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__5324__auto__ = b == null ? null : b;
    var m__5325__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, b);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__5324__auto__ = b == null ? null : b;
    var m__5325__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, b);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__5324__auto__ = b == null ? null : b;
    var m__5325__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, b, itm);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args5779 = [];
  var len__5727__auto___5782 = arguments.length;
  var i__5728__auto___5783 = 0;
  while (true) {
    if (i__5728__auto___5783 < len__5727__auto___5782) {
      args5779.push(arguments[i__5728__auto___5783]);
      var G__5784 = i__5728__auto___5783 + 1;
      i__5728__auto___5783 = G__5784;
      continue;
    } else {
    }
    break;
  }
  var G__5781 = args5779.length;
  switch(G__5781) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args5779.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__5788 = cnt + 1;
      cnt = G__5788;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5572__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5572__auto__) {
      var v_5789 = this$.pop();
      if (keep_QMARK_.call(null, v_5789)) {
        this$.unshift(v_5789);
      } else {
      }
      var G__5790 = x + 1;
      x = G__5790;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.queue_dispatcher;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_5793 = 0;
  while (true) {
    var m_5794 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_5794 == null) {
    } else {
      m_5794.call(null);
      if (count_5793 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__5795 = count_5793 + 1;
        count_5793 = G__5795;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4657__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4657__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4657__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801 = function(box, val, meta5802) {
      this.box = box;
      this.val = val;
      this.meta5802 = meta5802;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5803, meta5802__$1) {
      var self__ = this;
      var _5803__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801(self__.box, self__.val, meta5802__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5803) {
      var self__ = this;
      var _5803__$1 = this;
      return self__.meta5802;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta5802", "meta5802", -1952061454, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels5801";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels5801");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels5801 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels5801(box__$1, val__$1, meta5802) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801(box__$1, val__$1, meta5802);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels5801(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__5324__auto__ = this$ == null ? null : this$;
    var m__5325__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, this$);
    } else {
      var m__5325__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_5804 = self__.puts.pop();
    if (putter_5804 == null) {
    } else {
      var put_handler_5805 = putter_5804.handler;
      var val_5806 = putter_5804.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_5805)) {
        var put_cb_5807 = cljs.core.async.impl.protocols.commit.call(null, put_handler_5805);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_5807, put_handler_5805, val_5806, putter_5804, this$__$1) {
          return function() {
            return put_cb_5807.call(null, true);
          };
        }(put_cb_5807, put_handler_5805, val_5806, putter_5804, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4657__auto__ = self__.buf;
      if (cljs.core.truth_(and__4657__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4657__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_5808 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_5808)) {
            var take_cb_5809 = cljs.core.async.impl.protocols.commit.call(null, taker_5808);
            var val_5810__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_5809, val_5810__$1, taker_5808, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_5809.call(null, val_5810__$1);
              };
            }(take_cb_5809, val_5810__$1, taker_5808, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_5811 = self__.puts.pop();
          if (putter_5811 == null) {
          } else {
            var put_handler_5812 = putter_5811.handler;
            var val_5813 = putter_5811.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_5812)) {
              var put_cb_5814 = cljs.core.async.impl.protocols.commit.call(null, put_handler_5812);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_5814, put_handler_5812, val_5813, putter_5811, _, retval, this$__$1) {
                return function() {
                  return put_cb_5814.call(null, true);
                };
              }(put_cb_5814, put_handler_5812, val_5813, putter_5811, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_5813))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4657__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4657__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4657__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4657__auto__ = self__.buf;
              if (cljs.core.truth_(and__4657__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4657__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4657__auto__ = self__.buf;
      if (cljs.core.truth_(and__4657__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4657__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_5815 = self__.takes.pop();
      if (taker_5815 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_5815)) {
          var take_cb_5816 = cljs.core.async.impl.protocols.commit.call(null, taker_5815);
          var val_5817 = cljs.core.truth_(function() {
            var and__4657__auto__ = self__.buf;
            if (cljs.core.truth_(and__4657__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4657__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_5816, val_5817, taker_5815, this$__$1) {
            return function() {
              return take_cb_5816.call(null, val_5817);
            };
          }(take_cb_5816, val_5817, taker_5815, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4669__auto__ = exh;
    if (cljs.core.truth_(or__4669__auto__)) {
      return or__4669__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args5818 = [];
  var len__5727__auto___5823 = arguments.length;
  var i__5728__auto___5824 = 0;
  while (true) {
    if (i__5728__auto___5824 < len__5727__auto___5823) {
      args5818.push(arguments[i__5728__auto___5824]);
      var G__5825 = i__5728__auto___5824 + 1;
      i__5728__auto___5824 = G__5825;
      continue;
    } else {
    }
    break;
  }
  var G__5820 = args5818.length;
  switch(G__5820) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args5818.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__5827 = null;
        var G__5827__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e5821) {
            var t = e5821;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__5827__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e5822) {
            var t = e5822;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__5827 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__5827__1.call(this, buf__$1);
            case 2:
              return G__5827__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5827.cljs$core$IFn$_invoke$arity$1 = G__5827__1;
        G__5827.cljs$core$IFn$_invoke$arity$2 = G__5827__2;
        return G__5827;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045 = function(fn_handler, f, meta7046) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta7046 = meta7046;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7047, meta7046__$1) {
      var self__ = this;
      var _7047__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045(self__.fn_handler, self__.f, meta7046__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7047) {
      var self__ = this;
      var _7047__$1 = this;
      return self__.meta7046;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta7046", "meta7046", 321723989, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers7045";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers7045");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers7045 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers7045(fn_handler__$1, f__$1, meta7046) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045(fn_handler__$1, f__$1, meta7046);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers7045(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e7049) {
    if (e7049 instanceof Object) {
      var ex = e7049;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e7049;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_7052_7054 = state;
    statearr_7052_7054[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_7052_7054[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_7053_7055 = state;
    statearr_7053_7055[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_7053_7055[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_7058_7060 = state;
    statearr_7058_7060[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_7058_7060[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_7059_7061 = state;
    statearr_7059_7061[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_7059_7061[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5283__auto__, k__5284__auto__) {
  var self__ = this;
  var this__5283__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5283__auto____$1, k__5284__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5285__auto__, k7063, else__5286__auto__) {
  var self__ = this;
  var this__5285__auto____$1 = this;
  var G__7065 = k7063 instanceof cljs.core.Keyword ? k7063.fqn : null;
  switch(G__7065) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k7063, else__5286__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5297__auto__, writer__5298__auto__, opts__5299__auto__) {
  var self__ = this;
  var this__5297__auto____$1 = this;
  var pr_pair__5300__auto__ = function(this__5297__auto____$1) {
    return function(keyval__5301__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5298__auto__, cljs.core.pr_writer, "", " ", "", opts__5299__auto__, keyval__5301__auto__);
    };
  }(this__5297__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5298__auto__, pr_pair__5300__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__5299__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__7062) {
  var self__ = this;
  var G__7062__$1 = this;
  return new cljs.core.RecordIter(0, G__7062__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5281__auto__) {
  var self__ = this;
  var this__5281__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5277__auto__) {
  var self__ = this;
  var this__5277__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5287__auto__) {
  var self__ = this;
  var this__5287__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5278__auto__) {
  var self__ = this;
  var this__5278__auto____$1 = this;
  var h__5104__auto__ = self__.__hash;
  if (!(h__5104__auto__ == null)) {
    return h__5104__auto__;
  } else {
    var h__5104__auto____$1 = cljs.core.hash_imap.call(null, this__5278__auto____$1);
    self__.__hash = h__5104__auto____$1;
    return h__5104__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5279__auto__, other__5280__auto__) {
  var self__ = this;
  var this__5279__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4657__auto__ = other__5280__auto__;
    if (cljs.core.truth_(and__4657__auto__)) {
      var and__4657__auto____$1 = this__5279__auto____$1.constructor === other__5280__auto__.constructor;
      if (and__4657__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5279__auto____$1, other__5280__auto__);
      } else {
        return and__4657__auto____$1;
      }
    } else {
      return and__4657__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5292__auto__, k__5293__auto__) {
  var self__ = this;
  var this__5292__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__5293__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5292__auto____$1), self__.__meta), k__5293__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5293__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5290__auto__, k__5291__auto__, G__7062) {
  var self__ = this;
  var this__5290__auto____$1 = this;
  var pred__7066 = cljs.core.keyword_identical_QMARK_;
  var expr__7067 = k__5291__auto__;
  if (cljs.core.truth_(pred__7066.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__7067))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__7062, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7066.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__7067))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__7062, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7066.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__7067))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__7062, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__7066.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__7067))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__7062, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__7066.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__7067))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__7062, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5291__auto__, G__7062), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5295__auto__) {
  var self__ = this;
  var this__5295__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5282__auto__, G__7062) {
  var self__ = this;
  var this__5282__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__7062, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5288__auto__, entry__5289__auto__) {
  var self__ = this;
  var this__5288__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5289__auto__)) {
    return cljs.core._assoc.call(null, this__5288__auto____$1, cljs.core._nth.call(null, entry__5289__auto__, 0), cljs.core._nth.call(null, entry__5289__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5288__auto____$1, entry__5289__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__5317__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__5317__auto__, writer__5318__auto__) {
  return cljs.core._write.call(null, writer__5318__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__7064) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__7064), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__7064), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__7064), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__7064), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__7064), null, cljs.core.dissoc.call(null, G__7064, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_7071 = state;
  statearr_7071[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_7071;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4657__auto__ = exception;
      if (cljs.core.truth_(and__4657__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4657__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4657__auto__ = exception;
        if (cljs.core.truth_(and__4657__auto__)) {
          var and__4657__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4657__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4657__auto____$1;
          }
        } else {
          return and__4657__auto__;
        }
      }())) {
        var statearr_7077 = state;
        statearr_7077[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_7077[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_7077[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_7077[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_7077;
      } else {
        if (cljs.core.truth_(function() {
          var and__4657__auto__ = exception;
          if (cljs.core.truth_(and__4657__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4657__auto__;
          }
        }())) {
          var statearr_7078_7082 = state;
          statearr_7078_7082[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__7083 = state;
          state = G__7083;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4657__auto__ = exception;
            if (cljs.core.truth_(and__4657__auto__)) {
              var and__4657__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4657__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4657__auto____$1;
              }
            } else {
              return and__4657__auto__;
            }
          }())) {
            var statearr_7079 = state;
            statearr_7079[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_7079[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_7079;
          } else {
            if (cljs.core.truth_(function() {
              var and__4657__auto__ = cljs.core.not.call(null, exception);
              if (and__4657__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4657__auto__;
              }
            }())) {
              var statearr_7080 = state;
              statearr_7080[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_7080[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_7080;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_7081 = state;
                statearr_7081[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_7081[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_7081;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args7086 = [];
  var len__5727__auto___7089 = arguments.length;
  var i__5728__auto___7090 = 0;
  while (true) {
    if (i__5728__auto___7090 < len__5727__auto___7089) {
      args7086.push(arguments[i__5728__auto___7090]);
      var G__7091 = i__5728__auto___7090 + 1;
      i__5728__auto___7090 = G__7091;
      continue;
    } else {
    }
    break;
  }
  var G__7088 = args7086.length;
  switch(G__7088) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7086.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__7093 = level + 1;
      level = G__7093;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args7094 = [];
  var len__5727__auto___7097 = arguments.length;
  var i__5728__auto___7098 = 0;
  while (true) {
    if (i__5728__auto___7098 < len__5727__auto___7097) {
      args7094.push(arguments[i__5728__auto___7098]);
      var G__7099 = i__5728__auto___7098 + 1;
      i__5728__auto___7098 = G__7099;
      continue;
    } else {
    }
    break;
  }
  var G__7096 = args7094.length;
  switch(G__7096) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7094.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_7101 = 0;
  while (true) {
    if (i_7101 < arr.length) {
      arr[i_7101] = null;
      var G__7102 = i_7101 + 1;
      i_7101 = G__7102;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args7103 = [];
  var len__5727__auto___7106 = arguments.length;
  var i__5728__auto___7107 = 0;
  while (true) {
    if (i__5728__auto___7107 < len__5727__auto___7106) {
      args7103.push(arguments[i__5728__auto___7107]);
      var G__7108 = i__5728__auto___7107 + 1;
      i__5728__auto___7107 = G__7108;
      continue;
    } else {
    }
    break;
  }
  var G__7105 = args7103.length;
  switch(G__7105) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7103.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4423__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var x_SINGLEQUOTE_ = temp__4423__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__7110 = x_SINGLEQUOTE_;
              x__$1 = G__7110;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__7111 = x__$1;
      var G__7112 = k;
      var G__7113 = level - 1;
      var G__7114 = update;
      x = G__7111;
      k = G__7112;
      level = G__7113;
      update = G__7114;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_7115 = self__.level + 1;
      while (true) {
        if (i_7115 <= new_level + 1) {
          update[i_7115] = self__.header;
          var G__7116 = i_7115 + 1;
          i_7115 = G__7116;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_7117 = 0;
    while (true) {
      if (i_7117 <= self__.level) {
        var links_7118 = update[i_7117].forward;
        if (links_7118[i_7117] === x__$1) {
          links_7118[i_7117] = x__$1.forward[i_7117];
          var G__7119 = i_7117 + 1;
          i_7117 = G__7119;
          continue;
        } else {
          var G__7120 = i_7117 + 1;
          i_7117 = G__7120;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__7121 = x_SINGLEQUOTE_;
              x__$1 = G__7121;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__7122 = nx;
        var G__7123 = level__$1 - 1;
        x = G__7122;
        level__$1 = G__7123;
        continue;
      } else {
        var G__7124 = x;
        var G__7125 = level__$1 - 1;
        x = G__7124;
        level__$1 = G__7125;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__7126 = x_SINGLEQUOTE_;
              x__$1 = G__7126;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__7127 = nx;
        var G__7128 = level__$1 - 1;
        x = G__7127;
        level__$1 = G__7128;
        continue;
      } else {
        var G__7129 = x;
        var G__7130 = level__$1 - 1;
        x = G__7129;
        level__$1 = G__7130;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
  return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4669__auto__ = cljs.core.truth_(function() {
    var and__4657__auto__ = me;
    if (cljs.core.truth_(and__4657__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4657__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4669__auto__)) {
    return or__4669__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4669__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4669__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t_cljs$core$async7189 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async7189 = function(fn_handler, f, meta7190) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta7190 = meta7190;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async7189.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7191, meta7190__$1) {
      var self__ = this;
      var _7191__$1 = this;
      return new cljs.core.async.t_cljs$core$async7189(self__.fn_handler, self__.f, meta7190__$1);
    };
    cljs.core.async.t_cljs$core$async7189.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7191) {
      var self__ = this;
      var _7191__$1 = this;
      return self__.meta7190;
    };
    cljs.core.async.t_cljs$core$async7189.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async7189.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async7189.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async7189.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta7190", "meta7190", -489488415, null)], null);
    };
    cljs.core.async.t_cljs$core$async7189.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async7189.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async7189";
    cljs.core.async.t_cljs$core$async7189.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async7189");
    };
    cljs.core.async.__GT_t_cljs$core$async7189 = function cljs$core$async$fn_handler_$___GT_t_cljs$core$async7189(fn_handler__$1, f__$1, meta7190) {
      return new cljs.core.async.t_cljs$core$async7189(fn_handler__$1, f__$1, meta7190);
    };
  }
  return new cljs.core.async.t_cljs$core$async7189(cljs$core$async$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args7194 = [];
  var len__5727__auto___7197 = arguments.length;
  var i__5728__auto___7198 = 0;
  while (true) {
    if (i__5728__auto___7198 < len__5727__auto___7197) {
      args7194.push(arguments[i__5728__auto___7198]);
      var G__7199 = i__5728__auto___7198 + 1;
      i__5728__auto___7198 = G__7199;
      continue;
    } else {
    }
    break;
  }
  var G__7196 = args7194.length;
  switch(G__7196) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7194.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args7201 = [];
  var len__5727__auto___7204 = arguments.length;
  var i__5728__auto___7205 = 0;
  while (true) {
    if (i__5728__auto___7205 < len__5727__auto___7204) {
      args7201.push(arguments[i__5728__auto___7205]);
      var G__7206 = i__5728__auto___7205 + 1;
      i__5728__auto___7205 = G__7206;
      continue;
    } else {
    }
    break;
  }
  var G__7203 = args7201.length;
  switch(G__7203) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7201.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_7208 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_7208);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_7208, ret) {
        return function() {
          return fn1.call(null, val_7208);
        };
      }(val_7208, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args7209 = [];
  var len__5727__auto___7212 = arguments.length;
  var i__5728__auto___7213 = 0;
  while (true) {
    if (i__5728__auto___7213 < len__5727__auto___7212) {
      args7209.push(arguments[i__5728__auto___7213]);
      var G__7214 = i__5728__auto___7213 + 1;
      i__5728__auto___7213 = G__7214;
      continue;
    } else {
    }
    break;
  }
  var G__7211 = args7209.length;
  switch(G__7211) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7209.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ret = temp__4423__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var retb = temp__4423__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4423__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4423__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5572__auto___7216 = n;
  var x_7217 = 0;
  while (true) {
    if (x_7217 < n__5572__auto___7216) {
      a[x_7217] = 0;
      var G__7218 = x_7217 + 1;
      x_7217 = G__7218;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__7219 = i + 1;
      i = G__7219;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async7223 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async7223 = function(alt_flag, flag, meta7224) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta7224 = meta7224;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async7223.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_7225, meta7224__$1) {
        var self__ = this;
        var _7225__$1 = this;
        return new cljs.core.async.t_cljs$core$async7223(self__.alt_flag, self__.flag, meta7224__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async7223.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_7225) {
        var self__ = this;
        var _7225__$1 = this;
        return self__.meta7224;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async7223.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async7223.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async7223.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async7223.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta7224", "meta7224", -969514698, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async7223.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async7223.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async7223";
    cljs.core.async.t_cljs$core$async7223.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
        return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async7223");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async7223 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async7223(alt_flag__$1, flag__$1, meta7224) {
        return new cljs.core.async.t_cljs$core$async7223(alt_flag__$1, flag__$1, meta7224);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async7223(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async7229 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async7229 = function(alt_handler, flag, cb, meta7230) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta7230 = meta7230;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async7229.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7231, meta7230__$1) {
      var self__ = this;
      var _7231__$1 = this;
      return new cljs.core.async.t_cljs$core$async7229(self__.alt_handler, self__.flag, self__.cb, meta7230__$1);
    };
    cljs.core.async.t_cljs$core$async7229.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7231) {
      var self__ = this;
      var _7231__$1 = this;
      return self__.meta7230;
    };
    cljs.core.async.t_cljs$core$async7229.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async7229.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async7229.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async7229.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta7230", "meta7230", 1129732092, null)], null);
    };
    cljs.core.async.t_cljs$core$async7229.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async7229.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async7229";
    cljs.core.async.t_cljs$core$async7229.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async7229");
    };
    cljs.core.async.__GT_t_cljs$core$async7229 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async7229(alt_handler__$1, flag__$1, cb__$1, meta7230) {
      return new cljs.core.async.t_cljs$core$async7229(alt_handler__$1, flag__$1, cb__$1, meta7230);
    };
  }
  return new cljs.core.async.t_cljs$core$async7229(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__7232_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__7232_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__7233_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__7233_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4669__auto__ = wport;
            if (cljs.core.truth_(or__4669__auto__)) {
              return or__4669__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__7234 = i + 1;
          i = G__7234;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4669__auto__ = ret;
  if (cljs.core.truth_(or__4669__auto__)) {
    return or__4669__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4425__auto__ = function() {
        var and__4657__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4657__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4657__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto__)) {
        var got = temp__4425__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___7240 = arguments.length;
  var i__5728__auto___7241 = 0;
  while (true) {
    if (i__5728__auto___7241 < len__5727__auto___7240) {
      args__5734__auto__.push(arguments[i__5728__auto___7241]);
      var G__7242 = i__5728__auto___7241 + 1;
      i__5728__auto___7241 = G__7242;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 1 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5735__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__7237) {
  var map__7238 = p__7237;
  var map__7238__$1 = (!(map__7238 == null) ? map__7238.cljs$lang$protocol_mask$partition0$ & 64 || map__7238.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7238) : map__7238;
  var opts = map__7238__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq7235) {
  var G__7236 = cljs.core.first.call(null, seq7235);
  var seq7235__$1 = cljs.core.next.call(null, seq7235);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7236, seq7235__$1);
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args7243 = [];
  var len__5727__auto___7293 = arguments.length;
  var i__5728__auto___7294 = 0;
  while (true) {
    if (i__5728__auto___7294 < len__5727__auto___7293) {
      args7243.push(arguments[i__5728__auto___7294]);
      var G__7295 = i__5728__auto___7294 + 1;
      i__5728__auto___7294 = G__7295;
      continue;
    } else {
    }
    break;
  }
  var G__7245 = args7243.length;
  switch(G__7245) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7243.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__7141__auto___7297 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___7297) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___7297) {
          return function(state_7269) {
            var state_val_7270 = state_7269[1];
            if (state_val_7270 === 7) {
              var inst_7265 = state_7269[2];
              var state_7269__$1 = state_7269;
              var statearr_7271_7298 = state_7269__$1;
              statearr_7271_7298[2] = inst_7265;
              statearr_7271_7298[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7270 === 1) {
                var state_7269__$1 = state_7269;
                var statearr_7272_7299 = state_7269__$1;
                statearr_7272_7299[2] = null;
                statearr_7272_7299[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_7270 === 4) {
                  var inst_7248 = state_7269[7];
                  var inst_7248__$1 = state_7269[2];
                  var inst_7249 = inst_7248__$1 == null;
                  var state_7269__$1 = function() {
                    var statearr_7273 = state_7269;
                    statearr_7273[7] = inst_7248__$1;
                    return statearr_7273;
                  }();
                  if (cljs.core.truth_(inst_7249)) {
                    var statearr_7274_7300 = state_7269__$1;
                    statearr_7274_7300[1] = 5;
                  } else {
                    var statearr_7275_7301 = state_7269__$1;
                    statearr_7275_7301[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_7270 === 13) {
                    var state_7269__$1 = state_7269;
                    var statearr_7276_7302 = state_7269__$1;
                    statearr_7276_7302[2] = null;
                    statearr_7276_7302[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7270 === 6) {
                      var inst_7248 = state_7269[7];
                      var state_7269__$1 = state_7269;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7269__$1, 11, to, inst_7248);
                    } else {
                      if (state_val_7270 === 3) {
                        var inst_7267 = state_7269[2];
                        var state_7269__$1 = state_7269;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7269__$1, inst_7267);
                      } else {
                        if (state_val_7270 === 12) {
                          var state_7269__$1 = state_7269;
                          var statearr_7277_7303 = state_7269__$1;
                          statearr_7277_7303[2] = null;
                          statearr_7277_7303[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_7270 === 2) {
                            var state_7269__$1 = state_7269;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7269__$1, 4, from);
                          } else {
                            if (state_val_7270 === 11) {
                              var inst_7258 = state_7269[2];
                              var state_7269__$1 = state_7269;
                              if (cljs.core.truth_(inst_7258)) {
                                var statearr_7278_7304 = state_7269__$1;
                                statearr_7278_7304[1] = 12;
                              } else {
                                var statearr_7279_7305 = state_7269__$1;
                                statearr_7279_7305[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_7270 === 9) {
                                var state_7269__$1 = state_7269;
                                var statearr_7280_7306 = state_7269__$1;
                                statearr_7280_7306[2] = null;
                                statearr_7280_7306[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_7270 === 5) {
                                  var state_7269__$1 = state_7269;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_7281_7307 = state_7269__$1;
                                    statearr_7281_7307[1] = 8;
                                  } else {
                                    var statearr_7282_7308 = state_7269__$1;
                                    statearr_7282_7308[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_7270 === 14) {
                                    var inst_7263 = state_7269[2];
                                    var state_7269__$1 = state_7269;
                                    var statearr_7283_7309 = state_7269__$1;
                                    statearr_7283_7309[2] = inst_7263;
                                    statearr_7283_7309[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_7270 === 10) {
                                      var inst_7255 = state_7269[2];
                                      var state_7269__$1 = state_7269;
                                      var statearr_7284_7310 = state_7269__$1;
                                      statearr_7284_7310[2] = inst_7255;
                                      statearr_7284_7310[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_7270 === 8) {
                                        var inst_7252 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_7269__$1 = state_7269;
                                        var statearr_7285_7311 = state_7269__$1;
                                        statearr_7285_7311[2] = inst_7252;
                                        statearr_7285_7311[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___7297);
        return function(switch__7029__auto__, c__7141__auto___7297) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_7289 = [null, null, null, null, null, null, null, null];
              statearr_7289[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_7289[1] = 1;
              return statearr_7289;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_7269) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7269);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7290) {
                    if (e7290 instanceof Object) {
                      var ex__7033__auto__ = e7290;
                      var statearr_7291_7312 = state_7269;
                      statearr_7291_7312[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7269);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7290;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7313 = state_7269;
                  state_7269 = G__7313;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_7269) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_7269);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___7297);
      }();
      var state__7143__auto__ = function() {
        var statearr_7292 = f__7142__auto__.call(null);
        statearr_7292[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7297;
        return statearr_7292;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___7297));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__7497) {
      var vec__7498 = p__7497;
      var v = cljs.core.nth.call(null, vec__7498, 0, null);
      var p = cljs.core.nth.call(null, vec__7498, 1, null);
      var job = vec__7498;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__7141__auto___7680 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results) {
          return function() {
            var f__7142__auto__ = function() {
              var switch__7029__auto__ = function(c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results) {
                return function(state_7503) {
                  var state_val_7504 = state_7503[1];
                  if (state_val_7504 === 1) {
                    var state_7503__$1 = state_7503;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7503__$1, 2, res, v);
                  } else {
                    if (state_val_7504 === 2) {
                      var inst_7500 = state_7503[2];
                      var inst_7501 = cljs.core.async.close_BANG_.call(null, res);
                      var state_7503__$1 = function() {
                        var statearr_7505 = state_7503;
                        statearr_7505[7] = inst_7500;
                        return statearr_7505;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7503__$1, inst_7501);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results);
              return function(switch__7029__auto__, c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0 = function() {
                    var statearr_7509 = [null, null, null, null, null, null, null, null];
                    statearr_7509[0] = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                    statearr_7509[1] = 1;
                    return statearr_7509;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1 = function(state_7503) {
                    while (true) {
                      var ret_value__7031__auto__ = function() {
                        try {
                          while (true) {
                            var result__7032__auto__ = switch__7029__auto__.call(null, state_7503);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__7032__auto__;
                            }
                            break;
                          }
                        } catch (e7510) {
                          if (e7510 instanceof Object) {
                            var ex__7033__auto__ = e7510;
                            var statearr_7511_7681 = state_7503;
                            statearr_7511_7681[5] = ex__7033__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7503);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e7510;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__7682 = state_7503;
                        state_7503 = G__7682;
                        continue;
                      } else {
                        return ret_value__7031__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = function(state_7503) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1.call(this, state_7503);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                }();
              }(switch__7029__auto__, c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results);
            }();
            var state__7143__auto__ = function() {
              var statearr_7512 = f__7142__auto__.call(null);
              statearr_7512[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7680;
              return statearr_7512;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
          };
        }(c__7141__auto___7680, res, vec__7498, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__7513) {
      var vec__7514 = p__7513;
      var v = cljs.core.nth.call(null, vec__7514, 0, null);
      var p = cljs.core.nth.call(null, vec__7514, 1, null);
      var job = vec__7514;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5572__auto___7683 = n;
  var __7684 = 0;
  while (true) {
    if (__7684 < n__5572__auto___7683) {
      var G__7515_7685 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__7515_7685) {
        case "compute":
          var c__7141__auto___7687 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__7684, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
            return function() {
              var f__7142__auto__ = function() {
                var switch__7029__auto__ = function(__7684, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
                  return function(state_7528) {
                    var state_val_7529 = state_7528[1];
                    if (state_val_7529 === 1) {
                      var state_7528__$1 = state_7528;
                      var statearr_7530_7688 = state_7528__$1;
                      statearr_7530_7688[2] = null;
                      statearr_7530_7688[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7529 === 2) {
                        var state_7528__$1 = state_7528;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7528__$1, 4, jobs);
                      } else {
                        if (state_val_7529 === 3) {
                          var inst_7526 = state_7528[2];
                          var state_7528__$1 = state_7528;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7528__$1, inst_7526);
                        } else {
                          if (state_val_7529 === 4) {
                            var inst_7518 = state_7528[2];
                            var inst_7519 = process.call(null, inst_7518);
                            var state_7528__$1 = state_7528;
                            if (cljs.core.truth_(inst_7519)) {
                              var statearr_7531_7689 = state_7528__$1;
                              statearr_7531_7689[1] = 5;
                            } else {
                              var statearr_7532_7690 = state_7528__$1;
                              statearr_7532_7690[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_7529 === 5) {
                              var state_7528__$1 = state_7528;
                              var statearr_7533_7691 = state_7528__$1;
                              statearr_7533_7691[2] = null;
                              statearr_7533_7691[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_7529 === 6) {
                                var state_7528__$1 = state_7528;
                                var statearr_7534_7692 = state_7528__$1;
                                statearr_7534_7692[2] = null;
                                statearr_7534_7692[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_7529 === 7) {
                                  var inst_7524 = state_7528[2];
                                  var state_7528__$1 = state_7528;
                                  var statearr_7535_7693 = state_7528__$1;
                                  statearr_7535_7693[2] = inst_7524;
                                  statearr_7535_7693[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__7684, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async);
                return function(__7684, switch__7029__auto__, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0 = function() {
                      var statearr_7539 = [null, null, null, null, null, null, null];
                      statearr_7539[0] = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                      statearr_7539[1] = 1;
                      return statearr_7539;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1 = function(state_7528) {
                      while (true) {
                        var ret_value__7031__auto__ = function() {
                          try {
                            while (true) {
                              var result__7032__auto__ = switch__7029__auto__.call(null, state_7528);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__7032__auto__;
                              }
                              break;
                            }
                          } catch (e7540) {
                            if (e7540 instanceof Object) {
                              var ex__7033__auto__ = e7540;
                              var statearr_7541_7694 = state_7528;
                              statearr_7541_7694[5] = ex__7033__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7528);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7540;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7695 = state_7528;
                          state_7528 = G__7695;
                          continue;
                        } else {
                          return ret_value__7031__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = function(state_7528) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1.call(this, state_7528);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                  }();
                }(__7684, switch__7029__auto__, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async);
              }();
              var state__7143__auto__ = function() {
                var statearr_7542 = f__7142__auto__.call(null);
                statearr_7542[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7687;
                return statearr_7542;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
            };
          }(__7684, c__7141__auto___7687, G__7515_7685, n__5572__auto___7683, jobs, results, process, async));
          break;
        case "async":
          var c__7141__auto___7696 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__7684, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
            return function() {
              var f__7142__auto__ = function() {
                var switch__7029__auto__ = function(__7684, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
                  return function(state_7555) {
                    var state_val_7556 = state_7555[1];
                    if (state_val_7556 === 1) {
                      var state_7555__$1 = state_7555;
                      var statearr_7557_7697 = state_7555__$1;
                      statearr_7557_7697[2] = null;
                      statearr_7557_7697[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7556 === 2) {
                        var state_7555__$1 = state_7555;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7555__$1, 4, jobs);
                      } else {
                        if (state_val_7556 === 3) {
                          var inst_7553 = state_7555[2];
                          var state_7555__$1 = state_7555;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7555__$1, inst_7553);
                        } else {
                          if (state_val_7556 === 4) {
                            var inst_7545 = state_7555[2];
                            var inst_7546 = async.call(null, inst_7545);
                            var state_7555__$1 = state_7555;
                            if (cljs.core.truth_(inst_7546)) {
                              var statearr_7558_7698 = state_7555__$1;
                              statearr_7558_7698[1] = 5;
                            } else {
                              var statearr_7559_7699 = state_7555__$1;
                              statearr_7559_7699[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_7556 === 5) {
                              var state_7555__$1 = state_7555;
                              var statearr_7560_7700 = state_7555__$1;
                              statearr_7560_7700[2] = null;
                              statearr_7560_7700[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_7556 === 6) {
                                var state_7555__$1 = state_7555;
                                var statearr_7561_7701 = state_7555__$1;
                                statearr_7561_7701[2] = null;
                                statearr_7561_7701[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_7556 === 7) {
                                  var inst_7551 = state_7555[2];
                                  var state_7555__$1 = state_7555;
                                  var statearr_7562_7702 = state_7555__$1;
                                  statearr_7562_7702[2] = inst_7551;
                                  statearr_7562_7702[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__7684, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async);
                return function(__7684, switch__7029__auto__, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0 = function() {
                      var statearr_7566 = [null, null, null, null, null, null, null];
                      statearr_7566[0] = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                      statearr_7566[1] = 1;
                      return statearr_7566;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1 = function(state_7555) {
                      while (true) {
                        var ret_value__7031__auto__ = function() {
                          try {
                            while (true) {
                              var result__7032__auto__ = switch__7029__auto__.call(null, state_7555);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__7032__auto__;
                              }
                              break;
                            }
                          } catch (e7567) {
                            if (e7567 instanceof Object) {
                              var ex__7033__auto__ = e7567;
                              var statearr_7568_7703 = state_7555;
                              statearr_7568_7703[5] = ex__7033__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7555);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e7567;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__7704 = state_7555;
                          state_7555 = G__7704;
                          continue;
                        } else {
                          return ret_value__7031__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = function(state_7555) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1.call(this, state_7555);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
                  }();
                }(__7684, switch__7029__auto__, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async);
              }();
              var state__7143__auto__ = function() {
                var statearr_7569 = f__7142__auto__.call(null);
                statearr_7569[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7696;
                return statearr_7569;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
            };
          }(__7684, c__7141__auto___7696, G__7515_7685, n__5572__auto___7683, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__7705 = __7684 + 1;
      __7684 = G__7705;
      continue;
    } else {
    }
    break;
  }
  var c__7141__auto___7706 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___7706, jobs, results, process, async) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___7706, jobs, results, process, async) {
          return function(state_7591) {
            var state_val_7592 = state_7591[1];
            if (state_val_7592 === 1) {
              var state_7591__$1 = state_7591;
              var statearr_7593_7707 = state_7591__$1;
              statearr_7593_7707[2] = null;
              statearr_7593_7707[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7592 === 2) {
                var state_7591__$1 = state_7591;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7591__$1, 4, from);
              } else {
                if (state_val_7592 === 3) {
                  var inst_7589 = state_7591[2];
                  var state_7591__$1 = state_7591;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7591__$1, inst_7589);
                } else {
                  if (state_val_7592 === 4) {
                    var inst_7572 = state_7591[7];
                    var inst_7572__$1 = state_7591[2];
                    var inst_7573 = inst_7572__$1 == null;
                    var state_7591__$1 = function() {
                      var statearr_7594 = state_7591;
                      statearr_7594[7] = inst_7572__$1;
                      return statearr_7594;
                    }();
                    if (cljs.core.truth_(inst_7573)) {
                      var statearr_7595_7708 = state_7591__$1;
                      statearr_7595_7708[1] = 5;
                    } else {
                      var statearr_7596_7709 = state_7591__$1;
                      statearr_7596_7709[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7592 === 5) {
                      var inst_7575 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_7591__$1 = state_7591;
                      var statearr_7597_7710 = state_7591__$1;
                      statearr_7597_7710[2] = inst_7575;
                      statearr_7597_7710[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7592 === 6) {
                        var inst_7577 = state_7591[8];
                        var inst_7572 = state_7591[7];
                        var inst_7577__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_7578 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_7579 = [inst_7572, inst_7577__$1];
                        var inst_7580 = new cljs.core.PersistentVector(null, 2, 5, inst_7578, inst_7579, null);
                        var state_7591__$1 = function() {
                          var statearr_7598 = state_7591;
                          statearr_7598[8] = inst_7577__$1;
                          return statearr_7598;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7591__$1, 8, jobs, inst_7580);
                      } else {
                        if (state_val_7592 === 7) {
                          var inst_7587 = state_7591[2];
                          var state_7591__$1 = state_7591;
                          var statearr_7599_7711 = state_7591__$1;
                          statearr_7599_7711[2] = inst_7587;
                          statearr_7599_7711[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_7592 === 8) {
                            var inst_7577 = state_7591[8];
                            var inst_7582 = state_7591[2];
                            var state_7591__$1 = function() {
                              var statearr_7600 = state_7591;
                              statearr_7600[9] = inst_7582;
                              return statearr_7600;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7591__$1, 9, results, inst_7577);
                          } else {
                            if (state_val_7592 === 9) {
                              var inst_7584 = state_7591[2];
                              var state_7591__$1 = function() {
                                var statearr_7601 = state_7591;
                                statearr_7601[10] = inst_7584;
                                return statearr_7601;
                              }();
                              var statearr_7602_7712 = state_7591__$1;
                              statearr_7602_7712[2] = null;
                              statearr_7602_7712[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___7706, jobs, results, process, async);
        return function(switch__7029__auto__, c__7141__auto___7706, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0 = function() {
              var statearr_7606 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_7606[0] = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
              statearr_7606[1] = 1;
              return statearr_7606;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1 = function(state_7591) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7591);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7607) {
                    if (e7607 instanceof Object) {
                      var ex__7033__auto__ = e7607;
                      var statearr_7608_7713 = state_7591;
                      statearr_7608_7713[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7591);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7607;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7714 = state_7591;
                  state_7591 = G__7714;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = function(state_7591) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1.call(this, state_7591);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___7706, jobs, results, process, async);
      }();
      var state__7143__auto__ = function() {
        var statearr_7609 = f__7142__auto__.call(null);
        statearr_7609[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7706;
        return statearr_7609;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___7706, jobs, results, process, async));
  var c__7141__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto__, jobs, results, process, async) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto__, jobs, results, process, async) {
          return function(state_7647) {
            var state_val_7648 = state_7647[1];
            if (state_val_7648 === 7) {
              var inst_7643 = state_7647[2];
              var state_7647__$1 = state_7647;
              var statearr_7649_7715 = state_7647__$1;
              statearr_7649_7715[2] = inst_7643;
              statearr_7649_7715[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7648 === 20) {
                var state_7647__$1 = state_7647;
                var statearr_7650_7716 = state_7647__$1;
                statearr_7650_7716[2] = null;
                statearr_7650_7716[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_7648 === 1) {
                  var state_7647__$1 = state_7647;
                  var statearr_7651_7717 = state_7647__$1;
                  statearr_7651_7717[2] = null;
                  statearr_7651_7717[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_7648 === 4) {
                    var inst_7612 = state_7647[7];
                    var inst_7612__$1 = state_7647[2];
                    var inst_7613 = inst_7612__$1 == null;
                    var state_7647__$1 = function() {
                      var statearr_7652 = state_7647;
                      statearr_7652[7] = inst_7612__$1;
                      return statearr_7652;
                    }();
                    if (cljs.core.truth_(inst_7613)) {
                      var statearr_7653_7718 = state_7647__$1;
                      statearr_7653_7718[1] = 5;
                    } else {
                      var statearr_7654_7719 = state_7647__$1;
                      statearr_7654_7719[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7648 === 15) {
                      var inst_7625 = state_7647[8];
                      var state_7647__$1 = state_7647;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7647__$1, 18, to, inst_7625);
                    } else {
                      if (state_val_7648 === 21) {
                        var inst_7638 = state_7647[2];
                        var state_7647__$1 = state_7647;
                        var statearr_7655_7720 = state_7647__$1;
                        statearr_7655_7720[2] = inst_7638;
                        statearr_7655_7720[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_7648 === 13) {
                          var inst_7640 = state_7647[2];
                          var state_7647__$1 = function() {
                            var statearr_7656 = state_7647;
                            statearr_7656[9] = inst_7640;
                            return statearr_7656;
                          }();
                          var statearr_7657_7721 = state_7647__$1;
                          statearr_7657_7721[2] = null;
                          statearr_7657_7721[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_7648 === 6) {
                            var inst_7612 = state_7647[7];
                            var state_7647__$1 = state_7647;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7647__$1, 11, inst_7612);
                          } else {
                            if (state_val_7648 === 17) {
                              var inst_7633 = state_7647[2];
                              var state_7647__$1 = state_7647;
                              if (cljs.core.truth_(inst_7633)) {
                                var statearr_7658_7722 = state_7647__$1;
                                statearr_7658_7722[1] = 19;
                              } else {
                                var statearr_7659_7723 = state_7647__$1;
                                statearr_7659_7723[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_7648 === 3) {
                                var inst_7645 = state_7647[2];
                                var state_7647__$1 = state_7647;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7647__$1, inst_7645);
                              } else {
                                if (state_val_7648 === 12) {
                                  var inst_7622 = state_7647[10];
                                  var state_7647__$1 = state_7647;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7647__$1, 14, inst_7622);
                                } else {
                                  if (state_val_7648 === 2) {
                                    var state_7647__$1 = state_7647;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7647__$1, 4, results);
                                  } else {
                                    if (state_val_7648 === 19) {
                                      var state_7647__$1 = state_7647;
                                      var statearr_7660_7724 = state_7647__$1;
                                      statearr_7660_7724[2] = null;
                                      statearr_7660_7724[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_7648 === 11) {
                                        var inst_7622 = state_7647[2];
                                        var state_7647__$1 = function() {
                                          var statearr_7661 = state_7647;
                                          statearr_7661[10] = inst_7622;
                                          return statearr_7661;
                                        }();
                                        var statearr_7662_7725 = state_7647__$1;
                                        statearr_7662_7725[2] = null;
                                        statearr_7662_7725[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_7648 === 9) {
                                          var state_7647__$1 = state_7647;
                                          var statearr_7663_7726 = state_7647__$1;
                                          statearr_7663_7726[2] = null;
                                          statearr_7663_7726[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_7648 === 5) {
                                            var state_7647__$1 = state_7647;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_7664_7727 = state_7647__$1;
                                              statearr_7664_7727[1] = 8;
                                            } else {
                                              var statearr_7665_7728 = state_7647__$1;
                                              statearr_7665_7728[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_7648 === 14) {
                                              var inst_7625 = state_7647[8];
                                              var inst_7627 = state_7647[11];
                                              var inst_7625__$1 = state_7647[2];
                                              var inst_7626 = inst_7625__$1 == null;
                                              var inst_7627__$1 = cljs.core.not.call(null, inst_7626);
                                              var state_7647__$1 = function() {
                                                var statearr_7666 = state_7647;
                                                statearr_7666[8] = inst_7625__$1;
                                                statearr_7666[11] = inst_7627__$1;
                                                return statearr_7666;
                                              }();
                                              if (inst_7627__$1) {
                                                var statearr_7667_7729 = state_7647__$1;
                                                statearr_7667_7729[1] = 15;
                                              } else {
                                                var statearr_7668_7730 = state_7647__$1;
                                                statearr_7668_7730[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_7648 === 16) {
                                                var inst_7627 = state_7647[11];
                                                var state_7647__$1 = state_7647;
                                                var statearr_7669_7731 = state_7647__$1;
                                                statearr_7669_7731[2] = inst_7627;
                                                statearr_7669_7731[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_7648 === 10) {
                                                  var inst_7619 = state_7647[2];
                                                  var state_7647__$1 = state_7647;
                                                  var statearr_7670_7732 = state_7647__$1;
                                                  statearr_7670_7732[2] = inst_7619;
                                                  statearr_7670_7732[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_7648 === 18) {
                                                    var inst_7630 = state_7647[2];
                                                    var state_7647__$1 = state_7647;
                                                    var statearr_7671_7733 = state_7647__$1;
                                                    statearr_7671_7733[2] = inst_7630;
                                                    statearr_7671_7733[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_7648 === 8) {
                                                      var inst_7616 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_7647__$1 = state_7647;
                                                      var statearr_7672_7734 = state_7647__$1;
                                                      statearr_7672_7734[2] = inst_7616;
                                                      statearr_7672_7734[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto__, jobs, results, process, async);
        return function(switch__7029__auto__, c__7141__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0 = function() {
              var statearr_7676 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_7676[0] = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
              statearr_7676[1] = 1;
              return statearr_7676;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1 = function(state_7647) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7647);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7677) {
                    if (e7677 instanceof Object) {
                      var ex__7033__auto__ = e7677;
                      var statearr_7678_7735 = state_7647;
                      statearr_7678_7735[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7647);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7677;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7736 = state_7647;
                  state_7647 = G__7736;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__ = function(state_7647) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1.call(this, state_7647);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__7030__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto__, jobs, results, process, async);
      }();
      var state__7143__auto__ = function() {
        var statearr_7679 = f__7142__auto__.call(null);
        statearr_7679[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto__;
        return statearr_7679;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto__, jobs, results, process, async));
  return c__7141__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args7737 = [];
  var len__5727__auto___7740 = arguments.length;
  var i__5728__auto___7741 = 0;
  while (true) {
    if (i__5728__auto___7741 < len__5727__auto___7740) {
      args7737.push(arguments[i__5728__auto___7741]);
      var G__7742 = i__5728__auto___7741 + 1;
      i__5728__auto___7741 = G__7742;
      continue;
    } else {
    }
    break;
  }
  var G__7739 = args7737.length;
  switch(G__7739) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7737.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args7744 = [];
  var len__5727__auto___7747 = arguments.length;
  var i__5728__auto___7748 = 0;
  while (true) {
    if (i__5728__auto___7748 < len__5727__auto___7747) {
      args7744.push(arguments[i__5728__auto___7748]);
      var G__7749 = i__5728__auto___7748 + 1;
      i__5728__auto___7748 = G__7749;
      continue;
    } else {
    }
    break;
  }
  var G__7746 = args7744.length;
  switch(G__7746) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7744.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args7751 = [];
  var len__5727__auto___7804 = arguments.length;
  var i__5728__auto___7805 = 0;
  while (true) {
    if (i__5728__auto___7805 < len__5727__auto___7804) {
      args7751.push(arguments[i__5728__auto___7805]);
      var G__7806 = i__5728__auto___7805 + 1;
      i__5728__auto___7805 = G__7806;
      continue;
    } else {
    }
    break;
  }
  var G__7753 = args7751.length;
  switch(G__7753) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7751.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__7141__auto___7808 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___7808, tc, fc) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___7808, tc, fc) {
          return function(state_7779) {
            var state_val_7780 = state_7779[1];
            if (state_val_7780 === 7) {
              var inst_7775 = state_7779[2];
              var state_7779__$1 = state_7779;
              var statearr_7781_7809 = state_7779__$1;
              statearr_7781_7809[2] = inst_7775;
              statearr_7781_7809[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7780 === 1) {
                var state_7779__$1 = state_7779;
                var statearr_7782_7810 = state_7779__$1;
                statearr_7782_7810[2] = null;
                statearr_7782_7810[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_7780 === 4) {
                  var inst_7756 = state_7779[7];
                  var inst_7756__$1 = state_7779[2];
                  var inst_7757 = inst_7756__$1 == null;
                  var state_7779__$1 = function() {
                    var statearr_7783 = state_7779;
                    statearr_7783[7] = inst_7756__$1;
                    return statearr_7783;
                  }();
                  if (cljs.core.truth_(inst_7757)) {
                    var statearr_7784_7811 = state_7779__$1;
                    statearr_7784_7811[1] = 5;
                  } else {
                    var statearr_7785_7812 = state_7779__$1;
                    statearr_7785_7812[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_7780 === 13) {
                    var state_7779__$1 = state_7779;
                    var statearr_7786_7813 = state_7779__$1;
                    statearr_7786_7813[2] = null;
                    statearr_7786_7813[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7780 === 6) {
                      var inst_7756 = state_7779[7];
                      var inst_7762 = p.call(null, inst_7756);
                      var state_7779__$1 = state_7779;
                      if (cljs.core.truth_(inst_7762)) {
                        var statearr_7787_7814 = state_7779__$1;
                        statearr_7787_7814[1] = 9;
                      } else {
                        var statearr_7788_7815 = state_7779__$1;
                        statearr_7788_7815[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7780 === 3) {
                        var inst_7777 = state_7779[2];
                        var state_7779__$1 = state_7779;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7779__$1, inst_7777);
                      } else {
                        if (state_val_7780 === 12) {
                          var state_7779__$1 = state_7779;
                          var statearr_7789_7816 = state_7779__$1;
                          statearr_7789_7816[2] = null;
                          statearr_7789_7816[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_7780 === 2) {
                            var state_7779__$1 = state_7779;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7779__$1, 4, ch);
                          } else {
                            if (state_val_7780 === 11) {
                              var inst_7756 = state_7779[7];
                              var inst_7766 = state_7779[2];
                              var state_7779__$1 = state_7779;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7779__$1, 8, inst_7766, inst_7756);
                            } else {
                              if (state_val_7780 === 9) {
                                var state_7779__$1 = state_7779;
                                var statearr_7790_7817 = state_7779__$1;
                                statearr_7790_7817[2] = tc;
                                statearr_7790_7817[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_7780 === 5) {
                                  var inst_7759 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_7760 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_7779__$1 = function() {
                                    var statearr_7791 = state_7779;
                                    statearr_7791[8] = inst_7759;
                                    return statearr_7791;
                                  }();
                                  var statearr_7792_7818 = state_7779__$1;
                                  statearr_7792_7818[2] = inst_7760;
                                  statearr_7792_7818[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_7780 === 14) {
                                    var inst_7773 = state_7779[2];
                                    var state_7779__$1 = state_7779;
                                    var statearr_7793_7819 = state_7779__$1;
                                    statearr_7793_7819[2] = inst_7773;
                                    statearr_7793_7819[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_7780 === 10) {
                                      var state_7779__$1 = state_7779;
                                      var statearr_7794_7820 = state_7779__$1;
                                      statearr_7794_7820[2] = fc;
                                      statearr_7794_7820[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_7780 === 8) {
                                        var inst_7768 = state_7779[2];
                                        var state_7779__$1 = state_7779;
                                        if (cljs.core.truth_(inst_7768)) {
                                          var statearr_7795_7821 = state_7779__$1;
                                          statearr_7795_7821[1] = 12;
                                        } else {
                                          var statearr_7796_7822 = state_7779__$1;
                                          statearr_7796_7822[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___7808, tc, fc);
        return function(switch__7029__auto__, c__7141__auto___7808, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_7800 = [null, null, null, null, null, null, null, null, null];
              statearr_7800[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_7800[1] = 1;
              return statearr_7800;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_7779) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7779);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7801) {
                    if (e7801 instanceof Object) {
                      var ex__7033__auto__ = e7801;
                      var statearr_7802_7823 = state_7779;
                      statearr_7802_7823[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7779);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7801;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7824 = state_7779;
                  state_7779 = G__7824;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_7779) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_7779);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___7808, tc, fc);
      }();
      var state__7143__auto__ = function() {
        var statearr_7803 = f__7142__auto__.call(null);
        statearr_7803[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___7808;
        return statearr_7803;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___7808, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__7141__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto__) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto__) {
          return function(state_7871) {
            var state_val_7872 = state_7871[1];
            if (state_val_7872 === 1) {
              var inst_7857 = init;
              var state_7871__$1 = function() {
                var statearr_7873 = state_7871;
                statearr_7873[7] = inst_7857;
                return statearr_7873;
              }();
              var statearr_7874_7889 = state_7871__$1;
              statearr_7874_7889[2] = null;
              statearr_7874_7889[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7872 === 2) {
                var state_7871__$1 = state_7871;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_7871__$1, 4, ch);
              } else {
                if (state_val_7872 === 3) {
                  var inst_7869 = state_7871[2];
                  var state_7871__$1 = state_7871;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7871__$1, inst_7869);
                } else {
                  if (state_val_7872 === 4) {
                    var inst_7860 = state_7871[8];
                    var inst_7860__$1 = state_7871[2];
                    var inst_7861 = inst_7860__$1 == null;
                    var state_7871__$1 = function() {
                      var statearr_7875 = state_7871;
                      statearr_7875[8] = inst_7860__$1;
                      return statearr_7875;
                    }();
                    if (cljs.core.truth_(inst_7861)) {
                      var statearr_7876_7890 = state_7871__$1;
                      statearr_7876_7890[1] = 5;
                    } else {
                      var statearr_7877_7891 = state_7871__$1;
                      statearr_7877_7891[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7872 === 5) {
                      var inst_7857 = state_7871[7];
                      var state_7871__$1 = state_7871;
                      var statearr_7878_7892 = state_7871__$1;
                      statearr_7878_7892[2] = inst_7857;
                      statearr_7878_7892[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7872 === 6) {
                        var inst_7860 = state_7871[8];
                        var inst_7857 = state_7871[7];
                        var inst_7864 = f.call(null, inst_7857, inst_7860);
                        var inst_7857__$1 = inst_7864;
                        var state_7871__$1 = function() {
                          var statearr_7879 = state_7871;
                          statearr_7879[7] = inst_7857__$1;
                          return statearr_7879;
                        }();
                        var statearr_7880_7893 = state_7871__$1;
                        statearr_7880_7893[2] = null;
                        statearr_7880_7893[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_7872 === 7) {
                          var inst_7867 = state_7871[2];
                          var state_7871__$1 = state_7871;
                          var statearr_7881_7894 = state_7871__$1;
                          statearr_7881_7894[2] = inst_7867;
                          statearr_7881_7894[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto__);
        return function(switch__7029__auto__, c__7141__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__7030__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__7030__auto____0 = function() {
              var statearr_7885 = [null, null, null, null, null, null, null, null, null];
              statearr_7885[0] = cljs$core$async$reduce_$_state_machine__7030__auto__;
              statearr_7885[1] = 1;
              return statearr_7885;
            };
            var cljs$core$async$reduce_$_state_machine__7030__auto____1 = function(state_7871) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7871);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7886) {
                    if (e7886 instanceof Object) {
                      var ex__7033__auto__ = e7886;
                      var statearr_7887_7895 = state_7871;
                      statearr_7887_7895[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7871);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7886;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7896 = state_7871;
                  state_7871 = G__7896;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__7030__auto__ = function(state_7871) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__7030__auto____1.call(this, state_7871);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__7030__auto____0;
            cljs$core$async$reduce_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__7030__auto____1;
            return cljs$core$async$reduce_$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto__);
      }();
      var state__7143__auto__ = function() {
        var statearr_7888 = f__7142__auto__.call(null);
        statearr_7888[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto__;
        return statearr_7888;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto__));
  return c__7141__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args7897 = [];
  var len__5727__auto___7949 = arguments.length;
  var i__5728__auto___7950 = 0;
  while (true) {
    if (i__5728__auto___7950 < len__5727__auto___7949) {
      args7897.push(arguments[i__5728__auto___7950]);
      var G__7951 = i__5728__auto___7950 + 1;
      i__5728__auto___7950 = G__7951;
      continue;
    } else {
    }
    break;
  }
  var G__7899 = args7897.length;
  switch(G__7899) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7897.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__7141__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto__) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto__) {
          return function(state_7924) {
            var state_val_7925 = state_7924[1];
            if (state_val_7925 === 7) {
              var inst_7906 = state_7924[2];
              var state_7924__$1 = state_7924;
              var statearr_7926_7953 = state_7924__$1;
              statearr_7926_7953[2] = inst_7906;
              statearr_7926_7953[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_7925 === 1) {
                var inst_7900 = cljs.core.seq.call(null, coll);
                var inst_7901 = inst_7900;
                var state_7924__$1 = function() {
                  var statearr_7927 = state_7924;
                  statearr_7927[7] = inst_7901;
                  return statearr_7927;
                }();
                var statearr_7928_7954 = state_7924__$1;
                statearr_7928_7954[2] = null;
                statearr_7928_7954[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_7925 === 4) {
                  var inst_7901 = state_7924[7];
                  var inst_7904 = cljs.core.first.call(null, inst_7901);
                  var state_7924__$1 = state_7924;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_7924__$1, 7, ch, inst_7904);
                } else {
                  if (state_val_7925 === 13) {
                    var inst_7918 = state_7924[2];
                    var state_7924__$1 = state_7924;
                    var statearr_7929_7955 = state_7924__$1;
                    statearr_7929_7955[2] = inst_7918;
                    statearr_7929_7955[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_7925 === 6) {
                      var inst_7909 = state_7924[2];
                      var state_7924__$1 = state_7924;
                      if (cljs.core.truth_(inst_7909)) {
                        var statearr_7930_7956 = state_7924__$1;
                        statearr_7930_7956[1] = 8;
                      } else {
                        var statearr_7931_7957 = state_7924__$1;
                        statearr_7931_7957[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_7925 === 3) {
                        var inst_7922 = state_7924[2];
                        var state_7924__$1 = state_7924;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_7924__$1, inst_7922);
                      } else {
                        if (state_val_7925 === 12) {
                          var state_7924__$1 = state_7924;
                          var statearr_7932_7958 = state_7924__$1;
                          statearr_7932_7958[2] = null;
                          statearr_7932_7958[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_7925 === 2) {
                            var inst_7901 = state_7924[7];
                            var state_7924__$1 = state_7924;
                            if (cljs.core.truth_(inst_7901)) {
                              var statearr_7933_7959 = state_7924__$1;
                              statearr_7933_7959[1] = 4;
                            } else {
                              var statearr_7934_7960 = state_7924__$1;
                              statearr_7934_7960[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_7925 === 11) {
                              var inst_7915 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_7924__$1 = state_7924;
                              var statearr_7935_7961 = state_7924__$1;
                              statearr_7935_7961[2] = inst_7915;
                              statearr_7935_7961[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_7925 === 9) {
                                var state_7924__$1 = state_7924;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_7936_7962 = state_7924__$1;
                                  statearr_7936_7962[1] = 11;
                                } else {
                                  var statearr_7937_7963 = state_7924__$1;
                                  statearr_7937_7963[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_7925 === 5) {
                                  var inst_7901 = state_7924[7];
                                  var state_7924__$1 = state_7924;
                                  var statearr_7938_7964 = state_7924__$1;
                                  statearr_7938_7964[2] = inst_7901;
                                  statearr_7938_7964[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_7925 === 10) {
                                    var inst_7920 = state_7924[2];
                                    var state_7924__$1 = state_7924;
                                    var statearr_7939_7965 = state_7924__$1;
                                    statearr_7939_7965[2] = inst_7920;
                                    statearr_7939_7965[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_7925 === 8) {
                                      var inst_7901 = state_7924[7];
                                      var inst_7911 = cljs.core.next.call(null, inst_7901);
                                      var inst_7901__$1 = inst_7911;
                                      var state_7924__$1 = function() {
                                        var statearr_7940 = state_7924;
                                        statearr_7940[7] = inst_7901__$1;
                                        return statearr_7940;
                                      }();
                                      var statearr_7941_7966 = state_7924__$1;
                                      statearr_7941_7966[2] = null;
                                      statearr_7941_7966[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto__);
        return function(switch__7029__auto__, c__7141__auto__) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_7945 = [null, null, null, null, null, null, null, null];
              statearr_7945[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_7945[1] = 1;
              return statearr_7945;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_7924) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_7924);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e7946) {
                    if (e7946 instanceof Object) {
                      var ex__7033__auto__ = e7946;
                      var statearr_7947_7967 = state_7924;
                      statearr_7947_7967[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_7924);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e7946;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__7968 = state_7924;
                  state_7924 = G__7968;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_7924) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_7924);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto__);
      }();
      var state__7143__auto__ = function() {
        var statearr_7948 = f__7142__auto__.call(null);
        statearr_7948[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto__;
        return statearr_7948;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto__));
  return c__7141__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__5324__auto__ = _ == null ? null : _;
    var m__5325__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, _);
    } else {
      var m__5325__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__5325__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, ch);
    } else {
      var m__5325__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m);
    } else {
      var m__5325__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async8190 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async8190 = function(mult, ch, cs, meta8191) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta8191 = meta8191;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_8192, meta8191__$1) {
          var self__ = this;
          var _8192__$1 = this;
          return new cljs.core.async.t_cljs$core$async8190(self__.mult, self__.ch, self__.cs, meta8191__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_8192) {
          var self__ = this;
          var _8192__$1 = this;
          return self__.meta8191;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta8191", "meta8191", 1147085253, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async8190.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async8190.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async8190";
      cljs.core.async.t_cljs$core$async8190.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
          return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async8190");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async8190 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async8190(mult__$1, ch__$1, cs__$1, meta8191) {
          return new cljs.core.async.t_cljs$core$async8190(mult__$1, ch__$1, cs__$1, meta8191);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async8190(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__7141__auto___8411 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___8411, cs, m, dchan, dctr, done) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___8411, cs, m, dchan, dctr, done) {
          return function(state_8323) {
            var state_val_8324 = state_8323[1];
            if (state_val_8324 === 7) {
              var inst_8319 = state_8323[2];
              var state_8323__$1 = state_8323;
              var statearr_8325_8412 = state_8323__$1;
              statearr_8325_8412[2] = inst_8319;
              statearr_8325_8412[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_8324 === 20) {
                var inst_8224 = state_8323[7];
                var inst_8234 = cljs.core.first.call(null, inst_8224);
                var inst_8235 = cljs.core.nth.call(null, inst_8234, 0, null);
                var inst_8236 = cljs.core.nth.call(null, inst_8234, 1, null);
                var state_8323__$1 = function() {
                  var statearr_8326 = state_8323;
                  statearr_8326[8] = inst_8235;
                  return statearr_8326;
                }();
                if (cljs.core.truth_(inst_8236)) {
                  var statearr_8327_8413 = state_8323__$1;
                  statearr_8327_8413[1] = 22;
                } else {
                  var statearr_8328_8414 = state_8323__$1;
                  statearr_8328_8414[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_8324 === 27) {
                  var inst_8266 = state_8323[9];
                  var inst_8271 = state_8323[10];
                  var inst_8195 = state_8323[11];
                  var inst_8264 = state_8323[12];
                  var inst_8271__$1 = cljs.core._nth.call(null, inst_8264, inst_8266);
                  var inst_8272 = cljs.core.async.put_BANG_.call(null, inst_8271__$1, inst_8195, done);
                  var state_8323__$1 = function() {
                    var statearr_8329 = state_8323;
                    statearr_8329[10] = inst_8271__$1;
                    return statearr_8329;
                  }();
                  if (cljs.core.truth_(inst_8272)) {
                    var statearr_8330_8415 = state_8323__$1;
                    statearr_8330_8415[1] = 30;
                  } else {
                    var statearr_8331_8416 = state_8323__$1;
                    statearr_8331_8416[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_8324 === 1) {
                    var state_8323__$1 = state_8323;
                    var statearr_8332_8417 = state_8323__$1;
                    statearr_8332_8417[2] = null;
                    statearr_8332_8417[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_8324 === 24) {
                      var inst_8224 = state_8323[7];
                      var inst_8241 = state_8323[2];
                      var inst_8242 = cljs.core.next.call(null, inst_8224);
                      var inst_8204 = inst_8242;
                      var inst_8205 = null;
                      var inst_8206 = 0;
                      var inst_8207 = 0;
                      var state_8323__$1 = function() {
                        var statearr_8333 = state_8323;
                        statearr_8333[13] = inst_8207;
                        statearr_8333[14] = inst_8206;
                        statearr_8333[15] = inst_8204;
                        statearr_8333[16] = inst_8205;
                        statearr_8333[17] = inst_8241;
                        return statearr_8333;
                      }();
                      var statearr_8334_8418 = state_8323__$1;
                      statearr_8334_8418[2] = null;
                      statearr_8334_8418[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_8324 === 39) {
                        var state_8323__$1 = state_8323;
                        var statearr_8338_8419 = state_8323__$1;
                        statearr_8338_8419[2] = null;
                        statearr_8338_8419[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_8324 === 4) {
                          var inst_8195 = state_8323[11];
                          var inst_8195__$1 = state_8323[2];
                          var inst_8196 = inst_8195__$1 == null;
                          var state_8323__$1 = function() {
                            var statearr_8339 = state_8323;
                            statearr_8339[11] = inst_8195__$1;
                            return statearr_8339;
                          }();
                          if (cljs.core.truth_(inst_8196)) {
                            var statearr_8340_8420 = state_8323__$1;
                            statearr_8340_8420[1] = 5;
                          } else {
                            var statearr_8341_8421 = state_8323__$1;
                            statearr_8341_8421[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_8324 === 15) {
                            var inst_8207 = state_8323[13];
                            var inst_8206 = state_8323[14];
                            var inst_8204 = state_8323[15];
                            var inst_8205 = state_8323[16];
                            var inst_8220 = state_8323[2];
                            var inst_8221 = inst_8207 + 1;
                            var tmp8335 = inst_8206;
                            var tmp8336 = inst_8204;
                            var tmp8337 = inst_8205;
                            var inst_8204__$1 = tmp8336;
                            var inst_8205__$1 = tmp8337;
                            var inst_8206__$1 = tmp8335;
                            var inst_8207__$1 = inst_8221;
                            var state_8323__$1 = function() {
                              var statearr_8342 = state_8323;
                              statearr_8342[13] = inst_8207__$1;
                              statearr_8342[14] = inst_8206__$1;
                              statearr_8342[15] = inst_8204__$1;
                              statearr_8342[16] = inst_8205__$1;
                              statearr_8342[18] = inst_8220;
                              return statearr_8342;
                            }();
                            var statearr_8343_8422 = state_8323__$1;
                            statearr_8343_8422[2] = null;
                            statearr_8343_8422[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_8324 === 21) {
                              var inst_8245 = state_8323[2];
                              var state_8323__$1 = state_8323;
                              var statearr_8347_8423 = state_8323__$1;
                              statearr_8347_8423[2] = inst_8245;
                              statearr_8347_8423[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_8324 === 31) {
                                var inst_8271 = state_8323[10];
                                var inst_8275 = done.call(null, null);
                                var inst_8276 = cljs.core.async.untap_STAR_.call(null, m, inst_8271);
                                var state_8323__$1 = function() {
                                  var statearr_8348 = state_8323;
                                  statearr_8348[19] = inst_8275;
                                  return statearr_8348;
                                }();
                                var statearr_8349_8424 = state_8323__$1;
                                statearr_8349_8424[2] = inst_8276;
                                statearr_8349_8424[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_8324 === 32) {
                                  var inst_8266 = state_8323[9];
                                  var inst_8265 = state_8323[20];
                                  var inst_8263 = state_8323[21];
                                  var inst_8264 = state_8323[12];
                                  var inst_8278 = state_8323[2];
                                  var inst_8279 = inst_8266 + 1;
                                  var tmp8344 = inst_8265;
                                  var tmp8345 = inst_8263;
                                  var tmp8346 = inst_8264;
                                  var inst_8263__$1 = tmp8345;
                                  var inst_8264__$1 = tmp8346;
                                  var inst_8265__$1 = tmp8344;
                                  var inst_8266__$1 = inst_8279;
                                  var state_8323__$1 = function() {
                                    var statearr_8350 = state_8323;
                                    statearr_8350[9] = inst_8266__$1;
                                    statearr_8350[22] = inst_8278;
                                    statearr_8350[20] = inst_8265__$1;
                                    statearr_8350[21] = inst_8263__$1;
                                    statearr_8350[12] = inst_8264__$1;
                                    return statearr_8350;
                                  }();
                                  var statearr_8351_8425 = state_8323__$1;
                                  statearr_8351_8425[2] = null;
                                  statearr_8351_8425[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_8324 === 40) {
                                    var inst_8291 = state_8323[23];
                                    var inst_8295 = done.call(null, null);
                                    var inst_8296 = cljs.core.async.untap_STAR_.call(null, m, inst_8291);
                                    var state_8323__$1 = function() {
                                      var statearr_8352 = state_8323;
                                      statearr_8352[24] = inst_8295;
                                      return statearr_8352;
                                    }();
                                    var statearr_8353_8426 = state_8323__$1;
                                    statearr_8353_8426[2] = inst_8296;
                                    statearr_8353_8426[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_8324 === 33) {
                                      var inst_8282 = state_8323[25];
                                      var inst_8284 = cljs.core.chunked_seq_QMARK_.call(null, inst_8282);
                                      var state_8323__$1 = state_8323;
                                      if (inst_8284) {
                                        var statearr_8354_8427 = state_8323__$1;
                                        statearr_8354_8427[1] = 36;
                                      } else {
                                        var statearr_8355_8428 = state_8323__$1;
                                        statearr_8355_8428[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_8324 === 13) {
                                        var inst_8214 = state_8323[26];
                                        var inst_8217 = cljs.core.async.close_BANG_.call(null, inst_8214);
                                        var state_8323__$1 = state_8323;
                                        var statearr_8356_8429 = state_8323__$1;
                                        statearr_8356_8429[2] = inst_8217;
                                        statearr_8356_8429[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_8324 === 22) {
                                          var inst_8235 = state_8323[8];
                                          var inst_8238 = cljs.core.async.close_BANG_.call(null, inst_8235);
                                          var state_8323__$1 = state_8323;
                                          var statearr_8357_8430 = state_8323__$1;
                                          statearr_8357_8430[2] = inst_8238;
                                          statearr_8357_8430[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_8324 === 36) {
                                            var inst_8282 = state_8323[25];
                                            var inst_8286 = cljs.core.chunk_first.call(null, inst_8282);
                                            var inst_8287 = cljs.core.chunk_rest.call(null, inst_8282);
                                            var inst_8288 = cljs.core.count.call(null, inst_8286);
                                            var inst_8263 = inst_8287;
                                            var inst_8264 = inst_8286;
                                            var inst_8265 = inst_8288;
                                            var inst_8266 = 0;
                                            var state_8323__$1 = function() {
                                              var statearr_8358 = state_8323;
                                              statearr_8358[9] = inst_8266;
                                              statearr_8358[20] = inst_8265;
                                              statearr_8358[21] = inst_8263;
                                              statearr_8358[12] = inst_8264;
                                              return statearr_8358;
                                            }();
                                            var statearr_8359_8431 = state_8323__$1;
                                            statearr_8359_8431[2] = null;
                                            statearr_8359_8431[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_8324 === 41) {
                                              var inst_8282 = state_8323[25];
                                              var inst_8298 = state_8323[2];
                                              var inst_8299 = cljs.core.next.call(null, inst_8282);
                                              var inst_8263 = inst_8299;
                                              var inst_8264 = null;
                                              var inst_8265 = 0;
                                              var inst_8266 = 0;
                                              var state_8323__$1 = function() {
                                                var statearr_8360 = state_8323;
                                                statearr_8360[9] = inst_8266;
                                                statearr_8360[20] = inst_8265;
                                                statearr_8360[27] = inst_8298;
                                                statearr_8360[21] = inst_8263;
                                                statearr_8360[12] = inst_8264;
                                                return statearr_8360;
                                              }();
                                              var statearr_8361_8432 = state_8323__$1;
                                              statearr_8361_8432[2] = null;
                                              statearr_8361_8432[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_8324 === 43) {
                                                var state_8323__$1 = state_8323;
                                                var statearr_8362_8433 = state_8323__$1;
                                                statearr_8362_8433[2] = null;
                                                statearr_8362_8433[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_8324 === 29) {
                                                  var inst_8307 = state_8323[2];
                                                  var state_8323__$1 = state_8323;
                                                  var statearr_8363_8434 = state_8323__$1;
                                                  statearr_8363_8434[2] = inst_8307;
                                                  statearr_8363_8434[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_8324 === 44) {
                                                    var inst_8316 = state_8323[2];
                                                    var state_8323__$1 = function() {
                                                      var statearr_8364 = state_8323;
                                                      statearr_8364[28] = inst_8316;
                                                      return statearr_8364;
                                                    }();
                                                    var statearr_8365_8435 = state_8323__$1;
                                                    statearr_8365_8435[2] = null;
                                                    statearr_8365_8435[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_8324 === 6) {
                                                      var inst_8255 = state_8323[29];
                                                      var inst_8254 = cljs.core.deref.call(null, cs);
                                                      var inst_8255__$1 = cljs.core.keys.call(null, inst_8254);
                                                      var inst_8256 = cljs.core.count.call(null, inst_8255__$1);
                                                      var inst_8257 = cljs.core.reset_BANG_.call(null, dctr, inst_8256);
                                                      var inst_8262 = cljs.core.seq.call(null, inst_8255__$1);
                                                      var inst_8263 = inst_8262;
                                                      var inst_8264 = null;
                                                      var inst_8265 = 0;
                                                      var inst_8266 = 0;
                                                      var state_8323__$1 = function() {
                                                        var statearr_8366 = state_8323;
                                                        statearr_8366[29] = inst_8255__$1;
                                                        statearr_8366[9] = inst_8266;
                                                        statearr_8366[20] = inst_8265;
                                                        statearr_8366[21] = inst_8263;
                                                        statearr_8366[30] = inst_8257;
                                                        statearr_8366[12] = inst_8264;
                                                        return statearr_8366;
                                                      }();
                                                      var statearr_8367_8436 = state_8323__$1;
                                                      statearr_8367_8436[2] = null;
                                                      statearr_8367_8436[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_8324 === 28) {
                                                        var inst_8263 = state_8323[21];
                                                        var inst_8282 = state_8323[25];
                                                        var inst_8282__$1 = cljs.core.seq.call(null, inst_8263);
                                                        var state_8323__$1 = function() {
                                                          var statearr_8368 = state_8323;
                                                          statearr_8368[25] = inst_8282__$1;
                                                          return statearr_8368;
                                                        }();
                                                        if (inst_8282__$1) {
                                                          var statearr_8369_8437 = state_8323__$1;
                                                          statearr_8369_8437[1] = 33;
                                                        } else {
                                                          var statearr_8370_8438 = state_8323__$1;
                                                          statearr_8370_8438[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_8324 === 25) {
                                                          var inst_8266 = state_8323[9];
                                                          var inst_8265 = state_8323[20];
                                                          var inst_8268 = inst_8266 < inst_8265;
                                                          var inst_8269 = inst_8268;
                                                          var state_8323__$1 = state_8323;
                                                          if (cljs.core.truth_(inst_8269)) {
                                                            var statearr_8371_8439 = state_8323__$1;
                                                            statearr_8371_8439[1] = 27;
                                                          } else {
                                                            var statearr_8372_8440 = state_8323__$1;
                                                            statearr_8372_8440[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_8324 === 34) {
                                                            var state_8323__$1 = state_8323;
                                                            var statearr_8373_8441 = state_8323__$1;
                                                            statearr_8373_8441[2] = null;
                                                            statearr_8373_8441[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_8324 === 17) {
                                                              var state_8323__$1 = state_8323;
                                                              var statearr_8374_8442 = state_8323__$1;
                                                              statearr_8374_8442[2] = null;
                                                              statearr_8374_8442[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_8324 === 3) {
                                                                var inst_8321 = state_8323[2];
                                                                var state_8323__$1 = state_8323;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8323__$1, inst_8321);
                                                              } else {
                                                                if (state_val_8324 === 12) {
                                                                  var inst_8250 = state_8323[2];
                                                                  var state_8323__$1 = state_8323;
                                                                  var statearr_8375_8443 = state_8323__$1;
                                                                  statearr_8375_8443[2] = inst_8250;
                                                                  statearr_8375_8443[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_8324 === 2) {
                                                                    var state_8323__$1 = state_8323;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8323__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_8324 === 23) {
                                                                      var state_8323__$1 = state_8323;
                                                                      var statearr_8376_8444 = state_8323__$1;
                                                                      statearr_8376_8444[2] = null;
                                                                      statearr_8376_8444[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_8324 === 35) {
                                                                        var inst_8305 = state_8323[2];
                                                                        var state_8323__$1 = state_8323;
                                                                        var statearr_8377_8445 = state_8323__$1;
                                                                        statearr_8377_8445[2] = inst_8305;
                                                                        statearr_8377_8445[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_8324 === 19) {
                                                                          var inst_8224 = state_8323[7];
                                                                          var inst_8228 = cljs.core.chunk_first.call(null, inst_8224);
                                                                          var inst_8229 = cljs.core.chunk_rest.call(null, inst_8224);
                                                                          var inst_8230 = cljs.core.count.call(null, inst_8228);
                                                                          var inst_8204 = inst_8229;
                                                                          var inst_8205 = inst_8228;
                                                                          var inst_8206 = inst_8230;
                                                                          var inst_8207 = 0;
                                                                          var state_8323__$1 = function() {
                                                                            var statearr_8378 = state_8323;
                                                                            statearr_8378[13] = inst_8207;
                                                                            statearr_8378[14] = inst_8206;
                                                                            statearr_8378[15] = inst_8204;
                                                                            statearr_8378[16] = inst_8205;
                                                                            return statearr_8378;
                                                                          }();
                                                                          var statearr_8379_8446 = state_8323__$1;
                                                                          statearr_8379_8446[2] = null;
                                                                          statearr_8379_8446[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_8324 === 11) {
                                                                            var inst_8224 = state_8323[7];
                                                                            var inst_8204 = state_8323[15];
                                                                            var inst_8224__$1 = cljs.core.seq.call(null, inst_8204);
                                                                            var state_8323__$1 = function() {
                                                                              var statearr_8380 = state_8323;
                                                                              statearr_8380[7] = inst_8224__$1;
                                                                              return statearr_8380;
                                                                            }();
                                                                            if (inst_8224__$1) {
                                                                              var statearr_8381_8447 = state_8323__$1;
                                                                              statearr_8381_8447[1] = 16;
                                                                            } else {
                                                                              var statearr_8382_8448 = state_8323__$1;
                                                                              statearr_8382_8448[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_8324 === 9) {
                                                                              var inst_8252 = state_8323[2];
                                                                              var state_8323__$1 = state_8323;
                                                                              var statearr_8383_8449 = state_8323__$1;
                                                                              statearr_8383_8449[2] = inst_8252;
                                                                              statearr_8383_8449[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_8324 === 5) {
                                                                                var inst_8202 = cljs.core.deref.call(null, cs);
                                                                                var inst_8203 = cljs.core.seq.call(null, inst_8202);
                                                                                var inst_8204 = inst_8203;
                                                                                var inst_8205 = null;
                                                                                var inst_8206 = 0;
                                                                                var inst_8207 = 0;
                                                                                var state_8323__$1 = function() {
                                                                                  var statearr_8384 = state_8323;
                                                                                  statearr_8384[13] = inst_8207;
                                                                                  statearr_8384[14] = inst_8206;
                                                                                  statearr_8384[15] = inst_8204;
                                                                                  statearr_8384[16] = inst_8205;
                                                                                  return statearr_8384;
                                                                                }();
                                                                                var statearr_8385_8450 = state_8323__$1;
                                                                                statearr_8385_8450[2] = null;
                                                                                statearr_8385_8450[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_8324 === 14) {
                                                                                  var state_8323__$1 = state_8323;
                                                                                  var statearr_8386_8451 = state_8323__$1;
                                                                                  statearr_8386_8451[2] = null;
                                                                                  statearr_8386_8451[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_8324 === 45) {
                                                                                    var inst_8313 = state_8323[2];
                                                                                    var state_8323__$1 = state_8323;
                                                                                    var statearr_8387_8452 = state_8323__$1;
                                                                                    statearr_8387_8452[2] = inst_8313;
                                                                                    statearr_8387_8452[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_8324 === 26) {
                                                                                      var inst_8255 = state_8323[29];
                                                                                      var inst_8309 = state_8323[2];
                                                                                      var inst_8310 = cljs.core.seq.call(null, inst_8255);
                                                                                      var state_8323__$1 = function() {
                                                                                        var statearr_8388 = state_8323;
                                                                                        statearr_8388[31] = inst_8309;
                                                                                        return statearr_8388;
                                                                                      }();
                                                                                      if (inst_8310) {
                                                                                        var statearr_8389_8453 = state_8323__$1;
                                                                                        statearr_8389_8453[1] = 42;
                                                                                      } else {
                                                                                        var statearr_8390_8454 = state_8323__$1;
                                                                                        statearr_8390_8454[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_8324 === 16) {
                                                                                        var inst_8224 = state_8323[7];
                                                                                        var inst_8226 = cljs.core.chunked_seq_QMARK_.call(null, inst_8224);
                                                                                        var state_8323__$1 = state_8323;
                                                                                        if (inst_8226) {
                                                                                          var statearr_8391_8455 = state_8323__$1;
                                                                                          statearr_8391_8455[1] = 19;
                                                                                        } else {
                                                                                          var statearr_8392_8456 = state_8323__$1;
                                                                                          statearr_8392_8456[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_8324 === 38) {
                                                                                          var inst_8302 = state_8323[2];
                                                                                          var state_8323__$1 = state_8323;
                                                                                          var statearr_8393_8457 = state_8323__$1;
                                                                                          statearr_8393_8457[2] = inst_8302;
                                                                                          statearr_8393_8457[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_8324 === 30) {
                                                                                            var state_8323__$1 = state_8323;
                                                                                            var statearr_8394_8458 = state_8323__$1;
                                                                                            statearr_8394_8458[2] = null;
                                                                                            statearr_8394_8458[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_8324 === 10) {
                                                                                              var inst_8207 = state_8323[13];
                                                                                              var inst_8205 = state_8323[16];
                                                                                              var inst_8213 = cljs.core._nth.call(null, inst_8205, inst_8207);
                                                                                              var inst_8214 = cljs.core.nth.call(null, inst_8213, 0, null);
                                                                                              var inst_8215 = cljs.core.nth.call(null, inst_8213, 1, null);
                                                                                              var state_8323__$1 = function() {
                                                                                                var statearr_8395 = state_8323;
                                                                                                statearr_8395[26] = inst_8214;
                                                                                                return statearr_8395;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_8215)) {
                                                                                                var statearr_8396_8459 = state_8323__$1;
                                                                                                statearr_8396_8459[1] = 13;
                                                                                              } else {
                                                                                                var statearr_8397_8460 = state_8323__$1;
                                                                                                statearr_8397_8460[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_8324 === 18) {
                                                                                                var inst_8248 = state_8323[2];
                                                                                                var state_8323__$1 = state_8323;
                                                                                                var statearr_8398_8461 = state_8323__$1;
                                                                                                statearr_8398_8461[2] = inst_8248;
                                                                                                statearr_8398_8461[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_8324 === 42) {
                                                                                                  var state_8323__$1 = state_8323;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8323__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_8324 === 37) {
                                                                                                    var inst_8195 = state_8323[11];
                                                                                                    var inst_8291 = state_8323[23];
                                                                                                    var inst_8282 = state_8323[25];
                                                                                                    var inst_8291__$1 = cljs.core.first.call(null, inst_8282);
                                                                                                    var inst_8292 = cljs.core.async.put_BANG_.call(null, inst_8291__$1, inst_8195, done);
                                                                                                    var state_8323__$1 = function() {
                                                                                                      var statearr_8399 = state_8323;
                                                                                                      statearr_8399[23] = inst_8291__$1;
                                                                                                      return statearr_8399;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_8292)) {
                                                                                                      var statearr_8400_8462 = state_8323__$1;
                                                                                                      statearr_8400_8462[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_8401_8463 = state_8323__$1;
                                                                                                      statearr_8401_8463[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_8324 === 8) {
                                                                                                      var inst_8207 = state_8323[13];
                                                                                                      var inst_8206 = state_8323[14];
                                                                                                      var inst_8209 = inst_8207 < inst_8206;
                                                                                                      var inst_8210 = inst_8209;
                                                                                                      var state_8323__$1 = state_8323;
                                                                                                      if (cljs.core.truth_(inst_8210)) {
                                                                                                        var statearr_8402_8464 = state_8323__$1;
                                                                                                        statearr_8402_8464[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_8403_8465 = state_8323__$1;
                                                                                                        statearr_8403_8465[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___8411, cs, m, dchan, dctr, done);
        return function(switch__7029__auto__, c__7141__auto___8411, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__7030__auto__ = null;
            var cljs$core$async$mult_$_state_machine__7030__auto____0 = function() {
              var statearr_8407 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8407[0] = cljs$core$async$mult_$_state_machine__7030__auto__;
              statearr_8407[1] = 1;
              return statearr_8407;
            };
            var cljs$core$async$mult_$_state_machine__7030__auto____1 = function(state_8323) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_8323);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e8408) {
                    if (e8408 instanceof Object) {
                      var ex__7033__auto__ = e8408;
                      var statearr_8409_8466 = state_8323;
                      statearr_8409_8466[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8323);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8408;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8467 = state_8323;
                  state_8323 = G__8467;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__7030__auto__ = function(state_8323) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__7030__auto____1.call(this, state_8323);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__7030__auto____0;
            cljs$core$async$mult_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__7030__auto____1;
            return cljs$core$async$mult_$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___8411, cs, m, dchan, dctr, done);
      }();
      var state__7143__auto__ = function() {
        var statearr_8410 = f__7142__auto__.call(null);
        statearr_8410[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___8411;
        return statearr_8410;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___8411, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args8468 = [];
  var len__5727__auto___8471 = arguments.length;
  var i__5728__auto___8472 = 0;
  while (true) {
    if (i__5728__auto___8472 < len__5727__auto___8471) {
      args8468.push(arguments[i__5728__auto___8472]);
      var G__8473 = i__5728__auto___8472 + 1;
      i__5728__auto___8472 = G__8473;
      continue;
    } else {
    }
    break;
  }
  var G__8470 = args8468.length;
  switch(G__8470) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8468.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, ch);
    } else {
      var m__5325__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, ch);
    } else {
      var m__5325__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m);
    } else {
      var m__5325__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, state_map);
    } else {
      var m__5325__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__5324__auto__ = m == null ? null : m;
    var m__5325__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, m, mode);
    } else {
      var m__5325__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___8485 = arguments.length;
  var i__5728__auto___8486 = 0;
  while (true) {
    if (i__5728__auto___8486 < len__5727__auto___8485) {
      args__5734__auto__.push(arguments[i__5728__auto___8486]);
      var G__8487 = i__5728__auto___8486 + 1;
      i__5728__auto___8486 = G__8487;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 3 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5735__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__8479) {
  var map__8480 = p__8479;
  var map__8480__$1 = (!(map__8480 == null) ? map__8480.cljs$lang$protocol_mask$partition0$ & 64 || map__8480.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8480) : map__8480;
  var opts = map__8480__$1;
  var statearr_8482_8488 = state;
  statearr_8482_8488[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4425__auto__ = cljs.core.async.do_alts.call(null, function(map__8480, map__8480__$1, opts) {
    return function(val) {
      var statearr_8483_8489 = state;
      statearr_8483_8489[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__8480, map__8480__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var cb = temp__4425__auto__;
    var statearr_8484_8490 = state;
    statearr_8484_8490[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq8475) {
  var G__8476 = cljs.core.first.call(null, seq8475);
  var seq8475__$1 = cljs.core.next.call(null, seq8475);
  var G__8477 = cljs.core.first.call(null, seq8475__$1);
  var seq8475__$2 = cljs.core.next.call(null, seq8475__$1);
  var G__8478 = cljs.core.first.call(null, seq8475__$2);
  var seq8475__$3 = cljs.core.next.call(null, seq8475__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8476, G__8477, G__8478, seq8475__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async8654 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async8654 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta8655) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta8655 = meta8655;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_8656, meta8655__$1) {
          var self__ = this;
          var _8656__$1 = this;
          return new cljs.core.async.t_cljs$core$async8654(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta8655__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_8656) {
          var self__ = this;
          var _8656__$1 = this;
          return self__.meta8655;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta8655", "meta8655", 371552465, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async8654.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async8654.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async8654";
      cljs.core.async.t_cljs$core$async8654.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
          return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async8654");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async8654 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async8654(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta8655) {
          return new cljs.core.async.t_cljs$core$async8654(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta8655);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async8654(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__7141__auto___8817 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_8754) {
            var state_val_8755 = state_8754[1];
            if (state_val_8755 === 7) {
              var inst_8672 = state_8754[2];
              var state_8754__$1 = state_8754;
              var statearr_8756_8818 = state_8754__$1;
              statearr_8756_8818[2] = inst_8672;
              statearr_8756_8818[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_8755 === 20) {
                var inst_8684 = state_8754[7];
                var state_8754__$1 = state_8754;
                var statearr_8757_8819 = state_8754__$1;
                statearr_8757_8819[2] = inst_8684;
                statearr_8757_8819[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_8755 === 27) {
                  var state_8754__$1 = state_8754;
                  var statearr_8758_8820 = state_8754__$1;
                  statearr_8758_8820[2] = null;
                  statearr_8758_8820[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_8755 === 1) {
                    var inst_8660 = state_8754[8];
                    var inst_8660__$1 = calc_state.call(null);
                    var inst_8662 = inst_8660__$1 == null;
                    var inst_8663 = cljs.core.not.call(null, inst_8662);
                    var state_8754__$1 = function() {
                      var statearr_8759 = state_8754;
                      statearr_8759[8] = inst_8660__$1;
                      return statearr_8759;
                    }();
                    if (inst_8663) {
                      var statearr_8760_8821 = state_8754__$1;
                      statearr_8760_8821[1] = 2;
                    } else {
                      var statearr_8761_8822 = state_8754__$1;
                      statearr_8761_8822[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_8755 === 24) {
                      var inst_8714 = state_8754[9];
                      var inst_8728 = state_8754[10];
                      var inst_8707 = state_8754[11];
                      var inst_8728__$1 = inst_8707.call(null, inst_8714);
                      var state_8754__$1 = function() {
                        var statearr_8762 = state_8754;
                        statearr_8762[10] = inst_8728__$1;
                        return statearr_8762;
                      }();
                      if (cljs.core.truth_(inst_8728__$1)) {
                        var statearr_8763_8823 = state_8754__$1;
                        statearr_8763_8823[1] = 29;
                      } else {
                        var statearr_8764_8824 = state_8754__$1;
                        statearr_8764_8824[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_8755 === 4) {
                        var inst_8675 = state_8754[2];
                        var state_8754__$1 = state_8754;
                        if (cljs.core.truth_(inst_8675)) {
                          var statearr_8765_8825 = state_8754__$1;
                          statearr_8765_8825[1] = 8;
                        } else {
                          var statearr_8766_8826 = state_8754__$1;
                          statearr_8766_8826[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_8755 === 15) {
                          var inst_8701 = state_8754[2];
                          var state_8754__$1 = state_8754;
                          if (cljs.core.truth_(inst_8701)) {
                            var statearr_8767_8827 = state_8754__$1;
                            statearr_8767_8827[1] = 19;
                          } else {
                            var statearr_8768_8828 = state_8754__$1;
                            statearr_8768_8828[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_8755 === 21) {
                            var inst_8706 = state_8754[12];
                            var inst_8706__$1 = state_8754[2];
                            var inst_8707 = cljs.core.get.call(null, inst_8706__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_8708 = cljs.core.get.call(null, inst_8706__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_8709 = cljs.core.get.call(null, inst_8706__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_8754__$1 = function() {
                              var statearr_8769 = state_8754;
                              statearr_8769[12] = inst_8706__$1;
                              statearr_8769[11] = inst_8707;
                              statearr_8769[13] = inst_8708;
                              return statearr_8769;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_8754__$1, 22, inst_8709);
                          } else {
                            if (state_val_8755 === 31) {
                              var inst_8736 = state_8754[2];
                              var state_8754__$1 = state_8754;
                              if (cljs.core.truth_(inst_8736)) {
                                var statearr_8770_8829 = state_8754__$1;
                                statearr_8770_8829[1] = 32;
                              } else {
                                var statearr_8771_8830 = state_8754__$1;
                                statearr_8771_8830[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_8755 === 32) {
                                var inst_8713 = state_8754[14];
                                var state_8754__$1 = state_8754;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8754__$1, 35, out, inst_8713);
                              } else {
                                if (state_val_8755 === 33) {
                                  var inst_8706 = state_8754[12];
                                  var inst_8684 = inst_8706;
                                  var state_8754__$1 = function() {
                                    var statearr_8772 = state_8754;
                                    statearr_8772[7] = inst_8684;
                                    return statearr_8772;
                                  }();
                                  var statearr_8773_8831 = state_8754__$1;
                                  statearr_8773_8831[2] = null;
                                  statearr_8773_8831[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_8755 === 13) {
                                    var inst_8684 = state_8754[7];
                                    var inst_8691 = inst_8684.cljs$lang$protocol_mask$partition0$;
                                    var inst_8692 = inst_8691 & 64;
                                    var inst_8693 = inst_8684.cljs$core$ISeq$;
                                    var inst_8694 = inst_8692 || inst_8693;
                                    var state_8754__$1 = state_8754;
                                    if (cljs.core.truth_(inst_8694)) {
                                      var statearr_8774_8832 = state_8754__$1;
                                      statearr_8774_8832[1] = 16;
                                    } else {
                                      var statearr_8775_8833 = state_8754__$1;
                                      statearr_8775_8833[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_8755 === 22) {
                                      var inst_8714 = state_8754[9];
                                      var inst_8713 = state_8754[14];
                                      var inst_8712 = state_8754[2];
                                      var inst_8713__$1 = cljs.core.nth.call(null, inst_8712, 0, null);
                                      var inst_8714__$1 = cljs.core.nth.call(null, inst_8712, 1, null);
                                      var inst_8715 = inst_8713__$1 == null;
                                      var inst_8716 = cljs.core._EQ_.call(null, inst_8714__$1, change);
                                      var inst_8717 = inst_8715 || inst_8716;
                                      var state_8754__$1 = function() {
                                        var statearr_8776 = state_8754;
                                        statearr_8776[9] = inst_8714__$1;
                                        statearr_8776[14] = inst_8713__$1;
                                        return statearr_8776;
                                      }();
                                      if (cljs.core.truth_(inst_8717)) {
                                        var statearr_8777_8834 = state_8754__$1;
                                        statearr_8777_8834[1] = 23;
                                      } else {
                                        var statearr_8778_8835 = state_8754__$1;
                                        statearr_8778_8835[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_8755 === 36) {
                                        var inst_8706 = state_8754[12];
                                        var inst_8684 = inst_8706;
                                        var state_8754__$1 = function() {
                                          var statearr_8779 = state_8754;
                                          statearr_8779[7] = inst_8684;
                                          return statearr_8779;
                                        }();
                                        var statearr_8780_8836 = state_8754__$1;
                                        statearr_8780_8836[2] = null;
                                        statearr_8780_8836[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_8755 === 29) {
                                          var inst_8728 = state_8754[10];
                                          var state_8754__$1 = state_8754;
                                          var statearr_8781_8837 = state_8754__$1;
                                          statearr_8781_8837[2] = inst_8728;
                                          statearr_8781_8837[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_8755 === 6) {
                                            var state_8754__$1 = state_8754;
                                            var statearr_8782_8838 = state_8754__$1;
                                            statearr_8782_8838[2] = false;
                                            statearr_8782_8838[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_8755 === 28) {
                                              var inst_8724 = state_8754[2];
                                              var inst_8725 = calc_state.call(null);
                                              var inst_8684 = inst_8725;
                                              var state_8754__$1 = function() {
                                                var statearr_8783 = state_8754;
                                                statearr_8783[15] = inst_8724;
                                                statearr_8783[7] = inst_8684;
                                                return statearr_8783;
                                              }();
                                              var statearr_8784_8839 = state_8754__$1;
                                              statearr_8784_8839[2] = null;
                                              statearr_8784_8839[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_8755 === 25) {
                                                var inst_8750 = state_8754[2];
                                                var state_8754__$1 = state_8754;
                                                var statearr_8785_8840 = state_8754__$1;
                                                statearr_8785_8840[2] = inst_8750;
                                                statearr_8785_8840[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_8755 === 34) {
                                                  var inst_8748 = state_8754[2];
                                                  var state_8754__$1 = state_8754;
                                                  var statearr_8786_8841 = state_8754__$1;
                                                  statearr_8786_8841[2] = inst_8748;
                                                  statearr_8786_8841[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_8755 === 17) {
                                                    var state_8754__$1 = state_8754;
                                                    var statearr_8787_8842 = state_8754__$1;
                                                    statearr_8787_8842[2] = false;
                                                    statearr_8787_8842[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_8755 === 3) {
                                                      var state_8754__$1 = state_8754;
                                                      var statearr_8788_8843 = state_8754__$1;
                                                      statearr_8788_8843[2] = false;
                                                      statearr_8788_8843[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_8755 === 12) {
                                                        var inst_8752 = state_8754[2];
                                                        var state_8754__$1 = state_8754;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8754__$1, inst_8752);
                                                      } else {
                                                        if (state_val_8755 === 2) {
                                                          var inst_8660 = state_8754[8];
                                                          var inst_8665 = inst_8660.cljs$lang$protocol_mask$partition0$;
                                                          var inst_8666 = inst_8665 & 64;
                                                          var inst_8667 = inst_8660.cljs$core$ISeq$;
                                                          var inst_8668 = inst_8666 || inst_8667;
                                                          var state_8754__$1 = state_8754;
                                                          if (cljs.core.truth_(inst_8668)) {
                                                            var statearr_8789_8844 = state_8754__$1;
                                                            statearr_8789_8844[1] = 5;
                                                          } else {
                                                            var statearr_8790_8845 = state_8754__$1;
                                                            statearr_8790_8845[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_8755 === 23) {
                                                            var inst_8713 = state_8754[14];
                                                            var inst_8719 = inst_8713 == null;
                                                            var state_8754__$1 = state_8754;
                                                            if (cljs.core.truth_(inst_8719)) {
                                                              var statearr_8791_8846 = state_8754__$1;
                                                              statearr_8791_8846[1] = 26;
                                                            } else {
                                                              var statearr_8792_8847 = state_8754__$1;
                                                              statearr_8792_8847[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_8755 === 35) {
                                                              var inst_8739 = state_8754[2];
                                                              var state_8754__$1 = state_8754;
                                                              if (cljs.core.truth_(inst_8739)) {
                                                                var statearr_8793_8848 = state_8754__$1;
                                                                statearr_8793_8848[1] = 36;
                                                              } else {
                                                                var statearr_8794_8849 = state_8754__$1;
                                                                statearr_8794_8849[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_8755 === 19) {
                                                                var inst_8684 = state_8754[7];
                                                                var inst_8703 = cljs.core.apply.call(null, cljs.core.hash_map, inst_8684);
                                                                var state_8754__$1 = state_8754;
                                                                var statearr_8795_8850 = state_8754__$1;
                                                                statearr_8795_8850[2] = inst_8703;
                                                                statearr_8795_8850[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_8755 === 11) {
                                                                  var inst_8684 = state_8754[7];
                                                                  var inst_8688 = inst_8684 == null;
                                                                  var inst_8689 = cljs.core.not.call(null, inst_8688);
                                                                  var state_8754__$1 = state_8754;
                                                                  if (inst_8689) {
                                                                    var statearr_8796_8851 = state_8754__$1;
                                                                    statearr_8796_8851[1] = 13;
                                                                  } else {
                                                                    var statearr_8797_8852 = state_8754__$1;
                                                                    statearr_8797_8852[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_8755 === 9) {
                                                                    var inst_8660 = state_8754[8];
                                                                    var state_8754__$1 = state_8754;
                                                                    var statearr_8798_8853 = state_8754__$1;
                                                                    statearr_8798_8853[2] = inst_8660;
                                                                    statearr_8798_8853[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_8755 === 5) {
                                                                      var state_8754__$1 = state_8754;
                                                                      var statearr_8799_8854 = state_8754__$1;
                                                                      statearr_8799_8854[2] = true;
                                                                      statearr_8799_8854[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_8755 === 14) {
                                                                        var state_8754__$1 = state_8754;
                                                                        var statearr_8800_8855 = state_8754__$1;
                                                                        statearr_8800_8855[2] = false;
                                                                        statearr_8800_8855[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_8755 === 26) {
                                                                          var inst_8714 = state_8754[9];
                                                                          var inst_8721 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_8714);
                                                                          var state_8754__$1 = state_8754;
                                                                          var statearr_8801_8856 = state_8754__$1;
                                                                          statearr_8801_8856[2] = inst_8721;
                                                                          statearr_8801_8856[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_8755 === 16) {
                                                                            var state_8754__$1 = state_8754;
                                                                            var statearr_8802_8857 = state_8754__$1;
                                                                            statearr_8802_8857[2] = true;
                                                                            statearr_8802_8857[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_8755 === 38) {
                                                                              var inst_8744 = state_8754[2];
                                                                              var state_8754__$1 = state_8754;
                                                                              var statearr_8803_8858 = state_8754__$1;
                                                                              statearr_8803_8858[2] = inst_8744;
                                                                              statearr_8803_8858[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_8755 === 30) {
                                                                                var inst_8714 = state_8754[9];
                                                                                var inst_8707 = state_8754[11];
                                                                                var inst_8708 = state_8754[13];
                                                                                var inst_8731 = cljs.core.empty_QMARK_.call(null, inst_8707);
                                                                                var inst_8732 = inst_8708.call(null, inst_8714);
                                                                                var inst_8733 = cljs.core.not.call(null, inst_8732);
                                                                                var inst_8734 = inst_8731 && inst_8733;
                                                                                var state_8754__$1 = state_8754;
                                                                                var statearr_8804_8859 = state_8754__$1;
                                                                                statearr_8804_8859[2] = inst_8734;
                                                                                statearr_8804_8859[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_8755 === 10) {
                                                                                  var inst_8660 = state_8754[8];
                                                                                  var inst_8680 = state_8754[2];
                                                                                  var inst_8681 = cljs.core.get.call(null, inst_8680, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_8682 = cljs.core.get.call(null, inst_8680, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_8683 = cljs.core.get.call(null, inst_8680, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_8684 = inst_8660;
                                                                                  var state_8754__$1 = function() {
                                                                                    var statearr_8805 = state_8754;
                                                                                    statearr_8805[16] = inst_8681;
                                                                                    statearr_8805[17] = inst_8683;
                                                                                    statearr_8805[7] = inst_8684;
                                                                                    statearr_8805[18] = inst_8682;
                                                                                    return statearr_8805;
                                                                                  }();
                                                                                  var statearr_8806_8860 = state_8754__$1;
                                                                                  statearr_8806_8860[2] = null;
                                                                                  statearr_8806_8860[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_8755 === 18) {
                                                                                    var inst_8698 = state_8754[2];
                                                                                    var state_8754__$1 = state_8754;
                                                                                    var statearr_8807_8861 = state_8754__$1;
                                                                                    statearr_8807_8861[2] = inst_8698;
                                                                                    statearr_8807_8861[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_8755 === 37) {
                                                                                      var state_8754__$1 = state_8754;
                                                                                      var statearr_8808_8862 = state_8754__$1;
                                                                                      statearr_8808_8862[2] = null;
                                                                                      statearr_8808_8862[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_8755 === 8) {
                                                                                        var inst_8660 = state_8754[8];
                                                                                        var inst_8677 = cljs.core.apply.call(null, cljs.core.hash_map, inst_8660);
                                                                                        var state_8754__$1 = state_8754;
                                                                                        var statearr_8809_8863 = state_8754__$1;
                                                                                        statearr_8809_8863[2] = inst_8677;
                                                                                        statearr_8809_8863[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__7029__auto__, c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__7030__auto__ = null;
            var cljs$core$async$mix_$_state_machine__7030__auto____0 = function() {
              var statearr_8813 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8813[0] = cljs$core$async$mix_$_state_machine__7030__auto__;
              statearr_8813[1] = 1;
              return statearr_8813;
            };
            var cljs$core$async$mix_$_state_machine__7030__auto____1 = function(state_8754) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_8754);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e8814) {
                    if (e8814 instanceof Object) {
                      var ex__7033__auto__ = e8814;
                      var statearr_8815_8864 = state_8754;
                      statearr_8815_8864[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8754);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8814;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__8865 = state_8754;
                  state_8754 = G__8865;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__7030__auto__ = function(state_8754) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__7030__auto____1.call(this, state_8754);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__7030__auto____0;
            cljs$core$async$mix_$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__7030__auto____1;
            return cljs$core$async$mix_$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__7143__auto__ = function() {
        var statearr_8816 = f__7142__auto__.call(null);
        statearr_8816[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___8817;
        return statearr_8816;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___8817, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__5324__auto__ = p == null ? null : p;
    var m__5325__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__5325__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__5324__auto__ = p == null ? null : p;
    var m__5325__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, p, v, ch);
    } else {
      var m__5325__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args8866 = [];
  var len__5727__auto___8869 = arguments.length;
  var i__5728__auto___8870 = 0;
  while (true) {
    if (i__5728__auto___8870 < len__5727__auto___8869) {
      args8866.push(arguments[i__5728__auto___8870]);
      var G__8871 = i__5728__auto___8870 + 1;
      i__5728__auto___8870 = G__8871;
      continue;
    } else {
    }
    break;
  }
  var G__8868 = args8866.length;
  switch(G__8868) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8866.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__5324__auto__ = p == null ? null : p;
    var m__5325__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, p);
    } else {
      var m__5325__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__5324__auto__ = p == null ? null : p;
    var m__5325__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__5324__auto__)];
    if (!(m__5325__auto__ == null)) {
      return m__5325__auto__.call(null, p, v);
    } else {
      var m__5325__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__5325__auto____$1 == null)) {
        return m__5325__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args8874 = [];
  var len__5727__auto___8999 = arguments.length;
  var i__5728__auto___9000 = 0;
  while (true) {
    if (i__5728__auto___9000 < len__5727__auto___8999) {
      args8874.push(arguments[i__5728__auto___9000]);
      var G__9001 = i__5728__auto___9000 + 1;
      i__5728__auto___9000 = G__9001;
      continue;
    } else {
    }
    break;
  }
  var G__8876 = args8874.length;
  switch(G__8876) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8874.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4669__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4669__auto__)) {
        return or__4669__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4669__auto__, mults) {
          return function(p1__8873_SHARP_) {
            if (cljs.core.truth_(p1__8873_SHARP_.call(null, topic))) {
              return p1__8873_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__8873_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4669__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async8877 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async8877 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta8878) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta8878 = meta8878;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_8879, meta8878__$1) {
          var self__ = this;
          var _8879__$1 = this;
          return new cljs.core.async.t_cljs$core$async8877(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta8878__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_8879) {
          var self__ = this;
          var _8879__$1 = this;
          return self__.meta8878;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var m = temp__4425__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta8878", "meta8878", 551456299, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async8877.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async8877.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async8877";
      cljs.core.async.t_cljs$core$async8877.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
          return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async8877");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async8877 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async8877(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta8878) {
          return new cljs.core.async.t_cljs$core$async8877(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta8878);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async8877(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__7141__auto___9003 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9003, mults, ensure_mult, p) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9003, mults, ensure_mult, p) {
          return function(state_8951) {
            var state_val_8952 = state_8951[1];
            if (state_val_8952 === 7) {
              var inst_8947 = state_8951[2];
              var state_8951__$1 = state_8951;
              var statearr_8953_9004 = state_8951__$1;
              statearr_8953_9004[2] = inst_8947;
              statearr_8953_9004[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_8952 === 20) {
                var state_8951__$1 = state_8951;
                var statearr_8954_9005 = state_8951__$1;
                statearr_8954_9005[2] = null;
                statearr_8954_9005[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_8952 === 1) {
                  var state_8951__$1 = state_8951;
                  var statearr_8955_9006 = state_8951__$1;
                  statearr_8955_9006[2] = null;
                  statearr_8955_9006[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_8952 === 24) {
                    var inst_8930 = state_8951[7];
                    var inst_8939 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_8930);
                    var state_8951__$1 = state_8951;
                    var statearr_8956_9007 = state_8951__$1;
                    statearr_8956_9007[2] = inst_8939;
                    statearr_8956_9007[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_8952 === 4) {
                      var inst_8882 = state_8951[8];
                      var inst_8882__$1 = state_8951[2];
                      var inst_8883 = inst_8882__$1 == null;
                      var state_8951__$1 = function() {
                        var statearr_8957 = state_8951;
                        statearr_8957[8] = inst_8882__$1;
                        return statearr_8957;
                      }();
                      if (cljs.core.truth_(inst_8883)) {
                        var statearr_8958_9008 = state_8951__$1;
                        statearr_8958_9008[1] = 5;
                      } else {
                        var statearr_8959_9009 = state_8951__$1;
                        statearr_8959_9009[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_8952 === 15) {
                        var inst_8924 = state_8951[2];
                        var state_8951__$1 = state_8951;
                        var statearr_8960_9010 = state_8951__$1;
                        statearr_8960_9010[2] = inst_8924;
                        statearr_8960_9010[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_8952 === 21) {
                          var inst_8944 = state_8951[2];
                          var state_8951__$1 = function() {
                            var statearr_8961 = state_8951;
                            statearr_8961[9] = inst_8944;
                            return statearr_8961;
                          }();
                          var statearr_8962_9011 = state_8951__$1;
                          statearr_8962_9011[2] = null;
                          statearr_8962_9011[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_8952 === 13) {
                            var inst_8906 = state_8951[10];
                            var inst_8908 = cljs.core.chunked_seq_QMARK_.call(null, inst_8906);
                            var state_8951__$1 = state_8951;
                            if (inst_8908) {
                              var statearr_8963_9012 = state_8951__$1;
                              statearr_8963_9012[1] = 16;
                            } else {
                              var statearr_8964_9013 = state_8951__$1;
                              statearr_8964_9013[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_8952 === 22) {
                              var inst_8936 = state_8951[2];
                              var state_8951__$1 = state_8951;
                              if (cljs.core.truth_(inst_8936)) {
                                var statearr_8965_9014 = state_8951__$1;
                                statearr_8965_9014[1] = 23;
                              } else {
                                var statearr_8966_9015 = state_8951__$1;
                                statearr_8966_9015[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_8952 === 6) {
                                var inst_8932 = state_8951[11];
                                var inst_8930 = state_8951[7];
                                var inst_8882 = state_8951[8];
                                var inst_8930__$1 = topic_fn.call(null, inst_8882);
                                var inst_8931 = cljs.core.deref.call(null, mults);
                                var inst_8932__$1 = cljs.core.get.call(null, inst_8931, inst_8930__$1);
                                var state_8951__$1 = function() {
                                  var statearr_8967 = state_8951;
                                  statearr_8967[11] = inst_8932__$1;
                                  statearr_8967[7] = inst_8930__$1;
                                  return statearr_8967;
                                }();
                                if (cljs.core.truth_(inst_8932__$1)) {
                                  var statearr_8968_9016 = state_8951__$1;
                                  statearr_8968_9016[1] = 19;
                                } else {
                                  var statearr_8969_9017 = state_8951__$1;
                                  statearr_8969_9017[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_8952 === 25) {
                                  var inst_8941 = state_8951[2];
                                  var state_8951__$1 = state_8951;
                                  var statearr_8970_9018 = state_8951__$1;
                                  statearr_8970_9018[2] = inst_8941;
                                  statearr_8970_9018[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_8952 === 17) {
                                    var inst_8906 = state_8951[10];
                                    var inst_8915 = cljs.core.first.call(null, inst_8906);
                                    var inst_8916 = cljs.core.async.muxch_STAR_.call(null, inst_8915);
                                    var inst_8917 = cljs.core.async.close_BANG_.call(null, inst_8916);
                                    var inst_8918 = cljs.core.next.call(null, inst_8906);
                                    var inst_8892 = inst_8918;
                                    var inst_8893 = null;
                                    var inst_8894 = 0;
                                    var inst_8895 = 0;
                                    var state_8951__$1 = function() {
                                      var statearr_8971 = state_8951;
                                      statearr_8971[12] = inst_8893;
                                      statearr_8971[13] = inst_8892;
                                      statearr_8971[14] = inst_8917;
                                      statearr_8971[15] = inst_8894;
                                      statearr_8971[16] = inst_8895;
                                      return statearr_8971;
                                    }();
                                    var statearr_8972_9019 = state_8951__$1;
                                    statearr_8972_9019[2] = null;
                                    statearr_8972_9019[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_8952 === 3) {
                                      var inst_8949 = state_8951[2];
                                      var state_8951__$1 = state_8951;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8951__$1, inst_8949);
                                    } else {
                                      if (state_val_8952 === 12) {
                                        var inst_8926 = state_8951[2];
                                        var state_8951__$1 = state_8951;
                                        var statearr_8973_9020 = state_8951__$1;
                                        statearr_8973_9020[2] = inst_8926;
                                        statearr_8973_9020[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_8952 === 2) {
                                          var state_8951__$1 = state_8951;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8951__$1, 4, ch);
                                        } else {
                                          if (state_val_8952 === 23) {
                                            var state_8951__$1 = state_8951;
                                            var statearr_8974_9021 = state_8951__$1;
                                            statearr_8974_9021[2] = null;
                                            statearr_8974_9021[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_8952 === 19) {
                                              var inst_8932 = state_8951[11];
                                              var inst_8882 = state_8951[8];
                                              var inst_8934 = cljs.core.async.muxch_STAR_.call(null, inst_8932);
                                              var state_8951__$1 = state_8951;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_8951__$1, 22, inst_8934, inst_8882);
                                            } else {
                                              if (state_val_8952 === 11) {
                                                var inst_8892 = state_8951[13];
                                                var inst_8906 = state_8951[10];
                                                var inst_8906__$1 = cljs.core.seq.call(null, inst_8892);
                                                var state_8951__$1 = function() {
                                                  var statearr_8975 = state_8951;
                                                  statearr_8975[10] = inst_8906__$1;
                                                  return statearr_8975;
                                                }();
                                                if (inst_8906__$1) {
                                                  var statearr_8976_9022 = state_8951__$1;
                                                  statearr_8976_9022[1] = 13;
                                                } else {
                                                  var statearr_8977_9023 = state_8951__$1;
                                                  statearr_8977_9023[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_8952 === 9) {
                                                  var inst_8928 = state_8951[2];
                                                  var state_8951__$1 = state_8951;
                                                  var statearr_8978_9024 = state_8951__$1;
                                                  statearr_8978_9024[2] = inst_8928;
                                                  statearr_8978_9024[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_8952 === 5) {
                                                    var inst_8889 = cljs.core.deref.call(null, mults);
                                                    var inst_8890 = cljs.core.vals.call(null, inst_8889);
                                                    var inst_8891 = cljs.core.seq.call(null, inst_8890);
                                                    var inst_8892 = inst_8891;
                                                    var inst_8893 = null;
                                                    var inst_8894 = 0;
                                                    var inst_8895 = 0;
                                                    var state_8951__$1 = function() {
                                                      var statearr_8979 = state_8951;
                                                      statearr_8979[12] = inst_8893;
                                                      statearr_8979[13] = inst_8892;
                                                      statearr_8979[15] = inst_8894;
                                                      statearr_8979[16] = inst_8895;
                                                      return statearr_8979;
                                                    }();
                                                    var statearr_8980_9025 = state_8951__$1;
                                                    statearr_8980_9025[2] = null;
                                                    statearr_8980_9025[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_8952 === 14) {
                                                      var state_8951__$1 = state_8951;
                                                      var statearr_8984_9026 = state_8951__$1;
                                                      statearr_8984_9026[2] = null;
                                                      statearr_8984_9026[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_8952 === 16) {
                                                        var inst_8906 = state_8951[10];
                                                        var inst_8910 = cljs.core.chunk_first.call(null, inst_8906);
                                                        var inst_8911 = cljs.core.chunk_rest.call(null, inst_8906);
                                                        var inst_8912 = cljs.core.count.call(null, inst_8910);
                                                        var inst_8892 = inst_8911;
                                                        var inst_8893 = inst_8910;
                                                        var inst_8894 = inst_8912;
                                                        var inst_8895 = 0;
                                                        var state_8951__$1 = function() {
                                                          var statearr_8985 = state_8951;
                                                          statearr_8985[12] = inst_8893;
                                                          statearr_8985[13] = inst_8892;
                                                          statearr_8985[15] = inst_8894;
                                                          statearr_8985[16] = inst_8895;
                                                          return statearr_8985;
                                                        }();
                                                        var statearr_8986_9027 = state_8951__$1;
                                                        statearr_8986_9027[2] = null;
                                                        statearr_8986_9027[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_8952 === 10) {
                                                          var inst_8893 = state_8951[12];
                                                          var inst_8892 = state_8951[13];
                                                          var inst_8894 = state_8951[15];
                                                          var inst_8895 = state_8951[16];
                                                          var inst_8900 = cljs.core._nth.call(null, inst_8893, inst_8895);
                                                          var inst_8901 = cljs.core.async.muxch_STAR_.call(null, inst_8900);
                                                          var inst_8902 = cljs.core.async.close_BANG_.call(null, inst_8901);
                                                          var inst_8903 = inst_8895 + 1;
                                                          var tmp8981 = inst_8893;
                                                          var tmp8982 = inst_8892;
                                                          var tmp8983 = inst_8894;
                                                          var inst_8892__$1 = tmp8982;
                                                          var inst_8893__$1 = tmp8981;
                                                          var inst_8894__$1 = tmp8983;
                                                          var inst_8895__$1 = inst_8903;
                                                          var state_8951__$1 = function() {
                                                            var statearr_8987 = state_8951;
                                                            statearr_8987[12] = inst_8893__$1;
                                                            statearr_8987[13] = inst_8892__$1;
                                                            statearr_8987[17] = inst_8902;
                                                            statearr_8987[15] = inst_8894__$1;
                                                            statearr_8987[16] = inst_8895__$1;
                                                            return statearr_8987;
                                                          }();
                                                          var statearr_8988_9028 = state_8951__$1;
                                                          statearr_8988_9028[2] = null;
                                                          statearr_8988_9028[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_8952 === 18) {
                                                            var inst_8921 = state_8951[2];
                                                            var state_8951__$1 = state_8951;
                                                            var statearr_8989_9029 = state_8951__$1;
                                                            statearr_8989_9029[2] = inst_8921;
                                                            statearr_8989_9029[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_8952 === 8) {
                                                              var inst_8894 = state_8951[15];
                                                              var inst_8895 = state_8951[16];
                                                              var inst_8897 = inst_8895 < inst_8894;
                                                              var inst_8898 = inst_8897;
                                                              var state_8951__$1 = state_8951;
                                                              if (cljs.core.truth_(inst_8898)) {
                                                                var statearr_8990_9030 = state_8951__$1;
                                                                statearr_8990_9030[1] = 10;
                                                              } else {
                                                                var statearr_8991_9031 = state_8951__$1;
                                                                statearr_8991_9031[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9003, mults, ensure_mult, p);
        return function(switch__7029__auto__, c__7141__auto___9003, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_8995 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_8995[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_8995[1] = 1;
              return statearr_8995;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_8951) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_8951);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e8996) {
                    if (e8996 instanceof Object) {
                      var ex__7033__auto__ = e8996;
                      var statearr_8997_9032 = state_8951;
                      statearr_8997_9032[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_8951);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e8996;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9033 = state_8951;
                  state_8951 = G__9033;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_8951) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_8951);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9003, mults, ensure_mult, p);
      }();
      var state__7143__auto__ = function() {
        var statearr_8998 = f__7142__auto__.call(null);
        statearr_8998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9003;
        return statearr_8998;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9003, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args9034 = [];
  var len__5727__auto___9037 = arguments.length;
  var i__5728__auto___9038 = 0;
  while (true) {
    if (i__5728__auto___9038 < len__5727__auto___9037) {
      args9034.push(arguments[i__5728__auto___9038]);
      var G__9039 = i__5728__auto___9038 + 1;
      i__5728__auto___9038 = G__9039;
      continue;
    } else {
    }
    break;
  }
  var G__9036 = args9034.length;
  switch(G__9036) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9034.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args9041 = [];
  var len__5727__auto___9044 = arguments.length;
  var i__5728__auto___9045 = 0;
  while (true) {
    if (i__5728__auto___9045 < len__5727__auto___9044) {
      args9041.push(arguments[i__5728__auto___9045]);
      var G__9046 = i__5728__auto___9045 + 1;
      i__5728__auto___9045 = G__9046;
      continue;
    } else {
    }
    break;
  }
  var G__9043 = args9041.length;
  switch(G__9043) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9041.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args9048 = [];
  var len__5727__auto___9119 = arguments.length;
  var i__5728__auto___9120 = 0;
  while (true) {
    if (i__5728__auto___9120 < len__5727__auto___9119) {
      args9048.push(arguments[i__5728__auto___9120]);
      var G__9121 = i__5728__auto___9120 + 1;
      i__5728__auto___9120 = G__9121;
      continue;
    } else {
    }
    break;
  }
  var G__9050 = args9048.length;
  switch(G__9050) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9048.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__7141__auto___9123 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_9089) {
            var state_val_9090 = state_9089[1];
            if (state_val_9090 === 7) {
              var state_9089__$1 = state_9089;
              var statearr_9091_9124 = state_9089__$1;
              statearr_9091_9124[2] = null;
              statearr_9091_9124[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9090 === 1) {
                var state_9089__$1 = state_9089;
                var statearr_9092_9125 = state_9089__$1;
                statearr_9092_9125[2] = null;
                statearr_9092_9125[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9090 === 4) {
                  var inst_9053 = state_9089[7];
                  var inst_9055 = inst_9053 < cnt;
                  var state_9089__$1 = state_9089;
                  if (cljs.core.truth_(inst_9055)) {
                    var statearr_9093_9126 = state_9089__$1;
                    statearr_9093_9126[1] = 6;
                  } else {
                    var statearr_9094_9127 = state_9089__$1;
                    statearr_9094_9127[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9090 === 15) {
                    var inst_9085 = state_9089[2];
                    var state_9089__$1 = state_9089;
                    var statearr_9095_9128 = state_9089__$1;
                    statearr_9095_9128[2] = inst_9085;
                    statearr_9095_9128[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9090 === 13) {
                      var inst_9078 = cljs.core.async.close_BANG_.call(null, out);
                      var state_9089__$1 = state_9089;
                      var statearr_9096_9129 = state_9089__$1;
                      statearr_9096_9129[2] = inst_9078;
                      statearr_9096_9129[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9090 === 6) {
                        var state_9089__$1 = state_9089;
                        var statearr_9097_9130 = state_9089__$1;
                        statearr_9097_9130[2] = null;
                        statearr_9097_9130[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9090 === 3) {
                          var inst_9087 = state_9089[2];
                          var state_9089__$1 = state_9089;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9089__$1, inst_9087);
                        } else {
                          if (state_val_9090 === 12) {
                            var inst_9075 = state_9089[8];
                            var inst_9075__$1 = state_9089[2];
                            var inst_9076 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_9075__$1);
                            var state_9089__$1 = function() {
                              var statearr_9098 = state_9089;
                              statearr_9098[8] = inst_9075__$1;
                              return statearr_9098;
                            }();
                            if (cljs.core.truth_(inst_9076)) {
                              var statearr_9099_9131 = state_9089__$1;
                              statearr_9099_9131[1] = 13;
                            } else {
                              var statearr_9100_9132 = state_9089__$1;
                              statearr_9100_9132[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9090 === 2) {
                              var inst_9052 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_9053 = 0;
                              var state_9089__$1 = function() {
                                var statearr_9101 = state_9089;
                                statearr_9101[9] = inst_9052;
                                statearr_9101[7] = inst_9053;
                                return statearr_9101;
                              }();
                              var statearr_9102_9133 = state_9089__$1;
                              statearr_9102_9133[2] = null;
                              statearr_9102_9133[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9090 === 11) {
                                var inst_9053 = state_9089[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_9089, 10, Object, null, 9);
                                var inst_9062 = chs__$1.call(null, inst_9053);
                                var inst_9063 = done.call(null, inst_9053);
                                var inst_9064 = cljs.core.async.take_BANG_.call(null, inst_9062, inst_9063);
                                var state_9089__$1 = state_9089;
                                var statearr_9103_9134 = state_9089__$1;
                                statearr_9103_9134[2] = inst_9064;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9089__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9090 === 9) {
                                  var inst_9053 = state_9089[7];
                                  var inst_9066 = state_9089[2];
                                  var inst_9067 = inst_9053 + 1;
                                  var inst_9053__$1 = inst_9067;
                                  var state_9089__$1 = function() {
                                    var statearr_9104 = state_9089;
                                    statearr_9104[7] = inst_9053__$1;
                                    statearr_9104[10] = inst_9066;
                                    return statearr_9104;
                                  }();
                                  var statearr_9105_9135 = state_9089__$1;
                                  statearr_9105_9135[2] = null;
                                  statearr_9105_9135[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_9090 === 5) {
                                    var inst_9073 = state_9089[2];
                                    var state_9089__$1 = function() {
                                      var statearr_9106 = state_9089;
                                      statearr_9106[11] = inst_9073;
                                      return statearr_9106;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9089__$1, 12, dchan);
                                  } else {
                                    if (state_val_9090 === 14) {
                                      var inst_9075 = state_9089[8];
                                      var inst_9080 = cljs.core.apply.call(null, f, inst_9075);
                                      var state_9089__$1 = state_9089;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9089__$1, 16, out, inst_9080);
                                    } else {
                                      if (state_val_9090 === 16) {
                                        var inst_9082 = state_9089[2];
                                        var state_9089__$1 = function() {
                                          var statearr_9107 = state_9089;
                                          statearr_9107[12] = inst_9082;
                                          return statearr_9107;
                                        }();
                                        var statearr_9108_9136 = state_9089__$1;
                                        statearr_9108_9136[2] = null;
                                        statearr_9108_9136[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9090 === 10) {
                                          var inst_9057 = state_9089[2];
                                          var inst_9058 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_9089__$1 = function() {
                                            var statearr_9109 = state_9089;
                                            statearr_9109[13] = inst_9057;
                                            return statearr_9109;
                                          }();
                                          var statearr_9110_9137 = state_9089__$1;
                                          statearr_9110_9137[2] = inst_9058;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9089__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_9090 === 8) {
                                            var inst_9071 = state_9089[2];
                                            var state_9089__$1 = state_9089;
                                            var statearr_9111_9138 = state_9089__$1;
                                            statearr_9111_9138[2] = inst_9071;
                                            statearr_9111_9138[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__7029__auto__, c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9115 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9115[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9115[1] = 1;
              return statearr_9115;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9089) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9089);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9116) {
                    if (e9116 instanceof Object) {
                      var ex__7033__auto__ = e9116;
                      var statearr_9117_9139 = state_9089;
                      statearr_9117_9139[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9089);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9116;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9140 = state_9089;
                  state_9089 = G__9140;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9089) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9089);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__7143__auto__ = function() {
        var statearr_9118 = f__7142__auto__.call(null);
        statearr_9118[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9123;
        return statearr_9118;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9123, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args9142 = [];
  var len__5727__auto___9198 = arguments.length;
  var i__5728__auto___9199 = 0;
  while (true) {
    if (i__5728__auto___9199 < len__5727__auto___9198) {
      args9142.push(arguments[i__5728__auto___9199]);
      var G__9200 = i__5728__auto___9199 + 1;
      i__5728__auto___9199 = G__9200;
      continue;
    } else {
    }
    break;
  }
  var G__9144 = args9142.length;
  switch(G__9144) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9142.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9202 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9202, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9202, out) {
          return function(state_9174) {
            var state_val_9175 = state_9174[1];
            if (state_val_9175 === 7) {
              var inst_9153 = state_9174[7];
              var inst_9154 = state_9174[8];
              var inst_9153__$1 = state_9174[2];
              var inst_9154__$1 = cljs.core.nth.call(null, inst_9153__$1, 0, null);
              var inst_9155 = cljs.core.nth.call(null, inst_9153__$1, 1, null);
              var inst_9156 = inst_9154__$1 == null;
              var state_9174__$1 = function() {
                var statearr_9176 = state_9174;
                statearr_9176[7] = inst_9153__$1;
                statearr_9176[8] = inst_9154__$1;
                statearr_9176[9] = inst_9155;
                return statearr_9176;
              }();
              if (cljs.core.truth_(inst_9156)) {
                var statearr_9177_9203 = state_9174__$1;
                statearr_9177_9203[1] = 8;
              } else {
                var statearr_9178_9204 = state_9174__$1;
                statearr_9178_9204[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9175 === 1) {
                var inst_9145 = cljs.core.vec.call(null, chs);
                var inst_9146 = inst_9145;
                var state_9174__$1 = function() {
                  var statearr_9179 = state_9174;
                  statearr_9179[10] = inst_9146;
                  return statearr_9179;
                }();
                var statearr_9180_9205 = state_9174__$1;
                statearr_9180_9205[2] = null;
                statearr_9180_9205[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9175 === 4) {
                  var inst_9146 = state_9174[10];
                  var state_9174__$1 = state_9174;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_9174__$1, 7, inst_9146);
                } else {
                  if (state_val_9175 === 6) {
                    var inst_9170 = state_9174[2];
                    var state_9174__$1 = state_9174;
                    var statearr_9181_9206 = state_9174__$1;
                    statearr_9181_9206[2] = inst_9170;
                    statearr_9181_9206[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9175 === 3) {
                      var inst_9172 = state_9174[2];
                      var state_9174__$1 = state_9174;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9174__$1, inst_9172);
                    } else {
                      if (state_val_9175 === 2) {
                        var inst_9146 = state_9174[10];
                        var inst_9148 = cljs.core.count.call(null, inst_9146);
                        var inst_9149 = inst_9148 > 0;
                        var state_9174__$1 = state_9174;
                        if (cljs.core.truth_(inst_9149)) {
                          var statearr_9183_9207 = state_9174__$1;
                          statearr_9183_9207[1] = 4;
                        } else {
                          var statearr_9184_9208 = state_9174__$1;
                          statearr_9184_9208[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9175 === 11) {
                          var inst_9146 = state_9174[10];
                          var inst_9163 = state_9174[2];
                          var tmp9182 = inst_9146;
                          var inst_9146__$1 = tmp9182;
                          var state_9174__$1 = function() {
                            var statearr_9185 = state_9174;
                            statearr_9185[11] = inst_9163;
                            statearr_9185[10] = inst_9146__$1;
                            return statearr_9185;
                          }();
                          var statearr_9186_9209 = state_9174__$1;
                          statearr_9186_9209[2] = null;
                          statearr_9186_9209[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9175 === 9) {
                            var inst_9154 = state_9174[8];
                            var state_9174__$1 = state_9174;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9174__$1, 11, out, inst_9154);
                          } else {
                            if (state_val_9175 === 5) {
                              var inst_9168 = cljs.core.async.close_BANG_.call(null, out);
                              var state_9174__$1 = state_9174;
                              var statearr_9187_9210 = state_9174__$1;
                              statearr_9187_9210[2] = inst_9168;
                              statearr_9187_9210[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9175 === 10) {
                                var inst_9166 = state_9174[2];
                                var state_9174__$1 = state_9174;
                                var statearr_9188_9211 = state_9174__$1;
                                statearr_9188_9211[2] = inst_9166;
                                statearr_9188_9211[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9175 === 8) {
                                  var inst_9153 = state_9174[7];
                                  var inst_9146 = state_9174[10];
                                  var inst_9154 = state_9174[8];
                                  var inst_9155 = state_9174[9];
                                  var inst_9158 = function() {
                                    var cs = inst_9146;
                                    var vec__9151 = inst_9153;
                                    var v = inst_9154;
                                    var c = inst_9155;
                                    return function(cs, vec__9151, v, c, inst_9153, inst_9146, inst_9154, inst_9155, state_val_9175, c__7141__auto___9202, out) {
                                      return function(p1__9141_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__9141_SHARP_);
                                      };
                                    }(cs, vec__9151, v, c, inst_9153, inst_9146, inst_9154, inst_9155, state_val_9175, c__7141__auto___9202, out);
                                  }();
                                  var inst_9159 = cljs.core.filterv.call(null, inst_9158, inst_9146);
                                  var inst_9146__$1 = inst_9159;
                                  var state_9174__$1 = function() {
                                    var statearr_9189 = state_9174;
                                    statearr_9189[10] = inst_9146__$1;
                                    return statearr_9189;
                                  }();
                                  var statearr_9190_9212 = state_9174__$1;
                                  statearr_9190_9212[2] = null;
                                  statearr_9190_9212[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9202, out);
        return function(switch__7029__auto__, c__7141__auto___9202, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9194 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9194[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9194[1] = 1;
              return statearr_9194;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9174) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9174);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9195) {
                    if (e9195 instanceof Object) {
                      var ex__7033__auto__ = e9195;
                      var statearr_9196_9213 = state_9174;
                      statearr_9196_9213[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9174);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9195;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9214 = state_9174;
                  state_9174 = G__9214;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9174) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9174);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9202, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9197 = f__7142__auto__.call(null);
        statearr_9197[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9202;
        return statearr_9197;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9202, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args9215 = [];
  var len__5727__auto___9264 = arguments.length;
  var i__5728__auto___9265 = 0;
  while (true) {
    if (i__5728__auto___9265 < len__5727__auto___9264) {
      args9215.push(arguments[i__5728__auto___9265]);
      var G__9266 = i__5728__auto___9265 + 1;
      i__5728__auto___9265 = G__9266;
      continue;
    } else {
    }
    break;
  }
  var G__9217 = args9215.length;
  switch(G__9217) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9215.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9268 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9268, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9268, out) {
          return function(state_9241) {
            var state_val_9242 = state_9241[1];
            if (state_val_9242 === 7) {
              var inst_9223 = state_9241[7];
              var inst_9223__$1 = state_9241[2];
              var inst_9224 = inst_9223__$1 == null;
              var inst_9225 = cljs.core.not.call(null, inst_9224);
              var state_9241__$1 = function() {
                var statearr_9243 = state_9241;
                statearr_9243[7] = inst_9223__$1;
                return statearr_9243;
              }();
              if (inst_9225) {
                var statearr_9244_9269 = state_9241__$1;
                statearr_9244_9269[1] = 8;
              } else {
                var statearr_9245_9270 = state_9241__$1;
                statearr_9245_9270[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9242 === 1) {
                var inst_9218 = 0;
                var state_9241__$1 = function() {
                  var statearr_9246 = state_9241;
                  statearr_9246[8] = inst_9218;
                  return statearr_9246;
                }();
                var statearr_9247_9271 = state_9241__$1;
                statearr_9247_9271[2] = null;
                statearr_9247_9271[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9242 === 4) {
                  var state_9241__$1 = state_9241;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9241__$1, 7, ch);
                } else {
                  if (state_val_9242 === 6) {
                    var inst_9236 = state_9241[2];
                    var state_9241__$1 = state_9241;
                    var statearr_9248_9272 = state_9241__$1;
                    statearr_9248_9272[2] = inst_9236;
                    statearr_9248_9272[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9242 === 3) {
                      var inst_9238 = state_9241[2];
                      var inst_9239 = cljs.core.async.close_BANG_.call(null, out);
                      var state_9241__$1 = function() {
                        var statearr_9249 = state_9241;
                        statearr_9249[9] = inst_9238;
                        return statearr_9249;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9241__$1, inst_9239);
                    } else {
                      if (state_val_9242 === 2) {
                        var inst_9218 = state_9241[8];
                        var inst_9220 = inst_9218 < n;
                        var state_9241__$1 = state_9241;
                        if (cljs.core.truth_(inst_9220)) {
                          var statearr_9250_9273 = state_9241__$1;
                          statearr_9250_9273[1] = 4;
                        } else {
                          var statearr_9251_9274 = state_9241__$1;
                          statearr_9251_9274[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9242 === 11) {
                          var inst_9218 = state_9241[8];
                          var inst_9228 = state_9241[2];
                          var inst_9229 = inst_9218 + 1;
                          var inst_9218__$1 = inst_9229;
                          var state_9241__$1 = function() {
                            var statearr_9252 = state_9241;
                            statearr_9252[8] = inst_9218__$1;
                            statearr_9252[10] = inst_9228;
                            return statearr_9252;
                          }();
                          var statearr_9253_9275 = state_9241__$1;
                          statearr_9253_9275[2] = null;
                          statearr_9253_9275[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9242 === 9) {
                            var state_9241__$1 = state_9241;
                            var statearr_9254_9276 = state_9241__$1;
                            statearr_9254_9276[2] = null;
                            statearr_9254_9276[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9242 === 5) {
                              var state_9241__$1 = state_9241;
                              var statearr_9255_9277 = state_9241__$1;
                              statearr_9255_9277[2] = null;
                              statearr_9255_9277[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9242 === 10) {
                                var inst_9233 = state_9241[2];
                                var state_9241__$1 = state_9241;
                                var statearr_9256_9278 = state_9241__$1;
                                statearr_9256_9278[2] = inst_9233;
                                statearr_9256_9278[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9242 === 8) {
                                  var inst_9223 = state_9241[7];
                                  var state_9241__$1 = state_9241;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9241__$1, 11, out, inst_9223);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9268, out);
        return function(switch__7029__auto__, c__7141__auto___9268, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9260 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_9260[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9260[1] = 1;
              return statearr_9260;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9241) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9241);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9261) {
                    if (e9261 instanceof Object) {
                      var ex__7033__auto__ = e9261;
                      var statearr_9262_9279 = state_9241;
                      statearr_9262_9279[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9241);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9261;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9280 = state_9241;
                  state_9241 = G__9280;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9241) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9241);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9268, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9263 = f__7142__auto__.call(null);
        statearr_9263[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9268;
        return statearr_9263;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9268, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async9288 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async9288 = function(map_LT_, f, ch, meta9289) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta9289 = meta9289;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9290, meta9289__$1) {
      var self__ = this;
      var _9290__$1 = this;
      return new cljs.core.async.t_cljs$core$async9288(self__.map_LT_, self__.f, self__.ch, meta9289__$1);
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9290) {
      var self__ = this;
      var _9290__$1 = this;
      return self__.meta9289;
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async9291 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async9291 = function(map_LT_, f, ch, meta9289, _, fn1, meta9292) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta9289 = meta9289;
            this._ = _;
            this.fn1 = fn1;
            this.meta9292 = meta9292;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async9291.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_9293, meta9292__$1) {
              var self__ = this;
              var _9293__$1 = this;
              return new cljs.core.async.t_cljs$core$async9291(self__.map_LT_, self__.f, self__.ch, self__.meta9289, self__._, self__.fn1, meta9292__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async9291.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_9293) {
              var self__ = this;
              var _9293__$1 = this;
              return self__.meta9292;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async9291.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async9291.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async9291.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__9281_SHARP_) {
                  return f1.call(null, p1__9281_SHARP_ == null ? null : self__.f.call(null, p1__9281_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async9291.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta9289", "meta9289", -2139802721, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async9288", "cljs.core.async/t_cljs$core$async9288", -1296430869, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta9292", "meta9292", 1182993958, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async9291.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async9291.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9291";
          cljs.core.async.t_cljs$core$async9291.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
              return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async9291");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async9291 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async9291(map_LT___$1, f__$1, ch__$1, meta9289__$1, ___$2, fn1__$1, meta9292) {
              return new cljs.core.async.t_cljs$core$async9291(map_LT___$1, f__$1, ch__$1, meta9289__$1, ___$2, fn1__$1, meta9292);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async9291(self__.map_LT_, self__.f, self__.ch, self__.meta9289, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4657__auto__ = ret;
        if (cljs.core.truth_(and__4657__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4657__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async9288.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async9288.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta9289", "meta9289", -2139802721, null)], null);
    };
    cljs.core.async.t_cljs$core$async9288.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async9288.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9288";
    cljs.core.async.t_cljs$core$async9288.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async9288");
    };
    cljs.core.async.__GT_t_cljs$core$async9288 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async9288(map_LT___$1, f__$1, ch__$1, meta9289) {
      return new cljs.core.async.t_cljs$core$async9288(map_LT___$1, f__$1, ch__$1, meta9289);
    };
  }
  return new cljs.core.async.t_cljs$core$async9288(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async9297 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async9297 = function(map_GT_, f, ch, meta9298) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta9298 = meta9298;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9299, meta9298__$1) {
      var self__ = this;
      var _9299__$1 = this;
      return new cljs.core.async.t_cljs$core$async9297(self__.map_GT_, self__.f, self__.ch, meta9298__$1);
    };
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9299) {
      var self__ = this;
      var _9299__$1 = this;
      return self__.meta9298;
    };
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async9297.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async9297.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta9298", "meta9298", 276733054, null)], null);
    };
    cljs.core.async.t_cljs$core$async9297.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async9297.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9297";
    cljs.core.async.t_cljs$core$async9297.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async9297");
    };
    cljs.core.async.__GT_t_cljs$core$async9297 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async9297(map_GT___$1, f__$1, ch__$1, meta9298) {
      return new cljs.core.async.t_cljs$core$async9297(map_GT___$1, f__$1, ch__$1, meta9298);
    };
  }
  return new cljs.core.async.t_cljs$core$async9297(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async9303 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async9303 = function(filter_GT_, p, ch, meta9304) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta9304 = meta9304;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9305, meta9304__$1) {
      var self__ = this;
      var _9305__$1 = this;
      return new cljs.core.async.t_cljs$core$async9303(self__.filter_GT_, self__.p, self__.ch, meta9304__$1);
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9305) {
      var self__ = this;
      var _9305__$1 = this;
      return self__.meta9304;
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async9303.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async9303.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta9304", "meta9304", 525103852, null)], null);
    };
    cljs.core.async.t_cljs$core$async9303.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async9303.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async9303";
    cljs.core.async.t_cljs$core$async9303.cljs$lang$ctorPrWriter = function(this__5267__auto__, writer__5268__auto__, opt__5269__auto__) {
      return cljs.core._write.call(null, writer__5268__auto__, "cljs.core.async/t_cljs$core$async9303");
    };
    cljs.core.async.__GT_t_cljs$core$async9303 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async9303(filter_GT___$1, p__$1, ch__$1, meta9304) {
      return new cljs.core.async.t_cljs$core$async9303(filter_GT___$1, p__$1, ch__$1, meta9304);
    };
  }
  return new cljs.core.async.t_cljs$core$async9303(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args9306 = [];
  var len__5727__auto___9350 = arguments.length;
  var i__5728__auto___9351 = 0;
  while (true) {
    if (i__5728__auto___9351 < len__5727__auto___9350) {
      args9306.push(arguments[i__5728__auto___9351]);
      var G__9352 = i__5728__auto___9351 + 1;
      i__5728__auto___9351 = G__9352;
      continue;
    } else {
    }
    break;
  }
  var G__9308 = args9306.length;
  switch(G__9308) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9306.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9354 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9354, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9354, out) {
          return function(state_9329) {
            var state_val_9330 = state_9329[1];
            if (state_val_9330 === 7) {
              var inst_9325 = state_9329[2];
              var state_9329__$1 = state_9329;
              var statearr_9331_9355 = state_9329__$1;
              statearr_9331_9355[2] = inst_9325;
              statearr_9331_9355[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9330 === 1) {
                var state_9329__$1 = state_9329;
                var statearr_9332_9356 = state_9329__$1;
                statearr_9332_9356[2] = null;
                statearr_9332_9356[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9330 === 4) {
                  var inst_9311 = state_9329[7];
                  var inst_9311__$1 = state_9329[2];
                  var inst_9312 = inst_9311__$1 == null;
                  var state_9329__$1 = function() {
                    var statearr_9333 = state_9329;
                    statearr_9333[7] = inst_9311__$1;
                    return statearr_9333;
                  }();
                  if (cljs.core.truth_(inst_9312)) {
                    var statearr_9334_9357 = state_9329__$1;
                    statearr_9334_9357[1] = 5;
                  } else {
                    var statearr_9335_9358 = state_9329__$1;
                    statearr_9335_9358[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9330 === 6) {
                    var inst_9311 = state_9329[7];
                    var inst_9316 = p.call(null, inst_9311);
                    var state_9329__$1 = state_9329;
                    if (cljs.core.truth_(inst_9316)) {
                      var statearr_9336_9359 = state_9329__$1;
                      statearr_9336_9359[1] = 8;
                    } else {
                      var statearr_9337_9360 = state_9329__$1;
                      statearr_9337_9360[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9330 === 3) {
                      var inst_9327 = state_9329[2];
                      var state_9329__$1 = state_9329;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9329__$1, inst_9327);
                    } else {
                      if (state_val_9330 === 2) {
                        var state_9329__$1 = state_9329;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9329__$1, 4, ch);
                      } else {
                        if (state_val_9330 === 11) {
                          var inst_9319 = state_9329[2];
                          var state_9329__$1 = state_9329;
                          var statearr_9338_9361 = state_9329__$1;
                          statearr_9338_9361[2] = inst_9319;
                          statearr_9338_9361[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9330 === 9) {
                            var state_9329__$1 = state_9329;
                            var statearr_9339_9362 = state_9329__$1;
                            statearr_9339_9362[2] = null;
                            statearr_9339_9362[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9330 === 5) {
                              var inst_9314 = cljs.core.async.close_BANG_.call(null, out);
                              var state_9329__$1 = state_9329;
                              var statearr_9340_9363 = state_9329__$1;
                              statearr_9340_9363[2] = inst_9314;
                              statearr_9340_9363[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9330 === 10) {
                                var inst_9322 = state_9329[2];
                                var state_9329__$1 = function() {
                                  var statearr_9341 = state_9329;
                                  statearr_9341[8] = inst_9322;
                                  return statearr_9341;
                                }();
                                var statearr_9342_9364 = state_9329__$1;
                                statearr_9342_9364[2] = null;
                                statearr_9342_9364[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9330 === 8) {
                                  var inst_9311 = state_9329[7];
                                  var state_9329__$1 = state_9329;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9329__$1, 11, out, inst_9311);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9354, out);
        return function(switch__7029__auto__, c__7141__auto___9354, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9346 = [null, null, null, null, null, null, null, null, null];
              statearr_9346[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9346[1] = 1;
              return statearr_9346;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9329) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9329);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9347) {
                    if (e9347 instanceof Object) {
                      var ex__7033__auto__ = e9347;
                      var statearr_9348_9365 = state_9329;
                      statearr_9348_9365[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9329);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9347;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9366 = state_9329;
                  state_9329 = G__9366;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9329) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9329);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9354, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9349 = f__7142__auto__.call(null);
        statearr_9349[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9354;
        return statearr_9349;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9354, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args9367 = [];
  var len__5727__auto___9370 = arguments.length;
  var i__5728__auto___9371 = 0;
  while (true) {
    if (i__5728__auto___9371 < len__5727__auto___9370) {
      args9367.push(arguments[i__5728__auto___9371]);
      var G__9372 = i__5728__auto___9371 + 1;
      i__5728__auto___9371 = G__9372;
      continue;
    } else {
    }
    break;
  }
  var G__9369 = args9367.length;
  switch(G__9369) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9367.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__7141__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto__) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto__) {
          return function(state_9539) {
            var state_val_9540 = state_9539[1];
            if (state_val_9540 === 7) {
              var inst_9535 = state_9539[2];
              var state_9539__$1 = state_9539;
              var statearr_9541_9582 = state_9539__$1;
              statearr_9541_9582[2] = inst_9535;
              statearr_9541_9582[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9540 === 20) {
                var inst_9505 = state_9539[7];
                var inst_9516 = state_9539[2];
                var inst_9517 = cljs.core.next.call(null, inst_9505);
                var inst_9491 = inst_9517;
                var inst_9492 = null;
                var inst_9493 = 0;
                var inst_9494 = 0;
                var state_9539__$1 = function() {
                  var statearr_9542 = state_9539;
                  statearr_9542[8] = inst_9516;
                  statearr_9542[9] = inst_9492;
                  statearr_9542[10] = inst_9493;
                  statearr_9542[11] = inst_9491;
                  statearr_9542[12] = inst_9494;
                  return statearr_9542;
                }();
                var statearr_9543_9583 = state_9539__$1;
                statearr_9543_9583[2] = null;
                statearr_9543_9583[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9540 === 1) {
                  var state_9539__$1 = state_9539;
                  var statearr_9544_9584 = state_9539__$1;
                  statearr_9544_9584[2] = null;
                  statearr_9544_9584[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9540 === 4) {
                    var inst_9480 = state_9539[13];
                    var inst_9480__$1 = state_9539[2];
                    var inst_9481 = inst_9480__$1 == null;
                    var state_9539__$1 = function() {
                      var statearr_9545 = state_9539;
                      statearr_9545[13] = inst_9480__$1;
                      return statearr_9545;
                    }();
                    if (cljs.core.truth_(inst_9481)) {
                      var statearr_9546_9585 = state_9539__$1;
                      statearr_9546_9585[1] = 5;
                    } else {
                      var statearr_9547_9586 = state_9539__$1;
                      statearr_9547_9586[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9540 === 15) {
                      var state_9539__$1 = state_9539;
                      var statearr_9551_9587 = state_9539__$1;
                      statearr_9551_9587[2] = null;
                      statearr_9551_9587[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9540 === 21) {
                        var state_9539__$1 = state_9539;
                        var statearr_9552_9588 = state_9539__$1;
                        statearr_9552_9588[2] = null;
                        statearr_9552_9588[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9540 === 13) {
                          var inst_9492 = state_9539[9];
                          var inst_9493 = state_9539[10];
                          var inst_9491 = state_9539[11];
                          var inst_9494 = state_9539[12];
                          var inst_9501 = state_9539[2];
                          var inst_9502 = inst_9494 + 1;
                          var tmp9548 = inst_9492;
                          var tmp9549 = inst_9493;
                          var tmp9550 = inst_9491;
                          var inst_9491__$1 = tmp9550;
                          var inst_9492__$1 = tmp9548;
                          var inst_9493__$1 = tmp9549;
                          var inst_9494__$1 = inst_9502;
                          var state_9539__$1 = function() {
                            var statearr_9553 = state_9539;
                            statearr_9553[14] = inst_9501;
                            statearr_9553[9] = inst_9492__$1;
                            statearr_9553[10] = inst_9493__$1;
                            statearr_9553[11] = inst_9491__$1;
                            statearr_9553[12] = inst_9494__$1;
                            return statearr_9553;
                          }();
                          var statearr_9554_9589 = state_9539__$1;
                          statearr_9554_9589[2] = null;
                          statearr_9554_9589[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9540 === 22) {
                            var state_9539__$1 = state_9539;
                            var statearr_9555_9590 = state_9539__$1;
                            statearr_9555_9590[2] = null;
                            statearr_9555_9590[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9540 === 6) {
                              var inst_9480 = state_9539[13];
                              var inst_9489 = f.call(null, inst_9480);
                              var inst_9490 = cljs.core.seq.call(null, inst_9489);
                              var inst_9491 = inst_9490;
                              var inst_9492 = null;
                              var inst_9493 = 0;
                              var inst_9494 = 0;
                              var state_9539__$1 = function() {
                                var statearr_9556 = state_9539;
                                statearr_9556[9] = inst_9492;
                                statearr_9556[10] = inst_9493;
                                statearr_9556[11] = inst_9491;
                                statearr_9556[12] = inst_9494;
                                return statearr_9556;
                              }();
                              var statearr_9557_9591 = state_9539__$1;
                              statearr_9557_9591[2] = null;
                              statearr_9557_9591[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9540 === 17) {
                                var inst_9505 = state_9539[7];
                                var inst_9509 = cljs.core.chunk_first.call(null, inst_9505);
                                var inst_9510 = cljs.core.chunk_rest.call(null, inst_9505);
                                var inst_9511 = cljs.core.count.call(null, inst_9509);
                                var inst_9491 = inst_9510;
                                var inst_9492 = inst_9509;
                                var inst_9493 = inst_9511;
                                var inst_9494 = 0;
                                var state_9539__$1 = function() {
                                  var statearr_9558 = state_9539;
                                  statearr_9558[9] = inst_9492;
                                  statearr_9558[10] = inst_9493;
                                  statearr_9558[11] = inst_9491;
                                  statearr_9558[12] = inst_9494;
                                  return statearr_9558;
                                }();
                                var statearr_9559_9592 = state_9539__$1;
                                statearr_9559_9592[2] = null;
                                statearr_9559_9592[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9540 === 3) {
                                  var inst_9537 = state_9539[2];
                                  var state_9539__$1 = state_9539;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9539__$1, inst_9537);
                                } else {
                                  if (state_val_9540 === 12) {
                                    var inst_9525 = state_9539[2];
                                    var state_9539__$1 = state_9539;
                                    var statearr_9560_9593 = state_9539__$1;
                                    statearr_9560_9593[2] = inst_9525;
                                    statearr_9560_9593[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9540 === 2) {
                                      var state_9539__$1 = state_9539;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9539__$1, 4, in$);
                                    } else {
                                      if (state_val_9540 === 23) {
                                        var inst_9533 = state_9539[2];
                                        var state_9539__$1 = state_9539;
                                        var statearr_9561_9594 = state_9539__$1;
                                        statearr_9561_9594[2] = inst_9533;
                                        statearr_9561_9594[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9540 === 19) {
                                          var inst_9520 = state_9539[2];
                                          var state_9539__$1 = state_9539;
                                          var statearr_9562_9595 = state_9539__$1;
                                          statearr_9562_9595[2] = inst_9520;
                                          statearr_9562_9595[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_9540 === 11) {
                                            var inst_9505 = state_9539[7];
                                            var inst_9491 = state_9539[11];
                                            var inst_9505__$1 = cljs.core.seq.call(null, inst_9491);
                                            var state_9539__$1 = function() {
                                              var statearr_9563 = state_9539;
                                              statearr_9563[7] = inst_9505__$1;
                                              return statearr_9563;
                                            }();
                                            if (inst_9505__$1) {
                                              var statearr_9564_9596 = state_9539__$1;
                                              statearr_9564_9596[1] = 14;
                                            } else {
                                              var statearr_9565_9597 = state_9539__$1;
                                              statearr_9565_9597[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_9540 === 9) {
                                              var inst_9527 = state_9539[2];
                                              var inst_9528 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_9539__$1 = function() {
                                                var statearr_9566 = state_9539;
                                                statearr_9566[15] = inst_9527;
                                                return statearr_9566;
                                              }();
                                              if (cljs.core.truth_(inst_9528)) {
                                                var statearr_9567_9598 = state_9539__$1;
                                                statearr_9567_9598[1] = 21;
                                              } else {
                                                var statearr_9568_9599 = state_9539__$1;
                                                statearr_9568_9599[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_9540 === 5) {
                                                var inst_9483 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_9539__$1 = state_9539;
                                                var statearr_9569_9600 = state_9539__$1;
                                                statearr_9569_9600[2] = inst_9483;
                                                statearr_9569_9600[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_9540 === 14) {
                                                  var inst_9505 = state_9539[7];
                                                  var inst_9507 = cljs.core.chunked_seq_QMARK_.call(null, inst_9505);
                                                  var state_9539__$1 = state_9539;
                                                  if (inst_9507) {
                                                    var statearr_9570_9601 = state_9539__$1;
                                                    statearr_9570_9601[1] = 17;
                                                  } else {
                                                    var statearr_9571_9602 = state_9539__$1;
                                                    statearr_9571_9602[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_9540 === 16) {
                                                    var inst_9523 = state_9539[2];
                                                    var state_9539__$1 = state_9539;
                                                    var statearr_9572_9603 = state_9539__$1;
                                                    statearr_9572_9603[2] = inst_9523;
                                                    statearr_9572_9603[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_9540 === 10) {
                                                      var inst_9492 = state_9539[9];
                                                      var inst_9494 = state_9539[12];
                                                      var inst_9499 = cljs.core._nth.call(null, inst_9492, inst_9494);
                                                      var state_9539__$1 = state_9539;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9539__$1, 13, out, inst_9499);
                                                    } else {
                                                      if (state_val_9540 === 18) {
                                                        var inst_9505 = state_9539[7];
                                                        var inst_9514 = cljs.core.first.call(null, inst_9505);
                                                        var state_9539__$1 = state_9539;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9539__$1, 20, out, inst_9514);
                                                      } else {
                                                        if (state_val_9540 === 8) {
                                                          var inst_9493 = state_9539[10];
                                                          var inst_9494 = state_9539[12];
                                                          var inst_9496 = inst_9494 < inst_9493;
                                                          var inst_9497 = inst_9496;
                                                          var state_9539__$1 = state_9539;
                                                          if (cljs.core.truth_(inst_9497)) {
                                                            var statearr_9573_9604 = state_9539__$1;
                                                            statearr_9573_9604[1] = 10;
                                                          } else {
                                                            var statearr_9574_9605 = state_9539__$1;
                                                            statearr_9574_9605[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto__);
        return function(switch__7029__auto__, c__7141__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____0 = function() {
              var statearr_9578 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9578[0] = cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__;
              statearr_9578[1] = 1;
              return statearr_9578;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____1 = function(state_9539) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9539);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9579) {
                    if (e9579 instanceof Object) {
                      var ex__7033__auto__ = e9579;
                      var statearr_9580_9606 = state_9539;
                      statearr_9580_9606[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9539);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9579;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9607 = state_9539;
                  state_9539 = G__9607;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__ = function(state_9539) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____1.call(this, state_9539);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__7030__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto__);
      }();
      var state__7143__auto__ = function() {
        var statearr_9581 = f__7142__auto__.call(null);
        statearr_9581[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto__;
        return statearr_9581;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto__));
  return c__7141__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args9608 = [];
  var len__5727__auto___9611 = arguments.length;
  var i__5728__auto___9612 = 0;
  while (true) {
    if (i__5728__auto___9612 < len__5727__auto___9611) {
      args9608.push(arguments[i__5728__auto___9612]);
      var G__9613 = i__5728__auto___9612 + 1;
      i__5728__auto___9612 = G__9613;
      continue;
    } else {
    }
    break;
  }
  var G__9610 = args9608.length;
  switch(G__9610) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9608.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args9615 = [];
  var len__5727__auto___9618 = arguments.length;
  var i__5728__auto___9619 = 0;
  while (true) {
    if (i__5728__auto___9619 < len__5727__auto___9618) {
      args9615.push(arguments[i__5728__auto___9619]);
      var G__9620 = i__5728__auto___9619 + 1;
      i__5728__auto___9619 = G__9620;
      continue;
    } else {
    }
    break;
  }
  var G__9617 = args9615.length;
  switch(G__9617) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9615.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args9622 = [];
  var len__5727__auto___9673 = arguments.length;
  var i__5728__auto___9674 = 0;
  while (true) {
    if (i__5728__auto___9674 < len__5727__auto___9673) {
      args9622.push(arguments[i__5728__auto___9674]);
      var G__9675 = i__5728__auto___9674 + 1;
      i__5728__auto___9674 = G__9675;
      continue;
    } else {
    }
    break;
  }
  var G__9624 = args9622.length;
  switch(G__9624) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9622.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9677 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9677, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9677, out) {
          return function(state_9648) {
            var state_val_9649 = state_9648[1];
            if (state_val_9649 === 7) {
              var inst_9643 = state_9648[2];
              var state_9648__$1 = state_9648;
              var statearr_9650_9678 = state_9648__$1;
              statearr_9650_9678[2] = inst_9643;
              statearr_9650_9678[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9649 === 1) {
                var inst_9625 = null;
                var state_9648__$1 = function() {
                  var statearr_9651 = state_9648;
                  statearr_9651[7] = inst_9625;
                  return statearr_9651;
                }();
                var statearr_9652_9679 = state_9648__$1;
                statearr_9652_9679[2] = null;
                statearr_9652_9679[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9649 === 4) {
                  var inst_9628 = state_9648[8];
                  var inst_9628__$1 = state_9648[2];
                  var inst_9629 = inst_9628__$1 == null;
                  var inst_9630 = cljs.core.not.call(null, inst_9629);
                  var state_9648__$1 = function() {
                    var statearr_9653 = state_9648;
                    statearr_9653[8] = inst_9628__$1;
                    return statearr_9653;
                  }();
                  if (inst_9630) {
                    var statearr_9654_9680 = state_9648__$1;
                    statearr_9654_9680[1] = 5;
                  } else {
                    var statearr_9655_9681 = state_9648__$1;
                    statearr_9655_9681[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9649 === 6) {
                    var state_9648__$1 = state_9648;
                    var statearr_9656_9682 = state_9648__$1;
                    statearr_9656_9682[2] = null;
                    statearr_9656_9682[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9649 === 3) {
                      var inst_9645 = state_9648[2];
                      var inst_9646 = cljs.core.async.close_BANG_.call(null, out);
                      var state_9648__$1 = function() {
                        var statearr_9657 = state_9648;
                        statearr_9657[9] = inst_9645;
                        return statearr_9657;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9648__$1, inst_9646);
                    } else {
                      if (state_val_9649 === 2) {
                        var state_9648__$1 = state_9648;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9648__$1, 4, ch);
                      } else {
                        if (state_val_9649 === 11) {
                          var inst_9628 = state_9648[8];
                          var inst_9637 = state_9648[2];
                          var inst_9625 = inst_9628;
                          var state_9648__$1 = function() {
                            var statearr_9658 = state_9648;
                            statearr_9658[10] = inst_9637;
                            statearr_9658[7] = inst_9625;
                            return statearr_9658;
                          }();
                          var statearr_9659_9683 = state_9648__$1;
                          statearr_9659_9683[2] = null;
                          statearr_9659_9683[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9649 === 9) {
                            var inst_9628 = state_9648[8];
                            var state_9648__$1 = state_9648;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9648__$1, 11, out, inst_9628);
                          } else {
                            if (state_val_9649 === 5) {
                              var inst_9625 = state_9648[7];
                              var inst_9628 = state_9648[8];
                              var inst_9632 = cljs.core._EQ_.call(null, inst_9628, inst_9625);
                              var state_9648__$1 = state_9648;
                              if (inst_9632) {
                                var statearr_9661_9684 = state_9648__$1;
                                statearr_9661_9684[1] = 8;
                              } else {
                                var statearr_9662_9685 = state_9648__$1;
                                statearr_9662_9685[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9649 === 10) {
                                var inst_9640 = state_9648[2];
                                var state_9648__$1 = state_9648;
                                var statearr_9663_9686 = state_9648__$1;
                                statearr_9663_9686[2] = inst_9640;
                                statearr_9663_9686[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9649 === 8) {
                                  var inst_9625 = state_9648[7];
                                  var tmp9660 = inst_9625;
                                  var inst_9625__$1 = tmp9660;
                                  var state_9648__$1 = function() {
                                    var statearr_9664 = state_9648;
                                    statearr_9664[7] = inst_9625__$1;
                                    return statearr_9664;
                                  }();
                                  var statearr_9665_9687 = state_9648__$1;
                                  statearr_9665_9687[2] = null;
                                  statearr_9665_9687[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9677, out);
        return function(switch__7029__auto__, c__7141__auto___9677, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9669 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_9669[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9669[1] = 1;
              return statearr_9669;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9648) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9648);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9670) {
                    if (e9670 instanceof Object) {
                      var ex__7033__auto__ = e9670;
                      var statearr_9671_9688 = state_9648;
                      statearr_9671_9688[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9648);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9670;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9689 = state_9648;
                  state_9648 = G__9689;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9648) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9648);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9677, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9672 = f__7142__auto__.call(null);
        statearr_9672[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9677;
        return statearr_9672;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9677, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args9690 = [];
  var len__5727__auto___9760 = arguments.length;
  var i__5728__auto___9761 = 0;
  while (true) {
    if (i__5728__auto___9761 < len__5727__auto___9760) {
      args9690.push(arguments[i__5728__auto___9761]);
      var G__9762 = i__5728__auto___9761 + 1;
      i__5728__auto___9761 = G__9762;
      continue;
    } else {
    }
    break;
  }
  var G__9692 = args9690.length;
  switch(G__9692) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9690.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9764 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9764, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9764, out) {
          return function(state_9730) {
            var state_val_9731 = state_9730[1];
            if (state_val_9731 === 7) {
              var inst_9726 = state_9730[2];
              var state_9730__$1 = state_9730;
              var statearr_9732_9765 = state_9730__$1;
              statearr_9732_9765[2] = inst_9726;
              statearr_9732_9765[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9731 === 1) {
                var inst_9693 = new Array(n);
                var inst_9694 = inst_9693;
                var inst_9695 = 0;
                var state_9730__$1 = function() {
                  var statearr_9733 = state_9730;
                  statearr_9733[7] = inst_9694;
                  statearr_9733[8] = inst_9695;
                  return statearr_9733;
                }();
                var statearr_9734_9766 = state_9730__$1;
                statearr_9734_9766[2] = null;
                statearr_9734_9766[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9731 === 4) {
                  var inst_9698 = state_9730[9];
                  var inst_9698__$1 = state_9730[2];
                  var inst_9699 = inst_9698__$1 == null;
                  var inst_9700 = cljs.core.not.call(null, inst_9699);
                  var state_9730__$1 = function() {
                    var statearr_9735 = state_9730;
                    statearr_9735[9] = inst_9698__$1;
                    return statearr_9735;
                  }();
                  if (inst_9700) {
                    var statearr_9736_9767 = state_9730__$1;
                    statearr_9736_9767[1] = 5;
                  } else {
                    var statearr_9737_9768 = state_9730__$1;
                    statearr_9737_9768[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9731 === 15) {
                    var inst_9720 = state_9730[2];
                    var state_9730__$1 = state_9730;
                    var statearr_9738_9769 = state_9730__$1;
                    statearr_9738_9769[2] = inst_9720;
                    statearr_9738_9769[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9731 === 13) {
                      var state_9730__$1 = state_9730;
                      var statearr_9739_9770 = state_9730__$1;
                      statearr_9739_9770[2] = null;
                      statearr_9739_9770[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9731 === 6) {
                        var inst_9695 = state_9730[8];
                        var inst_9716 = inst_9695 > 0;
                        var state_9730__$1 = state_9730;
                        if (cljs.core.truth_(inst_9716)) {
                          var statearr_9740_9771 = state_9730__$1;
                          statearr_9740_9771[1] = 12;
                        } else {
                          var statearr_9741_9772 = state_9730__$1;
                          statearr_9741_9772[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9731 === 3) {
                          var inst_9728 = state_9730[2];
                          var state_9730__$1 = state_9730;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9730__$1, inst_9728);
                        } else {
                          if (state_val_9731 === 12) {
                            var inst_9694 = state_9730[7];
                            var inst_9718 = cljs.core.vec.call(null, inst_9694);
                            var state_9730__$1 = state_9730;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9730__$1, 15, out, inst_9718);
                          } else {
                            if (state_val_9731 === 2) {
                              var state_9730__$1 = state_9730;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9730__$1, 4, ch);
                            } else {
                              if (state_val_9731 === 11) {
                                var inst_9710 = state_9730[2];
                                var inst_9711 = new Array(n);
                                var inst_9694 = inst_9711;
                                var inst_9695 = 0;
                                var state_9730__$1 = function() {
                                  var statearr_9742 = state_9730;
                                  statearr_9742[7] = inst_9694;
                                  statearr_9742[8] = inst_9695;
                                  statearr_9742[10] = inst_9710;
                                  return statearr_9742;
                                }();
                                var statearr_9743_9773 = state_9730__$1;
                                statearr_9743_9773[2] = null;
                                statearr_9743_9773[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9731 === 9) {
                                  var inst_9694 = state_9730[7];
                                  var inst_9708 = cljs.core.vec.call(null, inst_9694);
                                  var state_9730__$1 = state_9730;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9730__$1, 11, out, inst_9708);
                                } else {
                                  if (state_val_9731 === 5) {
                                    var inst_9694 = state_9730[7];
                                    var inst_9695 = state_9730[8];
                                    var inst_9703 = state_9730[11];
                                    var inst_9698 = state_9730[9];
                                    var inst_9702 = inst_9694[inst_9695] = inst_9698;
                                    var inst_9703__$1 = inst_9695 + 1;
                                    var inst_9704 = inst_9703__$1 < n;
                                    var state_9730__$1 = function() {
                                      var statearr_9744 = state_9730;
                                      statearr_9744[12] = inst_9702;
                                      statearr_9744[11] = inst_9703__$1;
                                      return statearr_9744;
                                    }();
                                    if (cljs.core.truth_(inst_9704)) {
                                      var statearr_9745_9774 = state_9730__$1;
                                      statearr_9745_9774[1] = 8;
                                    } else {
                                      var statearr_9746_9775 = state_9730__$1;
                                      statearr_9746_9775[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9731 === 14) {
                                      var inst_9723 = state_9730[2];
                                      var inst_9724 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_9730__$1 = function() {
                                        var statearr_9748 = state_9730;
                                        statearr_9748[13] = inst_9723;
                                        return statearr_9748;
                                      }();
                                      var statearr_9749_9776 = state_9730__$1;
                                      statearr_9749_9776[2] = inst_9724;
                                      statearr_9749_9776[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9731 === 10) {
                                        var inst_9714 = state_9730[2];
                                        var state_9730__$1 = state_9730;
                                        var statearr_9750_9777 = state_9730__$1;
                                        statearr_9750_9777[2] = inst_9714;
                                        statearr_9750_9777[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9731 === 8) {
                                          var inst_9694 = state_9730[7];
                                          var inst_9703 = state_9730[11];
                                          var tmp9747 = inst_9694;
                                          var inst_9694__$1 = tmp9747;
                                          var inst_9695 = inst_9703;
                                          var state_9730__$1 = function() {
                                            var statearr_9751 = state_9730;
                                            statearr_9751[7] = inst_9694__$1;
                                            statearr_9751[8] = inst_9695;
                                            return statearr_9751;
                                          }();
                                          var statearr_9752_9778 = state_9730__$1;
                                          statearr_9752_9778[2] = null;
                                          statearr_9752_9778[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9764, out);
        return function(switch__7029__auto__, c__7141__auto___9764, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9756 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9756[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9756[1] = 1;
              return statearr_9756;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9730) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9730);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9757) {
                    if (e9757 instanceof Object) {
                      var ex__7033__auto__ = e9757;
                      var statearr_9758_9779 = state_9730;
                      statearr_9758_9779[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9730);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9757;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9780 = state_9730;
                  state_9730 = G__9780;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9730) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9730);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9764, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9759 = f__7142__auto__.call(null);
        statearr_9759[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9764;
        return statearr_9759;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9764, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args9781 = [];
  var len__5727__auto___9855 = arguments.length;
  var i__5728__auto___9856 = 0;
  while (true) {
    if (i__5728__auto___9856 < len__5727__auto___9855) {
      args9781.push(arguments[i__5728__auto___9856]);
      var G__9857 = i__5728__auto___9856 + 1;
      i__5728__auto___9856 = G__9857;
      continue;
    } else {
    }
    break;
  }
  var G__9783 = args9781.length;
  switch(G__9783) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9781.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__7141__auto___9859 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__7141__auto___9859, out) {
    return function() {
      var f__7142__auto__ = function() {
        var switch__7029__auto__ = function(c__7141__auto___9859, out) {
          return function(state_9825) {
            var state_val_9826 = state_9825[1];
            if (state_val_9826 === 7) {
              var inst_9821 = state_9825[2];
              var state_9825__$1 = state_9825;
              var statearr_9827_9860 = state_9825__$1;
              statearr_9827_9860[2] = inst_9821;
              statearr_9827_9860[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9826 === 1) {
                var inst_9784 = [];
                var inst_9785 = inst_9784;
                var inst_9786 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_9825__$1 = function() {
                  var statearr_9828 = state_9825;
                  statearr_9828[7] = inst_9786;
                  statearr_9828[8] = inst_9785;
                  return statearr_9828;
                }();
                var statearr_9829_9861 = state_9825__$1;
                statearr_9829_9861[2] = null;
                statearr_9829_9861[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9826 === 4) {
                  var inst_9789 = state_9825[9];
                  var inst_9789__$1 = state_9825[2];
                  var inst_9790 = inst_9789__$1 == null;
                  var inst_9791 = cljs.core.not.call(null, inst_9790);
                  var state_9825__$1 = function() {
                    var statearr_9830 = state_9825;
                    statearr_9830[9] = inst_9789__$1;
                    return statearr_9830;
                  }();
                  if (inst_9791) {
                    var statearr_9831_9862 = state_9825__$1;
                    statearr_9831_9862[1] = 5;
                  } else {
                    var statearr_9832_9863 = state_9825__$1;
                    statearr_9832_9863[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9826 === 15) {
                    var inst_9815 = state_9825[2];
                    var state_9825__$1 = state_9825;
                    var statearr_9833_9864 = state_9825__$1;
                    statearr_9833_9864[2] = inst_9815;
                    statearr_9833_9864[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9826 === 13) {
                      var state_9825__$1 = state_9825;
                      var statearr_9834_9865 = state_9825__$1;
                      statearr_9834_9865[2] = null;
                      statearr_9834_9865[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9826 === 6) {
                        var inst_9785 = state_9825[8];
                        var inst_9810 = inst_9785.length;
                        var inst_9811 = inst_9810 > 0;
                        var state_9825__$1 = state_9825;
                        if (cljs.core.truth_(inst_9811)) {
                          var statearr_9835_9866 = state_9825__$1;
                          statearr_9835_9866[1] = 12;
                        } else {
                          var statearr_9836_9867 = state_9825__$1;
                          statearr_9836_9867[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9826 === 3) {
                          var inst_9823 = state_9825[2];
                          var state_9825__$1 = state_9825;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9825__$1, inst_9823);
                        } else {
                          if (state_val_9826 === 12) {
                            var inst_9785 = state_9825[8];
                            var inst_9813 = cljs.core.vec.call(null, inst_9785);
                            var state_9825__$1 = state_9825;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9825__$1, 15, out, inst_9813);
                          } else {
                            if (state_val_9826 === 2) {
                              var state_9825__$1 = state_9825;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9825__$1, 4, ch);
                            } else {
                              if (state_val_9826 === 11) {
                                var inst_9789 = state_9825[9];
                                var inst_9793 = state_9825[10];
                                var inst_9803 = state_9825[2];
                                var inst_9804 = [];
                                var inst_9805 = inst_9804.push(inst_9789);
                                var inst_9785 = inst_9804;
                                var inst_9786 = inst_9793;
                                var state_9825__$1 = function() {
                                  var statearr_9837 = state_9825;
                                  statearr_9837[11] = inst_9805;
                                  statearr_9837[7] = inst_9786;
                                  statearr_9837[12] = inst_9803;
                                  statearr_9837[8] = inst_9785;
                                  return statearr_9837;
                                }();
                                var statearr_9838_9868 = state_9825__$1;
                                statearr_9838_9868[2] = null;
                                statearr_9838_9868[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9826 === 9) {
                                  var inst_9785 = state_9825[8];
                                  var inst_9801 = cljs.core.vec.call(null, inst_9785);
                                  var state_9825__$1 = state_9825;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9825__$1, 11, out, inst_9801);
                                } else {
                                  if (state_val_9826 === 5) {
                                    var inst_9786 = state_9825[7];
                                    var inst_9789 = state_9825[9];
                                    var inst_9793 = state_9825[10];
                                    var inst_9793__$1 = f.call(null, inst_9789);
                                    var inst_9794 = cljs.core._EQ_.call(null, inst_9793__$1, inst_9786);
                                    var inst_9795 = cljs.core.keyword_identical_QMARK_.call(null, inst_9786, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_9796 = inst_9794 || inst_9795;
                                    var state_9825__$1 = function() {
                                      var statearr_9839 = state_9825;
                                      statearr_9839[10] = inst_9793__$1;
                                      return statearr_9839;
                                    }();
                                    if (cljs.core.truth_(inst_9796)) {
                                      var statearr_9840_9869 = state_9825__$1;
                                      statearr_9840_9869[1] = 8;
                                    } else {
                                      var statearr_9841_9870 = state_9825__$1;
                                      statearr_9841_9870[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9826 === 14) {
                                      var inst_9818 = state_9825[2];
                                      var inst_9819 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_9825__$1 = function() {
                                        var statearr_9843 = state_9825;
                                        statearr_9843[13] = inst_9818;
                                        return statearr_9843;
                                      }();
                                      var statearr_9844_9871 = state_9825__$1;
                                      statearr_9844_9871[2] = inst_9819;
                                      statearr_9844_9871[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9826 === 10) {
                                        var inst_9808 = state_9825[2];
                                        var state_9825__$1 = state_9825;
                                        var statearr_9845_9872 = state_9825__$1;
                                        statearr_9845_9872[2] = inst_9808;
                                        statearr_9845_9872[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9826 === 8) {
                                          var inst_9789 = state_9825[9];
                                          var inst_9793 = state_9825[10];
                                          var inst_9785 = state_9825[8];
                                          var inst_9798 = inst_9785.push(inst_9789);
                                          var tmp9842 = inst_9785;
                                          var inst_9785__$1 = tmp9842;
                                          var inst_9786 = inst_9793;
                                          var state_9825__$1 = function() {
                                            var statearr_9846 = state_9825;
                                            statearr_9846[7] = inst_9786;
                                            statearr_9846[14] = inst_9798;
                                            statearr_9846[8] = inst_9785__$1;
                                            return statearr_9846;
                                          }();
                                          var statearr_9847_9873 = state_9825__$1;
                                          statearr_9847_9873[2] = null;
                                          statearr_9847_9873[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__7141__auto___9859, out);
        return function(switch__7029__auto__, c__7141__auto___9859, out) {
          return function() {
            var cljs$core$async$state_machine__7030__auto__ = null;
            var cljs$core$async$state_machine__7030__auto____0 = function() {
              var statearr_9851 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9851[0] = cljs$core$async$state_machine__7030__auto__;
              statearr_9851[1] = 1;
              return statearr_9851;
            };
            var cljs$core$async$state_machine__7030__auto____1 = function(state_9825) {
              while (true) {
                var ret_value__7031__auto__ = function() {
                  try {
                    while (true) {
                      var result__7032__auto__ = switch__7029__auto__.call(null, state_9825);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7032__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7032__auto__;
                      }
                      break;
                    }
                  } catch (e9852) {
                    if (e9852 instanceof Object) {
                      var ex__7033__auto__ = e9852;
                      var statearr_9853_9874 = state_9825;
                      statearr_9853_9874[5] = ex__7033__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9825);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9852;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7031__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9875 = state_9825;
                  state_9825 = G__9875;
                  continue;
                } else {
                  return ret_value__7031__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__7030__auto__ = function(state_9825) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__7030__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__7030__auto____1.call(this, state_9825);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__7030__auto____0;
            cljs$core$async$state_machine__7030__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__7030__auto____1;
            return cljs$core$async$state_machine__7030__auto__;
          }();
        }(switch__7029__auto__, c__7141__auto___9859, out);
      }();
      var state__7143__auto__ = function() {
        var statearr_9854 = f__7142__auto__.call(null);
        statearr_9854[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__7141__auto___9859;
        return statearr_9854;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__7143__auto__);
    };
  }(c__7141__auto___9859, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.operaVersion_ = function() {
  var version = goog.global.opera.version;
  try {
    return version();
  } catch (e) {
    return version;
  }
};
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    return goog.userAgent.operaVersion_();
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", 
TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", 
DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "'");
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "'");
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    if (goog.dom.canUseQuerySelector_(parent)) {
      retVal = parent.querySelector("." + className);
    } else {
      retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
    }
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = (doc.documentElement);
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = (doc.createElement(goog.dom.TagName.TABLE));
  var tbody = table.appendChild(doc.createElement(goog.dom.TagName.TBODY));
  for (var i = 0;i < rows;i++) {
    var tr = doc.createElement(goog.dom.TagName.TR);
    for (var j = 0;j < columns;j++) {
      var td = doc.createElement(goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.create("br"), html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch((node).tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return (element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return (goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return (node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return (node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return (node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return (node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return (node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return (node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement(goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return (goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps));
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return !goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return (prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    box.expandToIncludeCoordinate(arguments[i]);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {
  this.top = Math.min(this.top, coord.y);
  this.right = Math.max(this.right, coord.x);
  this.bottom = Math.max(this.bottom, coord.y);
  this.left = Math.min(this.left, coord.x);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromPositionAndSize = function(position, size) {
  return new goog.math.Rect(position.x, position.y, size.width, size.height);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return [a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.events.BrowserEvent");
goog.forwardDeclare("goog.events.Event");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    for (var key in style) {
      goog.style.setStyle_(element, style[key], key);
    }
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.styleNameCache_ = {};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var propertyName = goog.style.styleNameCache_[style];
  if (!propertyName) {
    var camelStyle = goog.string.toCamelCase(style);
    propertyName = camelStyle;
    if (element.style[camelStyle] === undefined) {
      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
      if (element.style[prefixedStyle] !== undefined) {
        propertyName = prefixedStyle;
      }
    }
    goog.style.styleNameCache_[style] = propertyName;
  }
  return propertyName;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), false);
  el.style.top = goog.style.getPixelStyleValue_((y), false);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate((element).offsetLeft, (element).offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return {"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return rect;
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host) {
      parent = parent.host;
    }
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return (parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  if (container == goog.dom.getDocumentScrollElement()) {
    var relX = elementPos.x - container.scrollLeft;
    var relY = elementPos.y - container.scrollTop;
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10)) {
      relX += containerBorder.left;
      relY += containerBorder.top;
    }
  } else {
    var relX = elementPos.x - containerPos.x - containerBorder.left;
    var relY = elementPos.y - containerPos.y - containerBorder.top;
  }
  var spaceX = container.clientWidth - (element).offsetWidth;
  var spaceY = container.clientHeight - (element).offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  goog.asserts.assertObject(el, "Parameter is required");
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  var box = goog.style.getBoundingClientRect_(el);
  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
  pos.x = box.left + scrollCoord.x;
  pos.y = box.top + scrollCoord.y;
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && currentWin != currentWin.parent && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var box = goog.style.getBoundingClientRect_(el);
  return new goog.math.Coordinate(box.left, box.top);
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var targetEvent = el.changedTouches ? el.changedTouches[0] : el;
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, (el).offsetLeft + dx, (el).offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, h);
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = (element).offsetWidth;
  var offsetHeight = (element).offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];
      head = dh.createDom(goog.dom.TagName.HEAD);
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom(goog.dom.TagName.STYLE);
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    style.display = "inline-block";
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    if (el.style) {
      el.style[name] = value;
    }
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        if (descendant.style) {
          descendant.style[name] = value;
        }
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size((element).offsetWidth, (element).offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.match(/\s*([\w-]+)\s*\:(.+)/);
    if (keyValue) {
      var styleName = keyValue[1];
      var styleValue = goog.string.trim(keyValue[2]);
      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("yolk.bacon");
goog.require("cljs.core");
yolk.bacon.next = function yolk$bacon$next(value) {
  return new Bacon.Next(value);
};
yolk.bacon.initial = function yolk$bacon$initial(value) {
  return new Bacon.Initial(value);
};
yolk.bacon.end = function yolk$bacon$end() {
  return new Bacon.End;
};
yolk.bacon.error = function yolk$bacon$error(e) {
  return new Bacon.Error(e);
};
yolk.bacon.no_more = Bacon._noMore;
yolk.bacon.from_promise = function yolk$bacon$from_promise(promise) {
  return Bacon.fromPromise(promise);
};
yolk.bacon.once = function yolk$bacon$once(var_args) {
  var args12962 = [];
  var len__5727__auto___12965 = arguments.length;
  var i__5728__auto___12966 = 0;
  while (true) {
    if (i__5728__auto___12966 < len__5727__auto___12965) {
      args12962.push(arguments[i__5728__auto___12966]);
      var G__12967 = i__5728__auto___12966 + 1;
      i__5728__auto___12966 = G__12967;
      continue;
    } else {
    }
    break;
  }
  var G__12964 = args12962.length;
  switch(G__12964) {
    case 0:
      return yolk.bacon.once.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return yolk.bacon.once.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12962.length)].join(""));;
  }
};
yolk.bacon.once.cljs$core$IFn$_invoke$arity$0 = function() {
  return Bacon.once();
};
yolk.bacon.once.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return Bacon.once(x);
};
yolk.bacon.once.cljs$lang$maxFixedArity = 1;
yolk.bacon.from_array = function yolk$bacon$from_array(values) {
  return Bacon.fromArray(cljs.core.into_array.call(null, values));
};
yolk.bacon.interval = function yolk$bacon$interval(ms, value) {
  return Bacon.interval(ms, value);
};
yolk.bacon.sequentially = function yolk$bacon$sequentially(ms, values) {
  return Bacon.sequentially(ms, cljs.core.into_array.call(null, values));
};
yolk.bacon.repeatedly = function yolk$bacon$repeatedly(ms, values) {
  return Bacon.repeatedly(ms, values);
};
yolk.bacon.never = function yolk$bacon$never() {
  return Bacon.never();
};
yolk.bacon.from_event_target = function yolk$bacon$from_event_target(target, event_name) {
  return Bacon.fromEventTarget(target, event_name);
};
yolk.bacon.from_poll = function yolk$bacon$from_poll(interval, f) {
  return Bacon.fromPoll(interval, f);
};
yolk.bacon.later = function yolk$bacon$later(delay, value) {
  return Bacon.later(delay, value);
};
yolk.bacon.from_node_callback = function yolk$bacon$from_node_callback(f) {
  return Bacon.fromNodeCallback(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null));
};
yolk.bacon.from_callback = function yolk$bacon$from_callback(f) {
  return Bacon.fromCallback(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null));
};
yolk.bacon.kw__GT_fn = function yolk$bacon$kw__GT_fn(maybe_kw) {
  if (maybe_kw instanceof cljs.core.Keyword) {
    return function(p1__12969_SHARP_) {
      return maybe_kw.call(null, p1__12969_SHARP_);
    };
  } else {
    return maybe_kw;
  }
};
yolk.bacon.map = function yolk$bacon$map(observable, f_or_property) {
  return observable.map(yolk.bacon.kw__GT_fn.call(null, f_or_property));
};
yolk.bacon.map_apply = function yolk$bacon$map_apply(obs, f) {
  return yolk.bacon.map.call(null, obs, function(vs) {
    return cljs.core.apply.call(null, f, vs);
  });
};
yolk.bacon.map_error = function yolk$bacon$map_error(observable, f) {
  return observable.mapError(f);
};
yolk.bacon.map_end = function yolk$bacon$map_end(observable, f_or_property) {
  return observable.mapEnd(yolk.bacon.kw__GT_fn.call(null, f_or_property));
};
yolk.bacon.filter = function yolk$bacon$filter(var_args) {
  var args12970 = [];
  var len__5727__auto___12973 = arguments.length;
  var i__5728__auto___12974 = 0;
  while (true) {
    if (i__5728__auto___12974 < len__5727__auto___12973) {
      args12970.push(arguments[i__5728__auto___12974]);
      var G__12975 = i__5728__auto___12974 + 1;
      i__5728__auto___12974 = G__12975;
      continue;
    } else {
    }
    break;
  }
  var G__12972 = args12970.length;
  switch(G__12972) {
    case 1:
      return yolk.bacon.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return yolk.bacon.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12970.length)].join(""));;
  }
};
yolk.bacon.filter.cljs$core$IFn$_invoke$arity$1 = function(observable) {
  return yolk.bacon.filter.call(null, observable, cljs.core.identity);
};
yolk.bacon.filter.cljs$core$IFn$_invoke$arity$2 = function(observable, f_or_property) {
  return observable.filter(yolk.bacon.kw__GT_fn.call(null, f_or_property));
};
yolk.bacon.filter.cljs$lang$maxFixedArity = 2;
yolk.bacon.take_while = function yolk$bacon$take_while(observable, f) {
  return observable.takeWhile(yolk.bacon.kw__GT_fn.call(null, f));
};
yolk.bacon.take = function yolk$bacon$take(observable, n) {
  return observable.take(n);
};
yolk.bacon.take_until = function yolk$bacon$take_until(observable, other) {
  return observable.takeUntil(other);
};
yolk.bacon.skip = function yolk$bacon$skip(observable, n) {
  return observable.skip(n);
};
yolk.bacon.delay = function yolk$bacon$delay(observable, ms) {
  return observable.delay(ms);
};
yolk.bacon.throttle = function yolk$bacon$throttle(observable, ms) {
  return observable.throttle(ms);
};
yolk.bacon.debounce = function yolk$bacon$debounce(observable, ms) {
  return observable.debounce(ms);
};
yolk.bacon.debounce_immediate = function yolk$bacon$debounce_immediate(observable, ms) {
  return observable.debounceImmediate(ms);
};
yolk.bacon.do_action = function yolk$bacon$do_action(observable, f) {
  return observable.doAction(f);
};
yolk.bacon.not = function yolk$bacon$not(observable) {
  return observable.not();
};
yolk.bacon.flat_map = function yolk$bacon$flat_map(observable, f) {
  return observable.flatMap(f);
};
yolk.bacon.flat_map_latest = function yolk$bacon$flat_map_latest(observable, f) {
  return observable.flatMapLatest(f);
};
yolk.bacon.flat_map_first = function yolk$bacon$flat_map_first(observable, f) {
  return observable.flatMapFirst(f);
};
yolk.bacon.scan = function yolk$bacon$scan(observable, seed, f) {
  return observable.scan(seed, f);
};
yolk.bacon.fold = function yolk$bacon$fold(observable, seed, f) {
  return observable.fold(seed, f);
};
yolk.bacon.diff = function yolk$bacon$diff(observable, start, f) {
  return observable.diff(start, f);
};
yolk.bacon.sliding_window = function yolk$bacon$sliding_window(var_args) {
  var args12977 = [];
  var len__5727__auto___12980 = arguments.length;
  var i__5728__auto___12981 = 0;
  while (true) {
    if (i__5728__auto___12981 < len__5727__auto___12980) {
      args12977.push(arguments[i__5728__auto___12981]);
      var G__12982 = i__5728__auto___12981 + 1;
      i__5728__auto___12981 = G__12982;
      continue;
    } else {
    }
    break;
  }
  var G__12979 = args12977.length;
  switch(G__12979) {
    case 3:
      return yolk.bacon.sliding_window.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return yolk.bacon.sliding_window.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12977.length)].join(""));;
  }
};
yolk.bacon.sliding_window.cljs$core$IFn$_invoke$arity$3 = function(observable, n, min) {
  return observable.slidingWindow(n, min);
};
yolk.bacon.sliding_window.cljs$core$IFn$_invoke$arity$2 = function(observable, n) {
  return observable.slidingWindow(n);
};
yolk.bacon.sliding_window.cljs$lang$maxFixedArity = 3;
yolk.bacon.log = function yolk$bacon$log(stream) {
  return stream.log();
};
yolk.bacon.log_pr = function yolk$bacon$log_pr(stream) {
  return yolk.bacon.do_action.call(null, stream, function(p1__12984_SHARP_) {
    return console.log(cljs.core.pr_str.call(null, p1__12984_SHARP_));
  });
};
yolk.bacon.on_value = function yolk$bacon$on_value(observable, f) {
  return observable.onValue(f);
};
yolk.bacon.on_values = function yolk$bacon$on_values(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___12986 = arguments.length;
  var i__5728__auto___12987 = 0;
  while (true) {
    if (i__5728__auto___12987 < len__5727__auto___12986) {
      args__5734__auto__.push(arguments[i__5728__auto___12987]);
      var G__12988 = i__5728__auto___12987 + 1;
      i__5728__auto___12987 = G__12988;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.on_values.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.on_values.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  return cljs.core.apply.call(null, Bacon.onValues, args);
};
yolk.bacon.on_values.cljs$lang$maxFixedArity = 0;
yolk.bacon.on_values.cljs$lang$applyTo = function(seq12985) {
  return yolk.bacon.on_values.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq12985));
};
yolk.bacon.on_error = function yolk$bacon$on_error(observable, f) {
  return observable.onError(f);
};
yolk.bacon.on_end = function yolk$bacon$on_end(observable, f) {
  return observable.onEnd(f);
};
yolk.bacon.on_if = function yolk$bacon$on_if(obs, on_true, on_false) {
  yolk.bacon.on_value.call(null, yolk.bacon.filter.call(null, obs), on_true);
  return yolk.bacon.on_value.call(null, yolk.bacon.filter.call(null, yolk.bacon.not.call(null, obs)), on_false);
};
yolk.bacon.errors = function yolk$bacon$errors(observable) {
  return observable.errors();
};
yolk.bacon.end_on_error = function yolk$bacon$end_on_error(var_args) {
  var args12989 = [];
  var len__5727__auto___12992 = arguments.length;
  var i__5728__auto___12993 = 0;
  while (true) {
    if (i__5728__auto___12993 < len__5727__auto___12992) {
      args12989.push(arguments[i__5728__auto___12993]);
      var G__12994 = i__5728__auto___12993 + 1;
      i__5728__auto___12993 = G__12994;
      continue;
    } else {
    }
    break;
  }
  var G__12991 = args12989.length;
  switch(G__12991) {
    case 1:
      return yolk.bacon.end_on_error.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return yolk.bacon.end_on_error.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12989.length)].join(""));;
  }
};
yolk.bacon.end_on_error.cljs$core$IFn$_invoke$arity$1 = function(observable) {
  return observable.endOnError();
};
yolk.bacon.end_on_error.cljs$core$IFn$_invoke$arity$2 = function(observable, f) {
  return observable.endOnError(f);
};
yolk.bacon.end_on_error.cljs$lang$maxFixedArity = 2;
yolk.bacon.subscribe = function yolk$bacon$subscribe(observable, f) {
  return observable.subscribe(f);
};
yolk.bacon.dispose = function yolk$bacon$dispose(d) {
  return d.dispose();
};
yolk.bacon.skip_duplicates = function yolk$bacon$skip_duplicates(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13000 = arguments.length;
  var i__5728__auto___13001 = 0;
  while (true) {
    if (i__5728__auto___13001 < len__5727__auto___13000) {
      args__5734__auto__.push(arguments[i__5728__auto___13001]);
      var G__13002 = i__5728__auto___13001 + 1;
      i__5728__auto___13001 = G__13002;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 1 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(1), 0) : null;
  return yolk.bacon.skip_duplicates.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5735__auto__);
};
yolk.bacon.skip_duplicates.cljs$core$IFn$_invoke$arity$variadic = function(observable, p__12998) {
  var vec__12999 = p__12998;
  var is_equal = cljs.core.nth.call(null, vec__12999, 0, null);
  return observable.skipDuplicates(is_equal);
};
yolk.bacon.skip_duplicates.cljs$lang$maxFixedArity = 1;
yolk.bacon.skip_duplicates.cljs$lang$applyTo = function(seq12996) {
  var G__12997 = cljs.core.first.call(null, seq12996);
  var seq12996__$1 = cljs.core.next.call(null, seq12996);
  return yolk.bacon.skip_duplicates.cljs$core$IFn$_invoke$arity$variadic(G__12997, seq12996__$1);
};
yolk.bacon.event_stream = function yolk$bacon$event_stream(f) {
  return new Bacon.EventStream(f);
};
yolk.bacon.merge = function yolk$bacon$merge(stream, stream2) {
  return stream.merge(stream2);
};
yolk.bacon.buffer_with_time = function yolk$bacon$buffer_with_time(stream, ms_or_defer_fn) {
  return stream.bufferWithTime(ms_or_defer_fn);
};
yolk.bacon.buffer_with_count = function yolk$bacon$buffer_with_count(stream, n) {
  return stream.bufferWithCount(n);
};
yolk.bacon.buffer_with_time_or_count = function yolk$bacon$buffer_with_time_or_count(stream, delay, count) {
  return stream.bufferWithTimeOrCount(delay, count);
};
yolk.bacon.to_property = function yolk$bacon$to_property(var_args) {
  var args13003 = [];
  var len__5727__auto___13006 = arguments.length;
  var i__5728__auto___13007 = 0;
  while (true) {
    if (i__5728__auto___13007 < len__5727__auto___13006) {
      args13003.push(arguments[i__5728__auto___13007]);
      var G__13008 = i__5728__auto___13007 + 1;
      i__5728__auto___13007 = G__13008;
      continue;
    } else {
    }
    break;
  }
  var G__13005 = args13003.length;
  switch(G__13005) {
    case 1:
      return yolk.bacon.to_property.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return yolk.bacon.to_property.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13003.length)].join(""));;
  }
};
yolk.bacon.to_property.cljs$core$IFn$_invoke$arity$1 = function(stream) {
  return stream.toProperty();
};
yolk.bacon.to_property.cljs$core$IFn$_invoke$arity$2 = function(stream, x) {
  return stream.toProperty(x);
};
yolk.bacon.to_property.cljs$lang$maxFixedArity = 2;
yolk.bacon.awaiting = function yolk$bacon$awaiting(stream_or_property, stream2_or_property2) {
  return stream_or_property.awaiting(stream2_or_property2);
};
yolk.bacon.zip = function yolk$bacon$zip(stream, stream2, f) {
  return stream.zip(stream2, f);
};
yolk.bacon.skip_until = function yolk$bacon$skip_until(stream, starter) {
  return stream.skipUntil(starter);
};
yolk.bacon.skip_while = function yolk$bacon$skip_while(stream, predicate) {
  return stream.skipWhile(predicate);
};
yolk.bacon.constant = function yolk$bacon$constant(x) {
  return Bacon.constant(x);
};
yolk.bacon.assign = function yolk$bacon$assign(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13014 = arguments.length;
  var i__5728__auto___13015 = 0;
  while (true) {
    if (i__5728__auto___13015 < len__5727__auto___13014) {
      args__5734__auto__.push(arguments[i__5728__auto___13015]);
      var G__13016 = i__5728__auto___13015 + 1;
      i__5728__auto___13015 = G__13016;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 3 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(3), 0) : null;
  return yolk.bacon.assign.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5735__auto__);
};
yolk.bacon.assign.cljs$core$IFn$_invoke$arity$variadic = function(prop, target, f, args) {
  return yolk.bacon.on_value.call(null, prop, function(v) {
    return cljs.core.apply.call(null, f, v, args);
  });
};
yolk.bacon.assign.cljs$lang$maxFixedArity = 3;
yolk.bacon.assign.cljs$lang$applyTo = function(seq13010) {
  var G__13011 = cljs.core.first.call(null, seq13010);
  var seq13010__$1 = cljs.core.next.call(null, seq13010);
  var G__13012 = cljs.core.first.call(null, seq13010__$1);
  var seq13010__$2 = cljs.core.next.call(null, seq13010__$1);
  var G__13013 = cljs.core.first.call(null, seq13010__$2);
  var seq13010__$3 = cljs.core.next.call(null, seq13010__$2);
  return yolk.bacon.assign.cljs$core$IFn$_invoke$arity$variadic(G__13011, G__13012, G__13013, seq13010__$3);
};
yolk.bacon.combine = function yolk$bacon$combine(var_args) {
  var args13017 = [];
  var len__5727__auto___13020 = arguments.length;
  var i__5728__auto___13021 = 0;
  while (true) {
    if (i__5728__auto___13021 < len__5727__auto___13020) {
      args13017.push(arguments[i__5728__auto___13021]);
      var G__13022 = i__5728__auto___13021 + 1;
      i__5728__auto___13021 = G__13022;
      continue;
    } else {
    }
    break;
  }
  var G__13019 = args13017.length;
  switch(G__13019) {
    case 2:
      return yolk.bacon.combine.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return yolk.bacon.combine.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13017.length)].join(""));;
  }
};
yolk.bacon.combine.cljs$core$IFn$_invoke$arity$2 = function(prop, prop2) {
  return prop.combine(prop2);
};
yolk.bacon.combine.cljs$core$IFn$_invoke$arity$3 = function(prop, prop2, f) {
  return prop.combine(prop2, f);
};
yolk.bacon.combine.cljs$lang$maxFixedArity = 3;
yolk.bacon.sample = function yolk$bacon$sample(prop, ms) {
  return prop.sample(ms);
};
yolk.bacon.sampled_by = function yolk$bacon$sampled_by(var_args) {
  var args13024 = [];
  var len__5727__auto___13027 = arguments.length;
  var i__5728__auto___13028 = 0;
  while (true) {
    if (i__5728__auto___13028 < len__5727__auto___13027) {
      args13024.push(arguments[i__5728__auto___13028]);
      var G__13029 = i__5728__auto___13028 + 1;
      i__5728__auto___13028 = G__13029;
      continue;
    } else {
    }
    break;
  }
  var G__13026 = args13024.length;
  switch(G__13026) {
    case 2:
      return yolk.bacon.sampled_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return yolk.bacon.sampled_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13024.length)].join(""));;
  }
};
yolk.bacon.sampled_by.cljs$core$IFn$_invoke$arity$2 = function(prop_or_stream, observable) {
  return prop_or_stream.sampledBy(observable);
};
yolk.bacon.sampled_by.cljs$core$IFn$_invoke$arity$3 = function(prop_or_stream, observable, f) {
  return prop_or_stream.sampledBy(observable, f);
};
yolk.bacon.sampled_by.cljs$lang$maxFixedArity = 3;
yolk.bacon.changes = function yolk$bacon$changes(prop) {
  return prop.changes();
};
yolk.bacon.and = function yolk$bacon$and(prop, prop2) {
  return prop.and(prop2);
};
yolk.bacon.or = function yolk$bacon$or(prop, prop2) {
  return prop.or(prop2);
};
yolk.bacon.start_with = function yolk$bacon$start_with(prop, value) {
  return prop.startWith(value);
};
yolk.bacon.combine_as_array = function yolk$bacon$combine_as_array(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13032 = arguments.length;
  var i__5728__auto___13033 = 0;
  while (true) {
    if (i__5728__auto___13033 < len__5727__auto___13032) {
      args__5734__auto__.push(arguments[i__5728__auto___13033]);
      var G__13034 = i__5728__auto___13033 + 1;
      i__5728__auto___13033 = G__13034;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.combine_as_array.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.combine_as_array.cljs$core$IFn$_invoke$arity$variadic = function(streams) {
  return cljs.core.apply.call(null, Bacon.combineAsArray, streams);
};
yolk.bacon.combine_as_array.cljs$lang$maxFixedArity = 0;
yolk.bacon.combine_as_array.cljs$lang$applyTo = function(seq13031) {
  return yolk.bacon.combine_as_array.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13031));
};
yolk.bacon.combine_with = function yolk$bacon$combine_with(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13036 = arguments.length;
  var i__5728__auto___13037 = 0;
  while (true) {
    if (i__5728__auto___13037 < len__5727__auto___13036) {
      args__5734__auto__.push(arguments[i__5728__auto___13037]);
      var G__13038 = i__5728__auto___13037 + 1;
      i__5728__auto___13037 = G__13038;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.combine_with.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.combine_with.cljs$core$IFn$_invoke$arity$variadic = function(streams_with_fn) {
  var streams = cljs.core.butlast.call(null, streams_with_fn);
  var f = cljs.core.last.call(null, streams_with_fn);
  return cljs.core.apply.call(null, Bacon.combineWith, f, streams);
};
yolk.bacon.combine_with.cljs$lang$maxFixedArity = 0;
yolk.bacon.combine_with.cljs$lang$applyTo = function(seq13035) {
  return yolk.bacon.combine_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13035));
};
yolk.bacon.merge_all = function yolk$bacon$merge_all(streams) {
  return Bacon.mergeAll(cljs.core.into_array.call(null, streams));
};
yolk.bacon.combine_template = function yolk$bacon$combine_template(template) {
  return Bacon.combineTemplate(cljs.core.clj__GT_js.call(null, template));
};
yolk.bacon.zip_as_array = function yolk$bacon$zip_as_array(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13040 = arguments.length;
  var i__5728__auto___13041 = 0;
  while (true) {
    if (i__5728__auto___13041 < len__5727__auto___13040) {
      args__5734__auto__.push(arguments[i__5728__auto___13041]);
      var G__13042 = i__5728__auto___13041 + 1;
      i__5728__auto___13041 = G__13042;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.zip_as_array.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.zip_as_array.cljs$core$IFn$_invoke$arity$variadic = function(streams) {
  return cljs.core.apply.call(null, Bacon.zipAsArray, streams);
};
yolk.bacon.zip_as_array.cljs$lang$maxFixedArity = 0;
yolk.bacon.zip_as_array.cljs$lang$applyTo = function(seq13039) {
  return yolk.bacon.zip_as_array.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13039));
};
yolk.bacon.zip_with = function yolk$bacon$zip_with(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13044 = arguments.length;
  var i__5728__auto___13045 = 0;
  while (true) {
    if (i__5728__auto___13045 < len__5727__auto___13044) {
      args__5734__auto__.push(arguments[i__5728__auto___13045]);
      var G__13046 = i__5728__auto___13045 + 1;
      i__5728__auto___13045 = G__13046;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.zip_with.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.zip_with.cljs$core$IFn$_invoke$arity$variadic = function(streams_with_fn) {
  var streams = cljs.core.butlast.call(null, streams_with_fn);
  var f = cljs.core.last.call(null, streams_with_fn);
  return cljs.core.apply.call(null, Bacon.zipWith, f, streams);
};
yolk.bacon.zip_with.cljs$lang$maxFixedArity = 0;
yolk.bacon.zip_with.cljs$lang$applyTo = function(seq13043) {
  return yolk.bacon.zip_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13043));
};
yolk.bacon.bus = function yolk$bacon$bus() {
  return new Bacon.Bus;
};
yolk.bacon.push = function yolk$bacon$push(bus, x) {
  return bus.push(x);
};
yolk.bacon.end_bus = function yolk$bacon$end_bus(bus) {
  return bus.end();
};
yolk.bacon.bus_error = function yolk$bacon$bus_error(bus, e) {
  return bus.error(e);
};
yolk.bacon.plug = function yolk$bacon$plug(bus, stream) {
  return bus.plug(stream);
};
yolk.bacon.make_join_args = function yolk$bacon$make_join_args(observables_PLUS_fn_pairs) {
  return cljs.core.reduce.call(null, function(results, p__13049) {
    var vec__13050 = p__13049;
    var observables = cljs.core.nth.call(null, vec__13050, 0, null);
    var fn = cljs.core.nth.call(null, vec__13050, 1, null);
    return cljs.core.concat.call(null, results, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.clj__GT_js.call(null, observables), fn], null));
  }, cljs.core.PersistentVector.EMPTY, cljs.core.partition.call(null, 2, observables_PLUS_fn_pairs));
};
yolk.bacon.when = function yolk$bacon$when(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13052 = arguments.length;
  var i__5728__auto___13053 = 0;
  while (true) {
    if (i__5728__auto___13053 < len__5727__auto___13052) {
      args__5734__auto__.push(arguments[i__5728__auto___13053]);
      var G__13054 = i__5728__auto___13053 + 1;
      i__5728__auto___13053 = G__13054;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 0 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(0), 0) : null;
  return yolk.bacon.when.cljs$core$IFn$_invoke$arity$variadic(argseq__5735__auto__);
};
yolk.bacon.when.cljs$core$IFn$_invoke$arity$variadic = function(observables_PLUS_fn_pairs) {
  return cljs.core.apply.call(null, Bacon.when, yolk.bacon.make_join_args.call(null, observables_PLUS_fn_pairs));
};
yolk.bacon.when.cljs$lang$maxFixedArity = 0;
yolk.bacon.when.cljs$lang$applyTo = function(seq13051) {
  return yolk.bacon.when.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq13051));
};
yolk.bacon.update = function yolk$bacon$update(var_args) {
  var args__5734__auto__ = [];
  var len__5727__auto___13057 = arguments.length;
  var i__5728__auto___13058 = 0;
  while (true) {
    if (i__5728__auto___13058 < len__5727__auto___13057) {
      args__5734__auto__.push(arguments[i__5728__auto___13058]);
      var G__13059 = i__5728__auto___13058 + 1;
      i__5728__auto___13058 = G__13059;
      continue;
    } else {
    }
    break;
  }
  var argseq__5735__auto__ = 1 < args__5734__auto__.length ? new cljs.core.IndexedSeq(args__5734__auto__.slice(1), 0) : null;
  return yolk.bacon.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5735__auto__);
};
yolk.bacon.update.cljs$core$IFn$_invoke$arity$variadic = function(init, observables_PLUS_fn_pairs) {
  return cljs.core.apply.call(null, Bacon.update, init, yolk.bacon.make_join_args.call(null, observables_PLUS_fn_pairs));
};
yolk.bacon.update.cljs$lang$maxFixedArity = 1;
yolk.bacon.update.cljs$lang$applyTo = function(seq13055) {
  var G__13056 = cljs.core.first.call(null, seq13055);
  var seq13055__$1 = cljs.core.next.call(null, seq13055);
  return yolk.bacon.update.cljs$core$IFn$_invoke$arity$variadic(G__13056, seq13055__$1);
};
yolk.bacon.log_with = function yolk$bacon$log_with(prefix) {
  return function(p1__13060_SHARP_) {
    return console.log(prefix, cljs.core.pr_str.call(null, p1__13060_SHARP_));
  };
};
yolk.bacon.log_action = function yolk$bacon$log_action(sexp) {
  return yolk.bacon.log_with.call(null, [cljs.core.str(sexp), cljs.core.str(" \x3d\x3e")].join(""));
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("m_clj.c9.reactive.core");
goog.require("cljs.core");
goog.require("m_clj.c9.common");
goog.require("cljs.core.async");
goog.require("yolk.bacon");
goog.require("goog.events.EventType");
goog.require("goog.events");
goog.require("goog.style");
m_clj.c9.reactive.core.render_div = function m_clj$c9$reactive$core$render_div(q) {
  return cljs.core.apply.call(null, cljs.core.str, function() {
    var iter__5440__auto__ = function m_clj$c9$reactive$core$render_div_$_iter__10788(s__10789) {
      return new cljs.core.LazySeq(null, function() {
        var s__10789__$1 = s__10789;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__10789__$1);
          if (temp__4425__auto__) {
            var s__10789__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10789__$2)) {
              var c__5438__auto__ = cljs.core.chunk_first.call(null, s__10789__$2);
              var size__5439__auto__ = cljs.core.count.call(null, c__5438__auto__);
              var b__10791 = cljs.core.chunk_buffer.call(null, size__5439__auto__);
              if (function() {
                var i__10790 = 0;
                while (true) {
                  if (i__10790 < size__5439__auto__) {
                    var p = cljs.core._nth.call(null, c__5438__auto__, i__10790);
                    cljs.core.chunk_append.call(null, b__10791, [cljs.core.str("\x3cdiv class\x3d'proc-"), cljs.core.str(p), cljs.core.str("'\x3eProcess "), cljs.core.str(p), cljs.core.str("\x3c/div\x3e")].join(""));
                    var G__10792 = i__10790 + 1;
                    i__10790 = G__10792;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10791), m_clj$c9$reactive$core$render_div_$_iter__10788.call(null, cljs.core.chunk_rest.call(null, s__10789__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10791), null);
              }
            } else {
              var p = cljs.core.first.call(null, s__10789__$2);
              return cljs.core.cons.call(null, [cljs.core.str("\x3cdiv class\x3d'proc-"), cljs.core.str(p), cljs.core.str("'\x3eProcess "), cljs.core.str(p), cljs.core.str("\x3c/div\x3e")].join(""), m_clj$c9$reactive$core$render_div_$_iter__10788.call(null, cljs.core.rest.call(null, s__10789__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5440__auto__.call(null, cljs.core.reverse.call(null, q));
  }());
};
m_clj.c9.reactive.core.start_process = function m_clj$c9$reactive$core$start_process(v, t) {
  var c = cljs.core.async.chan.call(null);
  var c__8055__auto___10855 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto___10855, c) {
    return function() {
      var f__8056__auto__ = function() {
        var switch__7990__auto__ = function(c__8055__auto___10855, c) {
          return function(state_10838) {
            var state_val_10839 = state_10838[1];
            if (state_val_10839 === 1) {
              var state_10838__$1 = state_10838;
              var statearr_10840_10856 = state_10838__$1;
              statearr_10840_10856[2] = null;
              statearr_10840_10856[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10839 === 2) {
                var state_10838__$1 = state_10838;
                var statearr_10841_10857 = state_10838__$1;
                statearr_10841_10857[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10839 === 3) {
                  var inst_10836 = state_10838[2];
                  var state_10838__$1 = state_10838;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10838__$1, inst_10836);
                } else {
                  if (state_val_10839 === 4) {
                    var inst_10826 = cljs.core.async.timeout.call(null, t);
                    var state_10838__$1 = state_10838;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10838__$1, 7, inst_10826);
                  } else {
                    if (state_val_10839 === 5) {
                      var state_10838__$1 = state_10838;
                      var statearr_10843_10858 = state_10838__$1;
                      statearr_10843_10858[2] = null;
                      statearr_10843_10858[1] = 6;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10839 === 6) {
                        var inst_10834 = state_10838[2];
                        var state_10838__$1 = state_10838;
                        var statearr_10844_10859 = state_10838__$1;
                        statearr_10844_10859[2] = inst_10834;
                        statearr_10844_10859[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10839 === 7) {
                          var inst_10828 = state_10838[2];
                          var state_10838__$1 = function() {
                            var statearr_10845 = state_10838;
                            statearr_10845[7] = inst_10828;
                            return statearr_10845;
                          }();
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10838__$1, 8, c, v);
                        } else {
                          if (state_val_10839 === 8) {
                            var inst_10830 = state_10838[2];
                            var state_10838__$1 = function() {
                              var statearr_10846 = state_10838;
                              statearr_10846[8] = inst_10830;
                              return statearr_10846;
                            }();
                            var statearr_10847_10860 = state_10838__$1;
                            statearr_10847_10860[2] = null;
                            statearr_10847_10860[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8055__auto___10855, c);
        return function(switch__7990__auto__, c__8055__auto___10855, c) {
          return function() {
            var m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__ = null;
            var m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____0 = function() {
              var statearr_10851 = [null, null, null, null, null, null, null, null, null];
              statearr_10851[0] = m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__;
              statearr_10851[1] = 1;
              return statearr_10851;
            };
            var m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____1 = function(state_10838) {
              while (true) {
                var ret_value__7992__auto__ = function() {
                  try {
                    while (true) {
                      var result__7993__auto__ = switch__7990__auto__.call(null, state_10838);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7993__auto__;
                      }
                      break;
                    }
                  } catch (e10852) {
                    if (e10852 instanceof Object) {
                      var ex__7994__auto__ = e10852;
                      var statearr_10853_10861 = state_10838;
                      statearr_10853_10861[5] = ex__7994__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10838);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10852;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10862 = state_10838;
                  state_10838 = G__10862;
                  continue;
                } else {
                  return ret_value__7992__auto__;
                }
                break;
              }
            };
            m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__ = function(state_10838) {
              switch(arguments.length) {
                case 0:
                  return m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____0.call(this);
                case 1:
                  return m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____1.call(this, state_10838);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____0;
            m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto____1;
            return m_clj$c9$reactive$core$start_process_$_state_machine__7991__auto__;
          }();
        }(switch__7990__auto__, c__8055__auto___10855, c);
      }();
      var state__8057__auto__ = function() {
        var statearr_10854 = f__8056__auto__.call(null);
        statearr_10854[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto___10855;
        return statearr_10854;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
    };
  }(c__8055__auto___10855, c));
  return c;
};
var out_10890 = m_clj.c9.common.by_id.call(null, "ex-9-11-out");
var c1_10891 = m_clj.c9.reactive.core.start_process.call(null, 1, 250);
var c2_10892 = m_clj.c9.reactive.core.start_process.call(null, 2, 1E3);
var c3_10893 = m_clj.c9.reactive.core.start_process.call(null, 3, 1500);
var c_10894 = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c1_10891, c2_10892, c3_10893], null));
var firstn_10895 = function(out_10890, c1_10891, c2_10892, c3_10893, c_10894) {
  return function(v, n) {
    if (cljs.core.count.call(null, v) <= n) {
      return v;
    } else {
      return cljs.core.subvec.call(null, v, cljs.core.count.call(null, v) - n);
    }
  };
}(out_10890, c1_10891, c2_10892, c3_10893, c_10894);
var c__8055__auto___10896 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895) {
  return function() {
    var f__8056__auto__ = function() {
      var switch__7990__auto__ = function(c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895) {
        return function(state_10876) {
          var state_val_10877 = state_10876[1];
          if (state_val_10877 === 1) {
            var inst_10863 = cljs.core.PersistentVector.EMPTY;
            var inst_10864 = inst_10863;
            var state_10876__$1 = function() {
              var statearr_10878 = state_10876;
              statearr_10878[7] = inst_10864;
              return statearr_10878;
            }();
            var statearr_10879_10897 = state_10876__$1;
            statearr_10879_10897[2] = null;
            statearr_10879_10897[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
          } else {
            if (state_val_10877 === 2) {
              var inst_10864 = state_10876[7];
              var inst_10866 = m_clj.c9.reactive.core.render_div.call(null, inst_10864);
              var inst_10867 = m_clj.c9.common.set_html_BANG_.call(null, out_10890, inst_10866);
              var state_10876__$1 = function() {
                var statearr_10880 = state_10876;
                statearr_10880[8] = inst_10867;
                return statearr_10880;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10876__$1, 4, c_10894);
            } else {
              if (state_val_10877 === 3) {
                var inst_10874 = state_10876[2];
                var state_10876__$1 = state_10876;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10876__$1, inst_10874);
              } else {
                if (state_val_10877 === 4) {
                  var inst_10864 = state_10876[7];
                  var inst_10869 = state_10876[2];
                  var inst_10870 = cljs.core.conj.call(null, inst_10864, inst_10869);
                  var inst_10871 = firstn_10895.call(null, inst_10870, 10);
                  var inst_10864__$1 = inst_10871;
                  var state_10876__$1 = function() {
                    var statearr_10881 = state_10876;
                    statearr_10881[7] = inst_10864__$1;
                    return statearr_10881;
                  }();
                  var statearr_10882_10898 = state_10876__$1;
                  statearr_10882_10898[2] = null;
                  statearr_10882_10898[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  return null;
                }
              }
            }
          }
        };
      }(c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895);
      return function(switch__7990__auto__, c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895) {
        return function() {
          var m_clj$c9$reactive$core$state_machine__7991__auto__ = null;
          var m_clj$c9$reactive$core$state_machine__7991__auto____0 = function() {
            var statearr_10886 = [null, null, null, null, null, null, null, null, null];
            statearr_10886[0] = m_clj$c9$reactive$core$state_machine__7991__auto__;
            statearr_10886[1] = 1;
            return statearr_10886;
          };
          var m_clj$c9$reactive$core$state_machine__7991__auto____1 = function(state_10876) {
            while (true) {
              var ret_value__7992__auto__ = function() {
                try {
                  while (true) {
                    var result__7993__auto__ = switch__7990__auto__.call(null, state_10876);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      continue;
                    } else {
                      return result__7993__auto__;
                    }
                    break;
                  }
                } catch (e10887) {
                  if (e10887 instanceof Object) {
                    var ex__7994__auto__ = e10887;
                    var statearr_10888_10899 = state_10876;
                    statearr_10888_10899[5] = ex__7994__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10876);
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    throw e10887;
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                var G__10900 = state_10876;
                state_10876 = G__10900;
                continue;
              } else {
                return ret_value__7992__auto__;
              }
              break;
            }
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__ = function(state_10876) {
            switch(arguments.length) {
              case 0:
                return m_clj$c9$reactive$core$state_machine__7991__auto____0.call(this);
              case 1:
                return m_clj$c9$reactive$core$state_machine__7991__auto____1.call(this, state_10876);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$state_machine__7991__auto____0;
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$state_machine__7991__auto____1;
          return m_clj$c9$reactive$core$state_machine__7991__auto__;
        }();
      }(switch__7990__auto__, c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895);
    }();
    var state__8057__auto__ = function() {
      var statearr_10889 = f__8056__auto__.call(null);
      statearr_10889[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto___10896;
      return statearr_10889;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
  };
}(c__8055__auto___10896, out_10890, c1_10891, c2_10892, c3_10893, c_10894, firstn_10895));
var out_10902 = m_clj.c9.common.by_id.call(null, "ex-9-12-out");
var events_10903 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yolk.bacon.interval.call(null, 250, 1), yolk.bacon.interval.call(null, 1E3, 2), yolk.bacon.interval.call(null, 1500, 3)], null);
yolk.bacon.on_value.call(null, yolk.bacon.sliding_window.call(null, yolk.bacon.merge_all.call(null, events_10903), 10), function(out_10902, events_10903) {
  return function(p1__10901_SHARP_) {
    return m_clj.c9.common.set_html_BANG_.call(null, out_10902, m_clj.c9.reactive.core.render_div.call(null, p1__10901_SHARP_));
  };
}(out_10902, events_10903));
m_clj.c9.reactive.core.listen = function m_clj$c9$reactive$core$listen(var_args) {
  var args10904 = [];
  var len__5726__auto___10907 = arguments.length;
  var i__5727__auto___10908 = 0;
  while (true) {
    if (i__5727__auto___10908 < len__5726__auto___10907) {
      args10904.push(arguments[i__5727__auto___10908]);
      var G__10909 = i__5727__auto___10908 + 1;
      i__5727__auto___10908 = G__10909;
      continue;
    } else {
    }
    break;
  }
  var G__10906 = args10904.length;
  switch(G__10906) {
    case 2:
      return m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10904.length)].join(""));;
  }
};
m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$2 = function(el, type) {
  return m_clj.c9.reactive.core.listen.call(null, el, type, null);
};
m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$3 = function(el, type, f) {
  return m_clj.c9.reactive.core.listen.call(null, el, type, f, cljs.core.async.chan.call(null));
};
m_clj.c9.reactive.core.listen.cljs$core$IFn$_invoke$arity$4 = function(el, type, f, out) {
  goog.events.listen(el, type, function(e) {
    if (cljs.core.truth_(f)) {
      f.call(null, e);
    } else {
    }
    return cljs.core.async.put_BANG_.call(null, out, e);
  });
  return out;
};
m_clj.c9.reactive.core.listen.cljs$lang$maxFixedArity = 4;
m_clj.c9.reactive.core.offset = function m_clj$c9$reactive$core$offset(el) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [goog.style.getPageOffsetLeft(el), goog.style.getPageOffsetTop(el)], null);
};
var el_10945 = m_clj.c9.common.by_id.call(null, "ex-9-14");
var out_10946 = m_clj.c9.common.by_id.call(null, "ex-9-14-out");
var events_chan_10947 = m_clj.c9.reactive.core.listen.call(null, el_10945, goog.events.EventType.MOUSEMOVE);
var vec__10911_10948 = m_clj.c9.reactive.core.offset.call(null, el_10945);
var left_10949 = cljs.core.nth.call(null, vec__10911_10948, 0, null);
var top_10950 = cljs.core.nth.call(null, vec__10911_10948, 1, null);
var location_10951 = function(el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950) {
  return function(e) {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), e.offsetX + (left_10949 | 0), new cljs.core.Keyword(null, "y", "y", -1757859776), e.offsetY + (top_10950 | 0)], null);
  };
}(el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950);
var c__8055__auto___10952 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951) {
  return function() {
    var f__8056__auto__ = function() {
      var switch__7990__auto__ = function(c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951) {
        return function(state_10928) {
          var state_val_10929 = state_10928[1];
          if (state_val_10929 === 1) {
            var state_10928__$1 = state_10928;
            var statearr_10930_10953 = state_10928__$1;
            statearr_10930_10953[2] = null;
            statearr_10930_10953[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
          } else {
            if (state_val_10929 === 2) {
              var state_10928__$1 = state_10928;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10928__$1, 4, events_chan_10947);
            } else {
              if (state_val_10929 === 3) {
                var inst_10926 = state_10928[2];
                var state_10928__$1 = state_10928;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10928__$1, inst_10926);
              } else {
                if (state_val_10929 === 4) {
                  var inst_10914 = state_10928[7];
                  var inst_10914__$1 = state_10928[2];
                  var state_10928__$1 = function() {
                    var statearr_10931 = state_10928;
                    statearr_10931[7] = inst_10914__$1;
                    return statearr_10931;
                  }();
                  if (cljs.core.truth_(inst_10914__$1)) {
                    var statearr_10932_10954 = state_10928__$1;
                    statearr_10932_10954[1] = 5;
                  } else {
                    var statearr_10933_10955 = state_10928__$1;
                    statearr_10933_10955[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10929 === 5) {
                    var inst_10914 = state_10928[7];
                    var inst_10916 = location_10951.call(null, inst_10914);
                    var inst_10917 = (new cljs.core.Keyword(null, "x", "x", 2099068185)).cljs$core$IFn$_invoke$arity$1(inst_10916);
                    var inst_10918 = (new cljs.core.Keyword(null, "y", "y", -1757859776)).cljs$core$IFn$_invoke$arity$1(inst_10916);
                    var inst_10919 = [cljs.core.str(inst_10917), cljs.core.str(", "), cljs.core.str(inst_10918)].join("");
                    var inst_10920 = m_clj.c9.common.set_html_BANG_.call(null, out_10946, inst_10919);
                    var state_10928__$1 = function() {
                      var statearr_10934 = state_10928;
                      statearr_10934[8] = inst_10920;
                      return statearr_10934;
                    }();
                    var statearr_10935_10956 = state_10928__$1;
                    statearr_10935_10956[2] = null;
                    statearr_10935_10956[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10929 === 6) {
                      var state_10928__$1 = state_10928;
                      var statearr_10936_10957 = state_10928__$1;
                      statearr_10936_10957[2] = null;
                      statearr_10936_10957[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10929 === 7) {
                        var inst_10924 = state_10928[2];
                        var state_10928__$1 = state_10928;
                        var statearr_10937_10958 = state_10928__$1;
                        statearr_10937_10958[2] = inst_10924;
                        statearr_10937_10958[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          }
        };
      }(c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951);
      return function(switch__7990__auto__, c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951) {
        return function() {
          var m_clj$c9$reactive$core$state_machine__7991__auto__ = null;
          var m_clj$c9$reactive$core$state_machine__7991__auto____0 = function() {
            var statearr_10941 = [null, null, null, null, null, null, null, null, null];
            statearr_10941[0] = m_clj$c9$reactive$core$state_machine__7991__auto__;
            statearr_10941[1] = 1;
            return statearr_10941;
          };
          var m_clj$c9$reactive$core$state_machine__7991__auto____1 = function(state_10928) {
            while (true) {
              var ret_value__7992__auto__ = function() {
                try {
                  while (true) {
                    var result__7993__auto__ = switch__7990__auto__.call(null, state_10928);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      continue;
                    } else {
                      return result__7993__auto__;
                    }
                    break;
                  }
                } catch (e10942) {
                  if (e10942 instanceof Object) {
                    var ex__7994__auto__ = e10942;
                    var statearr_10943_10959 = state_10928;
                    statearr_10943_10959[5] = ex__7994__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10928);
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    throw e10942;
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                var G__10960 = state_10928;
                state_10928 = G__10960;
                continue;
              } else {
                return ret_value__7992__auto__;
              }
              break;
            }
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__ = function(state_10928) {
            switch(arguments.length) {
              case 0:
                return m_clj$c9$reactive$core$state_machine__7991__auto____0.call(this);
              case 1:
                return m_clj$c9$reactive$core$state_machine__7991__auto____1.call(this, state_10928);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$state_machine__7991__auto____0;
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$state_machine__7991__auto____1;
          return m_clj$c9$reactive$core$state_machine__7991__auto__;
        }();
      }(switch__7990__auto__, c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951);
    }();
    var state__8057__auto__ = function() {
      var statearr_10944 = f__8056__auto__.call(null);
      statearr_10944[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto___10952;
      return statearr_10944;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
  };
}(c__8055__auto___10952, el_10945, out_10946, events_chan_10947, vec__10911_10948, left_10949, top_10950, location_10951));
var el_10964 = m_clj.c9.common.by_id.call(null, "ex-9-15");
var out_10965 = m_clj.c9.common.by_id.call(null, "ex-9-15-out");
var events_10966 = yolk.bacon.from_event_target.call(null, el_10964, "mousemove");
yolk.bacon.on_value.call(null, yolk.bacon.map.call(null, yolk.bacon.map.call(null, events_10966, cljs.core.juxt.call(null, function(el_10964, out_10965, events_10966) {
  return function(e) {
    return e.pageX;
  };
}(el_10964, out_10965, events_10966), function(el_10964, out_10965, events_10966) {
  return function(e) {
    return e.pageY;
  };
}(el_10964, out_10965, events_10966))), function(el_10964, out_10965, events_10966) {
  return function(p__10962) {
    var vec__10963 = p__10962;
    var x = cljs.core.nth.call(null, vec__10963, 0, null);
    var y = cljs.core.nth.call(null, vec__10963, 1, null);
    return [cljs.core.str(x), cljs.core.str(", "), cljs.core.str(y)].join("");
  };
}(el_10964, out_10965, events_10966)), function(el_10964, out_10965, events_10966) {
  return function(p1__10961_SHARP_) {
    return m_clj.c9.common.set_html_BANG_.call(null, out_10965, p1__10961_SHARP_);
  };
}(el_10964, out_10965, events_10966));
m_clj.c9.reactive.core.chan_search = function m_clj$c9$reactive$core$chan_search(kind) {
  return function(query) {
    var c__8055__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto__) {
      return function() {
        var f__8056__auto__ = function() {
          var switch__7990__auto__ = function(c__8055__auto__) {
            return function(state_10993) {
              var state_val_10994 = state_10993[1];
              if (state_val_10994 === 1) {
                var inst_10985 = cljs.core.rand_int.call(null, 100);
                var inst_10986 = cljs.core.async.timeout.call(null, inst_10985);
                var state_10993__$1 = state_10993;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10993__$1, 2, inst_10986);
              } else {
                if (state_val_10994 === 2) {
                  var inst_10988 = state_10993[2];
                  var inst_10989 = cljs.core.PersistentVector.EMPTY_NODE;
                  var inst_10990 = [kind, query];
                  var inst_10991 = new cljs.core.PersistentVector(null, 2, 5, inst_10989, inst_10990, null);
                  var state_10993__$1 = function() {
                    var statearr_10995 = state_10993;
                    statearr_10995[7] = inst_10988;
                    return statearr_10995;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10993__$1, inst_10991);
                } else {
                  return null;
                }
              }
            };
          }(c__8055__auto__);
          return function(switch__7990__auto__, c__8055__auto__) {
            return function() {
              var m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__ = null;
              var m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____0 = function() {
                var statearr_10999 = [null, null, null, null, null, null, null, null];
                statearr_10999[0] = m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__;
                statearr_10999[1] = 1;
                return statearr_10999;
              };
              var m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____1 = function(state_10993) {
                while (true) {
                  var ret_value__7992__auto__ = function() {
                    try {
                      while (true) {
                        var result__7993__auto__ = switch__7990__auto__.call(null, state_10993);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__7993__auto__;
                        }
                        break;
                      }
                    } catch (e11000) {
                      if (e11000 instanceof Object) {
                        var ex__7994__auto__ = e11000;
                        var statearr_11001_11003 = state_10993;
                        statearr_11001_11003[5] = ex__7994__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10993);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11000;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11004 = state_10993;
                    state_10993 = G__11004;
                    continue;
                  } else {
                    return ret_value__7992__auto__;
                  }
                  break;
                }
              };
              m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__ = function(state_10993) {
                switch(arguments.length) {
                  case 0:
                    return m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____0.call(this);
                  case 1:
                    return m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____1.call(this, state_10993);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____0;
              m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto____1;
              return m_clj$c9$reactive$core$chan_search_$_state_machine__7991__auto__;
            }();
          }(switch__7990__auto__, c__8055__auto__);
        }();
        var state__8057__auto__ = function() {
          var statearr_11002 = f__8056__auto__.call(null);
          statearr_11002[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto__;
          return statearr_11002;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
      };
    }(c__8055__auto__));
    return c__8055__auto__;
  };
};
m_clj.c9.reactive.core.chan_web1 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "web1", "web1", -1174650695));
m_clj.c9.reactive.core.chan_web2 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "web2", "web2", -1084558679));
m_clj.c9.reactive.core.chan_image1 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "image1", "image1", -1807775062));
m_clj.c9.reactive.core.chan_image2 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "image2", "image2", 1782942225));
m_clj.c9.reactive.core.chan_video1 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "video1", "video1", 2082827824));
m_clj.c9.reactive.core.chan_video2 = m_clj.c9.reactive.core.chan_search.call(null, new cljs.core.Keyword(null, "video2", "video2", 1533294772));
m_clj.c9.reactive.core.chan_search_all = function m_clj$c9$reactive$core$chan_search_all(var_args) {
  var args__5733__auto__ = [];
  var len__5726__auto___11011 = arguments.length;
  var i__5727__auto___11012 = 0;
  while (true) {
    if (i__5727__auto___11012 < len__5726__auto___11011) {
      args__5733__auto__.push(arguments[i__5727__auto___11012]);
      var G__11013 = i__5727__auto___11012 + 1;
      i__5727__auto___11012 = G__11013;
      continue;
    } else {
    }
    break;
  }
  var argseq__5734__auto__ = 1 < args__5733__auto__.length ? new cljs.core.IndexedSeq(args__5733__auto__.slice(1), 0) : null;
  return m_clj.c9.reactive.core.chan_search_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5734__auto__);
};
m_clj.c9.reactive.core.chan_search_all.cljs$core$IFn$_invoke$arity$variadic = function(query, searches) {
  var cs = function() {
    var iter__5440__auto__ = function m_clj$c9$reactive$core$iter__11007(s__11008) {
      return new cljs.core.LazySeq(null, function() {
        var s__11008__$1 = s__11008;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__11008__$1);
          if (temp__4425__auto__) {
            var s__11008__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11008__$2)) {
              var c__5438__auto__ = cljs.core.chunk_first.call(null, s__11008__$2);
              var size__5439__auto__ = cljs.core.count.call(null, c__5438__auto__);
              var b__11010 = cljs.core.chunk_buffer.call(null, size__5439__auto__);
              if (function() {
                var i__11009 = 0;
                while (true) {
                  if (i__11009 < size__5439__auto__) {
                    var s = cljs.core._nth.call(null, c__5438__auto__, i__11009);
                    cljs.core.chunk_append.call(null, b__11010, s.call(null, query));
                    var G__11014 = i__11009 + 1;
                    i__11009 = G__11014;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11010), m_clj$c9$reactive$core$iter__11007.call(null, cljs.core.chunk_rest.call(null, s__11008__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11010), null);
              }
            } else {
              var s = cljs.core.first.call(null, s__11008__$2);
              return cljs.core.cons.call(null, s.call(null, query), m_clj$c9$reactive$core$iter__11007.call(null, cljs.core.rest.call(null, s__11008__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5440__auto__.call(null, searches);
  }();
  return cljs.core.async.merge.call(null, cljs.core.vec.call(null, cs));
};
m_clj.c9.reactive.core.chan_search_all.cljs$lang$maxFixedArity = 1;
m_clj.c9.reactive.core.chan_search_all.cljs$lang$applyTo = function(seq11005) {
  var G__11006 = cljs.core.first.call(null, seq11005);
  var seq11005__$1 = cljs.core.next.call(null, seq11005);
  return m_clj.c9.reactive.core.chan_search_all.cljs$core$IFn$_invoke$arity$variadic(G__11006, seq11005__$1);
};
m_clj.c9.reactive.core.chan_search_fastest = function m_clj$c9$reactive$core$chan_search_fastest(query) {
  var t = cljs.core.async.timeout.call(null, 80);
  var c1 = m_clj.c9.reactive.core.chan_search_all.call(null, query, m_clj.c9.reactive.core.chan_web1, m_clj.c9.reactive.core.chan_web2);
  var c2 = m_clj.c9.reactive.core.chan_search_all.call(null, query, m_clj.c9.reactive.core.chan_image1, m_clj.c9.reactive.core.chan_image2);
  var c3 = m_clj.c9.reactive.core.chan_search_all.call(null, query, m_clj.c9.reactive.core.chan_video1, m_clj.c9.reactive.core.chan_video2);
  var c = cljs.core.async.merge.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c1, c2, c3], null));
  var c__8055__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto__, t, c1, c2, c3, c) {
    return function() {
      var f__8056__auto__ = function() {
        var switch__7990__auto__ = function(c__8055__auto__, t, c1, c2, c3, c) {
          return function(state_11124) {
            var state_val_11125 = state_11124[1];
            if (state_val_11125 === 7) {
              var inst_11100 = state_11124[7];
              var inst_11102 = state_11124[8];
              var inst_11100__$1 = state_11124[2];
              var inst_11101 = cljs.core.nth.call(null, inst_11100__$1, 0, null);
              var inst_11102__$1 = cljs.core.nth.call(null, inst_11100__$1, 1, null);
              var inst_11103 = cljs.core._EQ_.call(null, inst_11102__$1, c);
              var inst_11104 = cljs.core._EQ_.call(null, inst_11102__$1, t);
              var inst_11105 = inst_11103 || inst_11104;
              var state_11124__$1 = function() {
                var statearr_11126 = state_11124;
                statearr_11126[9] = inst_11101;
                statearr_11126[7] = inst_11100__$1;
                statearr_11126[8] = inst_11102__$1;
                return statearr_11126;
              }();
              if (cljs.core.truth_(inst_11105)) {
                var statearr_11127_11151 = state_11124__$1;
                statearr_11127_11151[1] = 8;
              } else {
                var statearr_11128_11152 = state_11124__$1;
                statearr_11128_11152[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11125 === 1) {
                var inst_11083 = cljs.core.PersistentVector.EMPTY;
                var inst_11084 = 0;
                var inst_11085 = inst_11083;
                var state_11124__$1 = function() {
                  var statearr_11129 = state_11124;
                  statearr_11129[10] = inst_11085;
                  statearr_11129[11] = inst_11084;
                  return statearr_11129;
                }();
                var statearr_11130_11153 = state_11124__$1;
                statearr_11130_11153[2] = null;
                statearr_11130_11153[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11125 === 4) {
                  var inst_11085 = state_11124[10];
                  var state_11124__$1 = state_11124;
                  var statearr_11131_11154 = state_11124__$1;
                  statearr_11131_11154[2] = inst_11085;
                  statearr_11131_11154[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11125 === 13) {
                    var inst_11114 = state_11124[2];
                    var state_11124__$1 = state_11124;
                    var statearr_11132_11155 = state_11124__$1;
                    statearr_11132_11155[2] = inst_11114;
                    statearr_11132_11155[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11125 === 6) {
                      var inst_11120 = state_11124[2];
                      var state_11124__$1 = state_11124;
                      var statearr_11133_11156 = state_11124__$1;
                      statearr_11133_11156[2] = inst_11120;
                      statearr_11133_11156[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11125 === 3) {
                        var inst_11122 = state_11124[2];
                        var state_11124__$1 = state_11124;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11124__$1, inst_11122);
                      } else {
                        if (state_val_11125 === 12) {
                          var state_11124__$1 = state_11124;
                          var statearr_11134_11157 = state_11124__$1;
                          statearr_11134_11157[2] = null;
                          statearr_11134_11157[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11125 === 2) {
                            var inst_11084 = state_11124[11];
                            var inst_11087 = cljs.core._EQ_.call(null, inst_11084, 3);
                            var state_11124__$1 = state_11124;
                            if (inst_11087) {
                              var statearr_11135_11158 = state_11124__$1;
                              statearr_11135_11158[1] = 4;
                            } else {
                              var statearr_11136_11159 = state_11124__$1;
                              statearr_11136_11159[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11125 === 11) {
                              var inst_11101 = state_11124[9];
                              var state_11124__$1 = state_11124;
                              var statearr_11137_11160 = state_11124__$1;
                              statearr_11137_11160[2] = inst_11101;
                              statearr_11137_11160[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11125 === 9) {
                                var inst_11102 = state_11124[8];
                                var inst_11110 = cljs.core._EQ_.call(null, inst_11102, new cljs.core.Keyword(null, "default", "default", -1987822328));
                                var state_11124__$1 = state_11124;
                                if (inst_11110) {
                                  var statearr_11138_11161 = state_11124__$1;
                                  statearr_11138_11161[1] = 11;
                                } else {
                                  var statearr_11139_11162 = state_11124__$1;
                                  statearr_11139_11162[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11125 === 5) {
                                  var inst_11084 = state_11124[11];
                                  var inst_11090 = inst_11084 + 1;
                                  var inst_11096 = cljs.core.PersistentVector.EMPTY_NODE;
                                  var inst_11097 = [c, t];
                                  var inst_11098 = new cljs.core.PersistentVector(null, 2, 5, inst_11096, inst_11097, null);
                                  var state_11124__$1 = function() {
                                    var statearr_11140 = state_11124;
                                    statearr_11140[12] = inst_11090;
                                    return statearr_11140;
                                  }();
                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_11124__$1, 7, inst_11098);
                                } else {
                                  if (state_val_11125 === 10) {
                                    var inst_11085 = state_11124[10];
                                    var inst_11090 = state_11124[12];
                                    var inst_11116 = state_11124[2];
                                    var inst_11117 = cljs.core.conj.call(null, inst_11085, inst_11116);
                                    var inst_11084 = inst_11090;
                                    var inst_11085__$1 = inst_11117;
                                    var state_11124__$1 = function() {
                                      var statearr_11141 = state_11124;
                                      statearr_11141[10] = inst_11085__$1;
                                      statearr_11141[11] = inst_11084;
                                      return statearr_11141;
                                    }();
                                    var statearr_11142_11163 = state_11124__$1;
                                    statearr_11142_11163[2] = null;
                                    statearr_11142_11163[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11125 === 8) {
                                      var inst_11100 = state_11124[7];
                                      var inst_11108 = cljs.core.nth.call(null, inst_11100, 0, null);
                                      var state_11124__$1 = state_11124;
                                      var statearr_11143_11164 = state_11124__$1;
                                      statearr_11143_11164[2] = inst_11108;
                                      statearr_11143_11164[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__8055__auto__, t, c1, c2, c3, c);
        return function(switch__7990__auto__, c__8055__auto__, t, c1, c2, c3, c) {
          return function() {
            var m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__ = null;
            var m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____0 = function() {
              var statearr_11147 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11147[0] = m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__;
              statearr_11147[1] = 1;
              return statearr_11147;
            };
            var m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____1 = function(state_11124) {
              while (true) {
                var ret_value__7992__auto__ = function() {
                  try {
                    while (true) {
                      var result__7993__auto__ = switch__7990__auto__.call(null, state_11124);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__7993__auto__;
                      }
                      break;
                    }
                  } catch (e11148) {
                    if (e11148 instanceof Object) {
                      var ex__7994__auto__ = e11148;
                      var statearr_11149_11165 = state_11124;
                      statearr_11149_11165[5] = ex__7994__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11124);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11148;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11166 = state_11124;
                  state_11124 = G__11166;
                  continue;
                } else {
                  return ret_value__7992__auto__;
                }
                break;
              }
            };
            m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__ = function(state_11124) {
              switch(arguments.length) {
                case 0:
                  return m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____0.call(this);
                case 1:
                  return m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____1.call(this, state_11124);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____0;
            m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto____1;
            return m_clj$c9$reactive$core$chan_search_fastest_$_state_machine__7991__auto__;
          }();
        }(switch__7990__auto__, c__8055__auto__, t, c1, c2, c3, c);
      }();
      var state__8057__auto__ = function() {
        var statearr_11150 = f__8056__auto__.call(null);
        statearr_11150[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto__;
        return statearr_11150;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
    };
  }(c__8055__auto__, t, c1, c2, c3, c));
  return c__8055__auto__;
};
var out_11200 = m_clj.c9.common.by_id.call(null, "ex-9-18-out");
var button_11201 = m_clj.c9.common.by_id.call(null, "search-1");
var c_11202 = m_clj.c9.reactive.core.listen.call(null, button_11201, goog.events.EventType.CLICK);
var c__8055__auto___11203 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function(c__8055__auto___11203, out_11200, button_11201, c_11202) {
  return function() {
    var f__8056__auto__ = function() {
      var switch__7990__auto__ = function(c__8055__auto___11203, out_11200, button_11201, c_11202) {
        return function(state_11183) {
          var state_val_11184 = state_11183[1];
          if (state_val_11184 === 1) {
            var state_11183__$1 = state_11183;
            var statearr_11185_11204 = state_11183__$1;
            statearr_11185_11204[2] = null;
            statearr_11185_11204[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
          } else {
            if (state_val_11184 === 2) {
              var state_11183__$1 = state_11183;
              var statearr_11186_11205 = state_11183__$1;
              statearr_11186_11205[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11184 === 3) {
                var inst_11181 = state_11183[2];
                var state_11183__$1 = state_11183;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11183__$1, inst_11181);
              } else {
                if (state_val_11184 === 4) {
                  var state_11183__$1 = state_11183;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11183__$1, 7, c_11202);
                } else {
                  if (state_val_11184 === 5) {
                    var state_11183__$1 = state_11183;
                    var statearr_11188_11206 = state_11183__$1;
                    statearr_11188_11206[2] = null;
                    statearr_11188_11206[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11184 === 6) {
                      var inst_11179 = state_11183[2];
                      var state_11183__$1 = state_11183;
                      var statearr_11189_11207 = state_11183__$1;
                      statearr_11189_11207[2] = inst_11179;
                      statearr_11189_11207[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11184 === 7) {
                        var inst_11170 = state_11183[2];
                        var inst_11171 = m_clj.c9.reactive.core.chan_search_fastest.call(null, "channels");
                        var state_11183__$1 = function() {
                          var statearr_11190 = state_11183;
                          statearr_11190[7] = inst_11170;
                          return statearr_11190;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11183__$1, 8, inst_11171);
                      } else {
                        if (state_val_11184 === 8) {
                          var inst_11173 = state_11183[2];
                          var inst_11174 = [cljs.core.str(inst_11173)].join("");
                          var inst_11175 = m_clj.c9.common.set_html_BANG_.call(null, out_11200, inst_11174);
                          var state_11183__$1 = function() {
                            var statearr_11191 = state_11183;
                            statearr_11191[8] = inst_11175;
                            return statearr_11191;
                          }();
                          var statearr_11192_11208 = state_11183__$1;
                          statearr_11192_11208[2] = null;
                          statearr_11192_11208[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
      }(c__8055__auto___11203, out_11200, button_11201, c_11202);
      return function(switch__7990__auto__, c__8055__auto___11203, out_11200, button_11201, c_11202) {
        return function() {
          var m_clj$c9$reactive$core$state_machine__7991__auto__ = null;
          var m_clj$c9$reactive$core$state_machine__7991__auto____0 = function() {
            var statearr_11196 = [null, null, null, null, null, null, null, null, null];
            statearr_11196[0] = m_clj$c9$reactive$core$state_machine__7991__auto__;
            statearr_11196[1] = 1;
            return statearr_11196;
          };
          var m_clj$c9$reactive$core$state_machine__7991__auto____1 = function(state_11183) {
            while (true) {
              var ret_value__7992__auto__ = function() {
                try {
                  while (true) {
                    var result__7993__auto__ = switch__7990__auto__.call(null, state_11183);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__7993__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      continue;
                    } else {
                      return result__7993__auto__;
                    }
                    break;
                  }
                } catch (e11197) {
                  if (e11197 instanceof Object) {
                    var ex__7994__auto__ = e11197;
                    var statearr_11198_11209 = state_11183;
                    statearr_11198_11209[5] = ex__7994__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11183);
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    throw e11197;
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__7992__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                var G__11210 = state_11183;
                state_11183 = G__11210;
                continue;
              } else {
                return ret_value__7992__auto__;
              }
              break;
            }
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__ = function(state_11183) {
            switch(arguments.length) {
              case 0:
                return m_clj$c9$reactive$core$state_machine__7991__auto____0.call(this);
              case 1:
                return m_clj$c9$reactive$core$state_machine__7991__auto____1.call(this, state_11183);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$0 = m_clj$c9$reactive$core$state_machine__7991__auto____0;
          m_clj$c9$reactive$core$state_machine__7991__auto__.cljs$core$IFn$_invoke$arity$1 = m_clj$c9$reactive$core$state_machine__7991__auto____1;
          return m_clj$c9$reactive$core$state_machine__7991__auto__;
        }();
      }(switch__7990__auto__, c__8055__auto___11203, out_11200, button_11201, c_11202);
    }();
    var state__8057__auto__ = function() {
      var statearr_11199 = f__8056__auto__.call(null);
      statearr_11199[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__8055__auto___11203;
      return statearr_11199;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__8057__auto__);
  };
}(c__8055__auto___11203, out_11200, button_11201, c_11202));
m_clj.c9.reactive.core.frp_search = function m_clj$c9$reactive$core$frp_search(kind) {
  return function(query) {
    return yolk.bacon.later.call(null, cljs.core.rand_int.call(null, 100), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [kind, query], null));
  };
};
m_clj.c9.reactive.core.frp_web1 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "web1", "web1", -1174650695));
m_clj.c9.reactive.core.frp_web2 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "web2", "web2", -1084558679));
m_clj.c9.reactive.core.frp_image1 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "image1", "image1", -1807775062));
m_clj.c9.reactive.core.frp_image2 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "image2", "image2", 1782942225));
m_clj.c9.reactive.core.frp_video1 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "video1", "video1", 2082827824));
m_clj.c9.reactive.core.frp_video2 = m_clj.c9.reactive.core.frp_search.call(null, new cljs.core.Keyword(null, "video2", "video2", 1533294772));
m_clj.c9.reactive.core.frp_search_all = function m_clj$c9$reactive$core$frp_search_all(var_args) {
  var args__5733__auto__ = [];
  var len__5726__auto___11214 = arguments.length;
  var i__5727__auto___11215 = 0;
  while (true) {
    if (i__5727__auto___11215 < len__5726__auto___11214) {
      args__5733__auto__.push(arguments[i__5727__auto___11215]);
      var G__11216 = i__5727__auto___11215 + 1;
      i__5727__auto___11215 = G__11216;
      continue;
    } else {
    }
    break;
  }
  var argseq__5734__auto__ = 1 < args__5733__auto__.length ? new cljs.core.IndexedSeq(args__5733__auto__.slice(1), 0) : null;
  return m_clj.c9.reactive.core.frp_search_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5734__auto__);
};
m_clj.c9.reactive.core.frp_search_all.cljs$core$IFn$_invoke$arity$variadic = function(query, searches) {
  var results = cljs.core.map.call(null, function(p1__11211_SHARP_) {
    return p1__11211_SHARP_.call(null, query);
  }, searches);
  var events = cljs.core.cons.call(null, yolk.bacon.later.call(null, 80, "nil"), results);
  return yolk.bacon.take.call(null, cljs.core.apply.call(null, yolk.bacon.merge, events), 1);
};
m_clj.c9.reactive.core.frp_search_all.cljs$lang$maxFixedArity = 1;
m_clj.c9.reactive.core.frp_search_all.cljs$lang$applyTo = function(seq11212) {
  var G__11213 = cljs.core.first.call(null, seq11212);
  var seq11212__$1 = cljs.core.next.call(null, seq11212);
  return m_clj.c9.reactive.core.frp_search_all.cljs$core$IFn$_invoke$arity$variadic(G__11213, seq11212__$1);
};
m_clj.c9.reactive.core.frp_search_fastest = function m_clj$c9$reactive$core$frp_search_fastest(query) {
  return yolk.bacon.combine_as_array.call(null, m_clj.c9.reactive.core.frp_search_all.call(null, query, m_clj.c9.reactive.core.frp_web1, m_clj.c9.reactive.core.frp_web2), m_clj.c9.reactive.core.frp_search_all.call(null, query, m_clj.c9.reactive.core.frp_image1, m_clj.c9.reactive.core.frp_image2), m_clj.c9.reactive.core.frp_search_all.call(null, query, m_clj.c9.reactive.core.frp_video1, m_clj.c9.reactive.core.frp_video2));
};
var out_11218 = m_clj.c9.common.by_id.call(null, "ex-9-21-out");
var button_11219 = m_clj.c9.common.by_id.call(null, "search-2");
var events_11220 = yolk.bacon.from_event_target.call(null, button_11219, "click");
yolk.bacon.on_value.call(null, yolk.bacon.flat_map_latest.call(null, events_11220, function(out_11218, button_11219, events_11220) {
  return function() {
    return m_clj.c9.reactive.core.frp_search_fastest.call(null, "events");
  };
}(out_11218, button_11219, events_11220)), function(out_11218, button_11219, events_11220) {
  return function(p1__11217_SHARP_) {
    return m_clj.c9.common.set_html_BANG_.call(null, out_11218, p1__11217_SHARP_);
  };
}(out_11218, button_11219, events_11220));
